{"version":3,"file":"929-7b726d7a438661e054b4.js","mappings":"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","sources":["webpack://calculator-constructor/./node_modules/classnames/bind.js","webpack://calculator-constructor/./node_modules/classnames/index.js","webpack://calculator-constructor/./src/svgr/eye.tsx","webpack://calculator-constructor/./src/svgr/selector.tsx","webpack://calculator-constructor/./src/components/StateSwitch/index.tsx","webpack://calculator-constructor/./src/components/StateSwitch/StateSwitch.module.scss","webpack://calculator-constructor/./node_modules/@dnd-kit/utilities/dist/utilities.esm.js","webpack://calculator-constructor/./node_modules/@dnd-kit/accessibility/dist/accessibility.esm.js","webpack://calculator-constructor/./node_modules/@dnd-kit/core/dist/core.esm.js","webpack://calculator-constructor/./src/components/CalculatorParts/DroppableArea/DroppableArea.tsx","webpack://calculator-constructor/./src/components/CalculatorParts/DroppableArea/styles.module.scss","webpack://calculator-constructor/./src/svgr/image.tsx","webpack://calculator-constructor/./node_modules/@dnd-kit/sortable/dist/sortable.esm.js","webpack://calculator-constructor/./src/components/Button/index.tsx","webpack://calculator-constructor/./src/components/Button/Button.module.scss","webpack://calculator-constructor/./src/utils/dndUtils.ts","webpack://calculator-constructor/./src/components/CalculatorParts/EqualityBlock/index.tsx","webpack://calculator-constructor/./src/components/CalculatorParts/MonitorBlock/index.tsx","webpack://calculator-constructor/./src/components/CalculatorParts/MonitorBlock/styles.module.scss","webpack://calculator-constructor/./src/components/CalculatorParts/NumbersBlock/index.tsx","webpack://calculator-constructor/./src/components/CalculatorParts/NumbersBlock/styles.module.scss","webpack://calculator-constructor/./src/components/CalculatorParts/SignsBlock/index.tsx","webpack://calculator-constructor/./src/components/CalculatorParts/SignsBlock/styles.module.scss","webpack://calculator-constructor/./src/pages/Workspace/RenderElement.tsx","webpack://calculator-constructor/./src/pages/Workspace/RenderAreaElements.tsx","webpack://calculator-constructor/./src/pages/Workspace/index.tsx","webpack://calculator-constructor/./src/pages/Workspace/styles.module.scss"],"sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(this && this[arg] || arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(this, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(this && this[key] || key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from \"react\";\n\nconst EyeSvg: React.FC = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    width={20}\n    height={20}\n    viewBox='0 0 20 20'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n    {...props}\n  >\n    <path\n      d='M11.7678 11.7678C12.2366 11.2989 12.5 10.663 12.5 10C12.5 9.33696 12.2366 8.70107 11.7678 8.23223C11.2989 7.76339 10.663 7.5 10 7.5C9.33696 7.5 8.70107 7.76339 8.23223 8.23223C7.76339 8.70107 7.5 9.33696 7.5 10C7.5 10.663 7.76339 11.2989 8.23223 11.7678C8.70107 12.2366 9.33696 12.5 10 12.5C10.663 12.5 11.2989 12.2366 11.7678 11.7678Z'\n      stroke='#4D5562'\n      strokeWidth={2}\n      strokeLinecap='round'\n      strokeLinejoin='round'\n    />\n    <path\n      d='M2.04834 9.99999C3.11001 6.61916 6.26917 4.16666 10 4.16666C13.7317 4.16666 16.89 6.61916 17.9517 9.99999C16.89 13.3808 13.7317 15.8333 10 15.8333C6.26917 15.8333 3.11001 13.3808 2.04834 9.99999Z'\n      stroke='#4D5562'\n      strokeWidth={2}\n      strokeLinecap='round'\n      strokeLinejoin='round'\n    />\n  </svg>\n);\n\nexport default EyeSvg;\n","import React from \"react\";\n\nconst SelectorSvg: React.FC = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    width={20}\n    height={20}\n    viewBox='0 0 20 20'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n    {...props}\n  >\n    <path\n      d='M7.5 13.3333L4.16666 10L7.5 6.66668M12.5 6.66668L15.8333 10L12.5 13.3333'\n      stroke='#4D5562'\n      strokeWidth={2}\n      strokeLinecap='round'\n      strokeLinejoin='round'\n    />\n  </svg>\n);\n\nexport default SelectorSvg;\n","import React from \"react\";\nimport classNames from \"classnames/bind\";\nimport { ConstructorState } from \"@store/columns/types\";\nimport EyeSvg from \"@src/svgr/eye\";\nimport SelectorSvg from \"@src/svgr/selector\";\nimport styles from \"./StateSwitch.module.scss\";\n\nconst cnb = classNames.bind(styles);\n\ninterface Props {\n  readonly active?: ConstructorState;\n  readonly onClick?: (tab: ConstructorState) => void;\n}\n\nconst StateSwitch: React.FC<Props> = ({ active, onClick }) => (\n  <div className={cnb(\"calculatorWrapper\")}>\n    <div\n      onClick={() => onClick?.(ConstructorState.runtime)}\n      className={cnb(\"item\", { selected: active === ConstructorState.runtime })}\n    >\n      <EyeSvg />\n      <label className={cnb(\"text\")}>Runtime</label>\n    </div>\n    <div\n      onClick={() => onClick?.(ConstructorState.constructor)}\n      className={cnb(\"item\", { selected: active === ConstructorState.constructor })}\n    >\n      <SelectorSvg />\n      <label className={cnb(\"text\")}>Constructor</label>\n    </div>\n  </div>\n);\n\nexport default StateSwitch;\n","// extracted by mini-css-extract-plugin\nexport default {\"calculatorWrapper\":\"od6UJ8tg0Fft7Ylzro3+8A==\",\"item\":\"RXa3PtBWcc26CrSkuepTKA==\",\"text\":\"Kbu9oHAF391Tm5hV5w42zg==\",\"selected\":\"-vgoDKUG00UTf6KkKMKQ3A==\"};","import { useMemo, useLayoutEffect, useEffect, useRef, useCallback } from 'react';\n\nfunction useCombinedRefs(...refs) {\n  return useMemo(() => node => {\n    refs.forEach(ref => ref(node));\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  refs);\n}\n\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nconst canUseDOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\nfunction isWindow(element) {\n  const elementString = Object.prototype.toString.call(element);\n  return elementString === '[object Window]' || // In Electron context the Window object serializes to [object global]\n  elementString === '[object global]';\n}\n\nfunction isNode(node) {\n  return 'nodeType' in node;\n}\n\nfunction getWindow(target) {\n  var _target$ownerDocument, _target$ownerDocument2;\n\n  if (!target) {\n    return window;\n  }\n\n  if (isWindow(target)) {\n    return target;\n  }\n\n  if (!isNode(target)) {\n    return window;\n  }\n\n  return (_target$ownerDocument = (_target$ownerDocument2 = target.ownerDocument) == null ? void 0 : _target$ownerDocument2.defaultView) != null ? _target$ownerDocument : window;\n}\n\nfunction isDocument(node) {\n  const {\n    Document\n  } = getWindow(node);\n  return node instanceof Document;\n}\n\nfunction isHTMLElement(node) {\n  if (isWindow(node)) {\n    return false;\n  }\n\n  return node instanceof getWindow(node).HTMLElement;\n}\n\nfunction isSVGElement(node) {\n  return node instanceof getWindow(node).SVGElement;\n}\n\nfunction getOwnerDocument(target) {\n  if (!target) {\n    return document;\n  }\n\n  if (isWindow(target)) {\n    return target.document;\n  }\n\n  if (!isNode(target)) {\n    return document;\n  }\n\n  if (isDocument(target)) {\n    return target;\n  }\n\n  if (isHTMLElement(target)) {\n    return target.ownerDocument;\n  }\n\n  return document;\n}\n\n/**\r\n * A hook that resolves to useEffect on the server and useLayoutEffect on the client\r\n * @param callback {function} Callback function that is invoked when the dependencies of the hook change\r\n */\n\nconst useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\n\nfunction useInterval() {\n  const intervalRef = useRef(null);\n  const set = useCallback((listener, duration) => {\n    intervalRef.current = setInterval(listener, duration);\n  }, []);\n  const clear = useCallback(() => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  }, []);\n  return [set, clear];\n}\n\nfunction useLatestValue(value, dependencies = [value]) {\n  const valueRef = useRef(value);\n  useIsomorphicLayoutEffect(() => {\n    if (valueRef.current !== value) {\n      valueRef.current = value;\n    }\n  }, dependencies);\n  return valueRef;\n}\n\nfunction useLazyMemo(callback, dependencies) {\n  const valueRef = useRef();\n  return useMemo(() => {\n    const newValue = callback(valueRef.current);\n    valueRef.current = newValue;\n    return newValue;\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [...dependencies]);\n}\n\nfunction useNodeRef(onChange) {\n  const onChangeRef = useLatestValue(onChange);\n  const node = useRef(null);\n  const setNodeRef = useCallback(element => {\n    if (element !== node.current) {\n      onChangeRef.current == null ? void 0 : onChangeRef.current(element, node.current);\n    }\n\n    node.current = element;\n  }, //eslint-disable-next-line\n  []);\n  return [node, setNodeRef];\n}\n\nlet ids = {};\nfunction useUniqueId(prefix, value) {\n  return useMemo(() => {\n    if (value) {\n      return value;\n    }\n\n    const id = ids[prefix] == null ? 0 : ids[prefix] + 1;\n    ids[prefix] = id;\n    return `${prefix}-${id}`;\n  }, [prefix, value]);\n}\n\nfunction createAdjustmentFn(modifier) {\n  return (object, ...adjustments) => {\n    return adjustments.reduce((accumulator, adjustment) => {\n      const entries = Object.entries(adjustment);\n\n      for (const [key, valueAdjustment] of entries) {\n        const value = accumulator[key];\n\n        if (value != null) {\n          accumulator[key] = value + modifier * valueAdjustment;\n        }\n      }\n\n      return accumulator;\n    }, { ...object\n    });\n  };\n}\n\nconst add = /*#__PURE__*/createAdjustmentFn(1);\nconst subtract = /*#__PURE__*/createAdjustmentFn(-1);\n\nfunction hasViewportRelativeCoordinates(event) {\n  return 'clientX' in event && 'clientY' in event;\n}\n\nfunction isKeyboardEvent(event) {\n  if (!event) {\n    return false;\n  }\n\n  const {\n    KeyboardEvent\n  } = getWindow(event.target);\n  return KeyboardEvent && event instanceof KeyboardEvent;\n}\n\nfunction isTouchEvent(event) {\n  if (!event) {\n    return false;\n  }\n\n  const {\n    TouchEvent\n  } = getWindow(event.target);\n  return TouchEvent && event instanceof TouchEvent;\n}\n\n/**\r\n * Returns the normalized x and y coordinates for mouse and touch events.\r\n */\n\nfunction getEventCoordinates(event) {\n  if (isTouchEvent(event)) {\n    if (event.touches && event.touches.length) {\n      const {\n        clientX: x,\n        clientY: y\n      } = event.touches[0];\n      return {\n        x,\n        y\n      };\n    } else if (event.changedTouches && event.changedTouches.length) {\n      const {\n        clientX: x,\n        clientY: y\n      } = event.changedTouches[0];\n      return {\n        x,\n        y\n      };\n    }\n  }\n\n  if (hasViewportRelativeCoordinates(event)) {\n    return {\n      x: event.clientX,\n      y: event.clientY\n    };\n  }\n\n  return null;\n}\n\nconst CSS = /*#__PURE__*/Object.freeze({\n  Translate: {\n    toString(transform) {\n      if (!transform) {\n        return;\n      }\n\n      const {\n        x,\n        y\n      } = transform;\n      return `translate3d(${x ? Math.round(x) : 0}px, ${y ? Math.round(y) : 0}px, 0)`;\n    }\n\n  },\n  Scale: {\n    toString(transform) {\n      if (!transform) {\n        return;\n      }\n\n      const {\n        scaleX,\n        scaleY\n      } = transform;\n      return `scaleX(${scaleX}) scaleY(${scaleY})`;\n    }\n\n  },\n  Transform: {\n    toString(transform) {\n      if (!transform) {\n        return;\n      }\n\n      return [CSS.Translate.toString(transform), CSS.Scale.toString(transform)].join(' ');\n    }\n\n  },\n  Transition: {\n    toString({\n      property,\n      duration,\n      easing\n    }) {\n      return `${property} ${duration}ms ${easing}`;\n    }\n\n  }\n});\n\nexport { CSS, add, canUseDOM, getEventCoordinates, getOwnerDocument, getWindow, hasViewportRelativeCoordinates, isDocument, isHTMLElement, isKeyboardEvent, isNode, isSVGElement, isTouchEvent, isWindow, subtract, useCombinedRefs, useInterval, useIsomorphicLayoutEffect, useLatestValue, useLazyMemo, useNodeRef, useUniqueId };\n//# sourceMappingURL=utilities.esm.js.map\n","import React, { useState, useCallback } from 'react';\n\nconst hiddenStyles = {\n  display: 'none'\n};\nfunction HiddenText({\n  id,\n  value\n}) {\n  return React.createElement(\"div\", {\n    id: id,\n    style: hiddenStyles\n  }, value);\n}\n\nconst visuallyHidden = {\n  position: 'absolute',\n  width: 1,\n  height: 1,\n  margin: -1,\n  border: 0,\n  padding: 0,\n  overflow: 'hidden',\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(100%)',\n  whiteSpace: 'nowrap'\n};\nfunction LiveRegion({\n  id,\n  announcement\n}) {\n  return React.createElement(\"div\", {\n    id: id,\n    style: visuallyHidden,\n    role: \"status\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": true\n  }, announcement);\n}\n\nfunction useAnnouncement() {\n  const [announcement, setAnnouncement] = useState('');\n  const announce = useCallback(value => {\n    if (value != null) {\n      setAnnouncement(value);\n    }\n  }, []);\n  return {\n    announce,\n    announcement\n  };\n}\n\nexport { HiddenText, LiveRegion, useAnnouncement };\n//# sourceMappingURL=accessibility.esm.js.map\n","import React, { createContext, useContext, useRef, useEffect, useState, useMemo, useCallback, memo, useReducer } from 'react';\nimport { createPortal, unstable_batchedUpdates } from 'react-dom';\nimport { useUniqueId, getEventCoordinates, getWindow, isDocument, isHTMLElement, isSVGElement, canUseDOM, isWindow, isNode, getOwnerDocument, add, useInterval, useLazyMemo, useNodeRef, isKeyboardEvent, subtract, useLatestValue, useIsomorphicLayoutEffect, CSS } from '@dnd-kit/utilities';\nimport { useAnnouncement, HiddenText, LiveRegion } from '@dnd-kit/accessibility';\n\nconst screenReaderInstructions = {\n  draggable: `\n    To pick up a draggable item, press the space bar.\n    While dragging, use the arrow keys to move the item.\n    Press space again to drop the item in its new position, or press escape to cancel.\n  `\n};\nconst defaultAnnouncements = {\n  onDragStart(id) {\n    return `Picked up draggable item ${id}.`;\n  },\n\n  onDragOver(id, overId) {\n    if (overId) {\n      return `Draggable item ${id} was moved over droppable area ${overId}.`;\n    }\n\n    return `Draggable item ${id} is no longer over a droppable area.`;\n  },\n\n  onDragEnd(id, overId) {\n    if (overId) {\n      return `Draggable item ${id} was dropped over droppable area ${overId}`;\n    }\n\n    return `Draggable item ${id} was dropped.`;\n  },\n\n  onDragCancel(id) {\n    return `Dragging was cancelled. Draggable item ${id} was dropped.`;\n  }\n\n};\n\nvar Action;\n\n(function (Action) {\n  Action[\"DragStart\"] = \"dragStart\";\n  Action[\"DragMove\"] = \"dragMove\";\n  Action[\"DragEnd\"] = \"dragEnd\";\n  Action[\"DragCancel\"] = \"dragCancel\";\n  Action[\"DragOver\"] = \"dragOver\";\n  Action[\"RegisterDroppable\"] = \"registerDroppable\";\n  Action[\"SetDroppableDisabled\"] = \"setDroppableDisabled\";\n  Action[\"UnregisterDroppable\"] = \"unregisterDroppable\";\n})(Action || (Action = {}));\n\nfunction noop(..._args) {}\n\nclass DroppableContainersMap extends Map {\n  get(id) {\n    var _super$get;\n\n    return id != null ? (_super$get = super.get(id)) != null ? _super$get : undefined : undefined;\n  }\n\n  toArray() {\n    return Array.from(this.values());\n  }\n\n  getEnabled() {\n    return this.toArray().filter(({\n      disabled\n    }) => !disabled);\n  }\n\n  getNodeFor(id) {\n    var _this$get$node$curren, _this$get;\n\n    return (_this$get$node$curren = (_this$get = this.get(id)) == null ? void 0 : _this$get.node.current) != null ? _this$get$node$curren : undefined;\n  }\n\n}\n\nconst defaultPublicContext = {\n  activatorEvent: null,\n  active: null,\n  activeNode: null,\n  activeNodeRect: null,\n  collisions: null,\n  containerNodeRect: null,\n  draggableNodes: {},\n  droppableRects: /*#__PURE__*/new Map(),\n  droppableContainers: /*#__PURE__*/new DroppableContainersMap(),\n  over: null,\n  dragOverlay: {\n    nodeRef: {\n      current: null\n    },\n    rect: null,\n    setRef: noop\n  },\n  scrollableAncestors: [],\n  scrollableAncestorRects: [],\n  measureDroppableContainers: noop,\n  windowRect: null,\n  measuringScheduled: false\n};\nconst defaultInternalContext = {\n  activatorEvent: null,\n  activators: [],\n  active: null,\n  activeNodeRect: null,\n  ariaDescribedById: {\n    draggable: ''\n  },\n  dispatch: noop,\n  draggableNodes: {},\n  over: null,\n  measureDroppableContainers: noop\n};\nconst InternalContext = /*#__PURE__*/createContext(defaultInternalContext);\nconst PublicContext = /*#__PURE__*/createContext(defaultPublicContext);\n\nfunction getInitialState() {\n  return {\n    draggable: {\n      active: null,\n      initialCoordinates: {\n        x: 0,\n        y: 0\n      },\n      nodes: {},\n      translate: {\n        x: 0,\n        y: 0\n      }\n    },\n    droppable: {\n      containers: new DroppableContainersMap()\n    }\n  };\n}\nfunction reducer(state, action) {\n  switch (action.type) {\n    case Action.DragStart:\n      return { ...state,\n        draggable: { ...state.draggable,\n          initialCoordinates: action.initialCoordinates,\n          active: action.active\n        }\n      };\n\n    case Action.DragMove:\n      if (!state.draggable.active) {\n        return state;\n      }\n\n      return { ...state,\n        draggable: { ...state.draggable,\n          translate: {\n            x: action.coordinates.x - state.draggable.initialCoordinates.x,\n            y: action.coordinates.y - state.draggable.initialCoordinates.y\n          }\n        }\n      };\n\n    case Action.DragEnd:\n    case Action.DragCancel:\n      return { ...state,\n        draggable: { ...state.draggable,\n          active: null,\n          initialCoordinates: {\n            x: 0,\n            y: 0\n          },\n          translate: {\n            x: 0,\n            y: 0\n          }\n        }\n      };\n\n    case Action.RegisterDroppable:\n      {\n        const {\n          element\n        } = action;\n        const {\n          id\n        } = element;\n        const containers = new DroppableContainersMap(state.droppable.containers);\n        containers.set(id, element);\n        return { ...state,\n          droppable: { ...state.droppable,\n            containers\n          }\n        };\n      }\n\n    case Action.SetDroppableDisabled:\n      {\n        const {\n          id,\n          key,\n          disabled\n        } = action;\n        const element = state.droppable.containers.get(id);\n\n        if (!element || key !== element.key) {\n          return state;\n        }\n\n        const containers = new DroppableContainersMap(state.droppable.containers);\n        containers.set(id, { ...element,\n          disabled\n        });\n        return { ...state,\n          droppable: { ...state.droppable,\n            containers\n          }\n        };\n      }\n\n    case Action.UnregisterDroppable:\n      {\n        const {\n          id,\n          key\n        } = action;\n        const element = state.droppable.containers.get(id);\n\n        if (!element || key !== element.key) {\n          return state;\n        }\n\n        const containers = new DroppableContainersMap(state.droppable.containers);\n        containers.delete(id);\n        return { ...state,\n          droppable: { ...state.droppable,\n            containers\n          }\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}\n\nconst DndMonitorContext = /*#__PURE__*/createContext({\n  type: null,\n  event: null\n});\nfunction useDndMonitor({\n  onDragStart,\n  onDragMove,\n  onDragOver,\n  onDragEnd,\n  onDragCancel\n}) {\n  const monitorState = useContext(DndMonitorContext);\n  const previousMonitorState = useRef(monitorState);\n  useEffect(() => {\n    if (monitorState !== previousMonitorState.current) {\n      const {\n        type,\n        event\n      } = monitorState;\n\n      switch (type) {\n        case Action.DragStart:\n          onDragStart == null ? void 0 : onDragStart(event);\n          break;\n\n        case Action.DragMove:\n          onDragMove == null ? void 0 : onDragMove(event);\n          break;\n\n        case Action.DragOver:\n          onDragOver == null ? void 0 : onDragOver(event);\n          break;\n\n        case Action.DragCancel:\n          onDragCancel == null ? void 0 : onDragCancel(event);\n          break;\n\n        case Action.DragEnd:\n          onDragEnd == null ? void 0 : onDragEnd(event);\n          break;\n      }\n\n      previousMonitorState.current = monitorState;\n    }\n  }, [monitorState, onDragStart, onDragMove, onDragOver, onDragEnd, onDragCancel]);\n}\n\nfunction Accessibility({\n  announcements = defaultAnnouncements,\n  hiddenTextDescribedById,\n  screenReaderInstructions\n}) {\n  const {\n    announce,\n    announcement\n  } = useAnnouncement();\n  const liveRegionId = useUniqueId(`DndLiveRegion`);\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  useDndMonitor(useMemo(() => ({\n    onDragStart({\n      active\n    }) {\n      announce(announcements.onDragStart(active.id));\n    },\n\n    onDragMove({\n      active,\n      over\n    }) {\n      if (announcements.onDragMove) {\n        announce(announcements.onDragMove(active.id, over == null ? void 0 : over.id));\n      }\n    },\n\n    onDragOver({\n      active,\n      over\n    }) {\n      announce(announcements.onDragOver(active.id, over == null ? void 0 : over.id));\n    },\n\n    onDragEnd({\n      active,\n      over\n    }) {\n      announce(announcements.onDragEnd(active.id, over == null ? void 0 : over.id));\n    },\n\n    onDragCancel({\n      active\n    }) {\n      announce(announcements.onDragCancel(active.id));\n    }\n\n  }), [announce, announcements]));\n  return mounted ? createPortal(React.createElement(React.Fragment, null, React.createElement(HiddenText, {\n    id: hiddenTextDescribedById,\n    value: screenReaderInstructions.draggable\n  }), React.createElement(LiveRegion, {\n    id: liveRegionId,\n    announcement: announcement\n  })), document.body) : null;\n}\n\nconst defaultCoordinates = /*#__PURE__*/Object.freeze({\n  x: 0,\n  y: 0\n});\n\n/**\r\n * Returns the distance between two points\r\n */\nfunction distanceBetween(p1, p2) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n}\n\nfunction getRelativeTransformOrigin(event, rect) {\n  const eventCoordinates = getEventCoordinates(event);\n\n  if (!eventCoordinates) {\n    return '0 0';\n  }\n\n  const transformOrigin = {\n    x: (eventCoordinates.x - rect.left) / rect.width * 100,\n    y: (eventCoordinates.y - rect.top) / rect.height * 100\n  };\n  return `${transformOrigin.x}% ${transformOrigin.y}%`;\n}\n\n/**\r\n * Sort collisions from smallest to greatest value\r\n */\nfunction sortCollisionsAsc({\n  data: {\n    value: a\n  }\n}, {\n  data: {\n    value: b\n  }\n}) {\n  return a - b;\n}\n/**\r\n * Sort collisions from greatest to smallest value\r\n */\n\nfunction sortCollisionsDesc({\n  data: {\n    value: a\n  }\n}, {\n  data: {\n    value: b\n  }\n}) {\n  return b - a;\n}\n/**\r\n * Returns the coordinates of the corners of a given rectangle:\r\n * [TopLeft {x, y}, TopRight {x, y}, BottomLeft {x, y}, BottomRight {x, y}]\r\n */\n\nfunction cornersOfRectangle({\n  left,\n  top,\n  height,\n  width\n}) {\n  return [{\n    x: left,\n    y: top\n  }, {\n    x: left + width,\n    y: top\n  }, {\n    x: left,\n    y: top + height\n  }, {\n    x: left + width,\n    y: top + height\n  }];\n}\nfunction getFirstCollision(collisions, property) {\n  if (!collisions || collisions.length === 0) {\n    return null;\n  }\n\n  const [firstCollision] = collisions;\n  return property ? firstCollision[property] : firstCollision;\n}\n\n/**\r\n * Returns the coordinates of the center of a given ClientRect\r\n */\n\nfunction centerOfRectangle(rect, left = rect.left, top = rect.top) {\n  return {\n    x: left + rect.width * 0.5,\n    y: top + rect.height * 0.5\n  };\n}\n/**\r\n * Returns the closest rectangles from an array of rectangles to the center of a given\r\n * rectangle.\r\n */\n\n\nconst closestCenter = ({\n  collisionRect,\n  droppableContainers\n}) => {\n  const centerRect = centerOfRectangle(collisionRect, collisionRect.left, collisionRect.top);\n  const collisions = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {\n      id,\n      rect: {\n        current: rect\n      }\n    } = droppableContainer;\n\n    if (rect) {\n      const distBetween = distanceBetween(centerOfRectangle(rect), centerRect);\n      collisions.push({\n        id,\n        data: {\n          droppableContainer,\n          value: distBetween\n        }\n      });\n    }\n  }\n\n  return collisions.sort(sortCollisionsAsc);\n};\n\n/**\r\n * Returns the closest rectangles from an array of rectangles to the corners of\r\n * another rectangle.\r\n */\n\nconst closestCorners = ({\n  collisionRect,\n  droppableContainers\n}) => {\n  const corners = cornersOfRectangle(collisionRect);\n  const collisions = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {\n      id,\n      rect: {\n        current: rect\n      }\n    } = droppableContainer;\n\n    if (rect) {\n      const rectCorners = cornersOfRectangle(rect);\n      const distances = corners.reduce((accumulator, corner, index) => {\n        return accumulator + distanceBetween(rectCorners[index], corner);\n      }, 0);\n      const effectiveDistance = Number((distances / 4).toFixed(4));\n      collisions.push({\n        id,\n        data: {\n          droppableContainer,\n          value: effectiveDistance\n        }\n      });\n    }\n  }\n\n  return collisions.sort(sortCollisionsAsc);\n};\n\n/**\r\n * Returns the intersecting rectangle area between two rectangles\r\n */\n\nfunction getIntersectionRatio(entry, target) {\n  const top = Math.max(target.top, entry.top);\n  const left = Math.max(target.left, entry.left);\n  const right = Math.min(target.left + target.width, entry.left + entry.width);\n  const bottom = Math.min(target.top + target.height, entry.top + entry.height);\n  const width = right - left;\n  const height = bottom - top;\n\n  if (left < right && top < bottom) {\n    const targetArea = target.width * target.height;\n    const entryArea = entry.width * entry.height;\n    const intersectionArea = width * height;\n    const intersectionRatio = intersectionArea / (targetArea + entryArea - intersectionArea);\n    return Number(intersectionRatio.toFixed(4));\n  } // Rectangles do not overlap, or overlap has an area of zero (edge/corner overlap)\n\n\n  return 0;\n}\n/**\r\n * Returns the rectangles that has the greatest intersection area with a given\r\n * rectangle in an array of rectangles.\r\n */\n\nconst rectIntersection = ({\n  collisionRect,\n  droppableContainers\n}) => {\n  const collisions = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {\n      id,\n      rect: {\n        current: rect\n      }\n    } = droppableContainer;\n\n    if (rect) {\n      const intersectionRatio = getIntersectionRatio(rect, collisionRect);\n\n      if (intersectionRatio > 0) {\n        collisions.push({\n          id,\n          data: {\n            droppableContainer,\n            value: intersectionRatio\n          }\n        });\n      }\n    }\n  }\n\n  return collisions.sort(sortCollisionsDesc);\n};\n\n/**\r\n * Check if a given point is contained within a bounding rectangle\r\n */\n\nfunction isPointWithinRect(point, rect) {\n  const {\n    top,\n    left,\n    bottom,\n    right\n  } = rect;\n  return top <= point.y && point.y <= bottom && left <= point.x && point.x <= right;\n}\n/**\r\n * Returns the rectangles that the pointer is hovering over\r\n */\n\n\nconst pointerWithin = ({\n  droppableContainers,\n  pointerCoordinates\n}) => {\n  if (!pointerCoordinates) {\n    return [];\n  }\n\n  const collisions = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {\n      id,\n      rect: {\n        current: rect\n      }\n    } = droppableContainer;\n\n    if (rect && isPointWithinRect(pointerCoordinates, rect)) {\n      /* There may be more than a single rectangle intersecting\r\n       * with the pointer coordinates. In order to sort the\r\n       * colliding rectangles, we measure the distance between\r\n       * the pointer and the corners of the intersecting rectangle\r\n       */\n      const corners = cornersOfRectangle(rect);\n      const distances = corners.reduce((accumulator, corner) => {\n        return accumulator + distanceBetween(pointerCoordinates, corner);\n      }, 0);\n      const effectiveDistance = Number((distances / 4).toFixed(4));\n      collisions.push({\n        id,\n        data: {\n          droppableContainer,\n          value: effectiveDistance\n        }\n      });\n    }\n  }\n\n  return collisions.sort(sortCollisionsAsc);\n};\n\nfunction adjustScale(transform, rect1, rect2) {\n  return { ...transform,\n    scaleX: rect1 && rect2 ? rect1.width / rect2.width : 1,\n    scaleY: rect1 && rect2 ? rect1.height / rect2.height : 1\n  };\n}\n\nfunction getRectDelta(rect1, rect2) {\n  return rect1 && rect2 ? {\n    x: rect1.left - rect2.left,\n    y: rect1.top - rect2.top\n  } : defaultCoordinates;\n}\n\nfunction createRectAdjustmentFn(modifier) {\n  return function adjustClientRect(rect, ...adjustments) {\n    return adjustments.reduce((acc, adjustment) => ({ ...acc,\n      top: acc.top + modifier * adjustment.y,\n      bottom: acc.bottom + modifier * adjustment.y,\n      left: acc.left + modifier * adjustment.x,\n      right: acc.right + modifier * adjustment.x\n    }), { ...rect\n    });\n  };\n}\nconst getAdjustedRect = /*#__PURE__*/createRectAdjustmentFn(1);\n\nfunction inverseTransform(rect, transform, transformOrigin) {\n  let ta, sx, sy, dx, dy;\n\n  if (transform.startsWith('matrix3d(')) {\n    ta = transform.slice(9, -1).split(/, /);\n    sx = +ta[0];\n    sy = +ta[5];\n    dx = +ta[12];\n    dy = +ta[13];\n  } else if (transform.startsWith('matrix(')) {\n    ta = transform.slice(7, -1).split(/, /);\n    sx = +ta[0];\n    sy = +ta[3];\n    dx = +ta[4];\n    dy = +ta[5];\n  } else {\n    return rect;\n  }\n\n  const x = rect.left - dx - (1 - sx) * parseFloat(transformOrigin);\n  const y = rect.top - dy - (1 - sy) * parseFloat(transformOrigin.slice(transformOrigin.indexOf(' ') + 1));\n  const w = sx ? rect.width / sx : rect.width;\n  const h = sy ? rect.height / sy : rect.height;\n  return {\n    width: w,\n    height: h,\n    top: y,\n    right: x + w,\n    bottom: y + h,\n    left: x\n  };\n}\n\nconst defaultOptions = {\n  ignoreTransform: false\n};\n/**\r\n * Returns the bounding client rect of an element relative to the viewport.\r\n */\n\nfunction getClientRect(element, options = defaultOptions) {\n  let rect = element.getBoundingClientRect();\n\n  if (options.ignoreTransform) {\n    const {\n      getComputedStyle\n    } = getWindow(element);\n    const {\n      transform,\n      transformOrigin\n    } = getComputedStyle(element);\n\n    if (transform) {\n      rect = inverseTransform(rect, transform, transformOrigin);\n    }\n  }\n\n  const {\n    top,\n    left,\n    width,\n    height,\n    bottom,\n    right\n  } = rect;\n  return {\n    top,\n    left,\n    width,\n    height,\n    bottom,\n    right\n  };\n}\n/**\r\n * Returns the bounding client rect of an element relative to the viewport.\r\n *\r\n * @remarks\r\n * The ClientRect returned by this method does not take into account transforms\r\n * applied to the element it measures.\r\n *\r\n */\n\nfunction getTransformAgnosticClientRect(element) {\n  return getClientRect(element, {\n    ignoreTransform: true\n  });\n}\n\nfunction getWindowClientRect(element) {\n  const width = element.innerWidth;\n  const height = element.innerHeight;\n  return {\n    top: 0,\n    left: 0,\n    right: width,\n    bottom: height,\n    width,\n    height\n  };\n}\n\nfunction isFixed(node, computedStyle = getWindow(node).getComputedStyle(node)) {\n  return computedStyle.position === 'fixed';\n}\n\nfunction isScrollable(element, computedStyle = getWindow(element).getComputedStyle(element)) {\n  const overflowRegex = /(auto|scroll|overlay)/;\n  const properties = ['overflow', 'overflowX', 'overflowY'];\n  return properties.find(property => {\n    const value = computedStyle[property];\n    return typeof value === 'string' ? overflowRegex.test(value) : false;\n  }) != null;\n}\n\nfunction getScrollableAncestors(element) {\n  const scrollParents = [];\n\n  function findScrollableAncestors(node) {\n    if (!node) {\n      return scrollParents;\n    }\n\n    if (isDocument(node) && node.scrollingElement != null && !scrollParents.includes(node.scrollingElement)) {\n      scrollParents.push(node.scrollingElement);\n      return scrollParents;\n    }\n\n    if (!isHTMLElement(node) || isSVGElement(node)) {\n      return scrollParents;\n    }\n\n    if (scrollParents.includes(node)) {\n      return scrollParents;\n    }\n\n    const {\n      getComputedStyle\n    } = getWindow(node);\n    const computedStyle = getComputedStyle(node);\n\n    if (node !== element) {\n      if (isScrollable(node, computedStyle)) {\n        scrollParents.push(node);\n      }\n    }\n\n    if (isFixed(node, computedStyle)) {\n      return scrollParents;\n    }\n\n    return findScrollableAncestors(node.parentNode);\n  }\n\n  if (!element) {\n    return scrollParents;\n  }\n\n  return findScrollableAncestors(element);\n}\n\nfunction getScrollableElement(element) {\n  if (!canUseDOM || !element) {\n    return null;\n  }\n\n  if (isWindow(element)) {\n    return element;\n  }\n\n  if (!isNode(element)) {\n    return null;\n  }\n\n  if (isDocument(element) || element === getOwnerDocument(element).scrollingElement) {\n    return window;\n  }\n\n  if (isHTMLElement(element)) {\n    return element;\n  }\n\n  return null;\n}\n\nfunction getScrollXCoordinate(element) {\n  if (isWindow(element)) {\n    return element.scrollX;\n  }\n\n  return element.scrollLeft;\n}\nfunction getScrollYCoordinate(element) {\n  if (isWindow(element)) {\n    return element.scrollY;\n  }\n\n  return element.scrollTop;\n}\nfunction getScrollCoordinates(element) {\n  return {\n    x: getScrollXCoordinate(element),\n    y: getScrollYCoordinate(element)\n  };\n}\n\nvar Direction;\n\n(function (Direction) {\n  Direction[Direction[\"Forward\"] = 1] = \"Forward\";\n  Direction[Direction[\"Backward\"] = -1] = \"Backward\";\n})(Direction || (Direction = {}));\n\nfunction getScrollPosition(scrollingContainer) {\n  const minScroll = {\n    x: 0,\n    y: 0\n  };\n  const maxScroll = {\n    x: scrollingContainer.scrollWidth - scrollingContainer.clientWidth,\n    y: scrollingContainer.scrollHeight - scrollingContainer.clientHeight\n  };\n  const isTop = scrollingContainer.scrollTop <= minScroll.y;\n  const isLeft = scrollingContainer.scrollLeft <= minScroll.x;\n  const isBottom = scrollingContainer.scrollTop >= maxScroll.y;\n  const isRight = scrollingContainer.scrollLeft >= maxScroll.x;\n  return {\n    isTop,\n    isLeft,\n    isBottom,\n    isRight,\n    maxScroll,\n    minScroll\n  };\n}\n\nfunction isDocumentScrollingElement(element) {\n  if (!canUseDOM || !element) {\n    return false;\n  }\n\n  return element === document.scrollingElement;\n}\n\nconst defaultThreshold = {\n  x: 0.2,\n  y: 0.2\n};\nfunction getScrollDirectionAndSpeed(scrollContainer, scrollContainerRect, {\n  top,\n  left,\n  right,\n  bottom\n}, acceleration = 10, thresholdPercentage = defaultThreshold) {\n  const {\n    clientHeight,\n    clientWidth\n  } = scrollContainer;\n  const finalScrollContainerRect = isDocumentScrollingElement(scrollContainer) ? {\n    top: 0,\n    left: 0,\n    right: clientWidth,\n    bottom: clientHeight,\n    width: clientWidth,\n    height: clientHeight\n  } : scrollContainerRect;\n  const {\n    isTop,\n    isBottom,\n    isLeft,\n    isRight\n  } = getScrollPosition(scrollContainer);\n  const direction = {\n    x: 0,\n    y: 0\n  };\n  const speed = {\n    x: 0,\n    y: 0\n  };\n  const threshold = {\n    height: finalScrollContainerRect.height * thresholdPercentage.y,\n    width: finalScrollContainerRect.width * thresholdPercentage.x\n  };\n\n  if (!isTop && top <= finalScrollContainerRect.top + threshold.height) {\n    // Scroll Up\n    direction.y = Direction.Backward;\n    speed.y = acceleration * Math.abs((finalScrollContainerRect.top + threshold.height - top) / threshold.height);\n  } else if (!isBottom && bottom >= finalScrollContainerRect.bottom - threshold.height) {\n    // Scroll Down\n    direction.y = Direction.Forward;\n    speed.y = acceleration * Math.abs((finalScrollContainerRect.bottom - threshold.height - bottom) / threshold.height);\n  }\n\n  if (!isRight && right >= finalScrollContainerRect.right - threshold.width) {\n    // Scroll Right\n    direction.x = Direction.Forward;\n    speed.x = acceleration * Math.abs((finalScrollContainerRect.right - threshold.width - right) / threshold.width);\n  } else if (!isLeft && left <= finalScrollContainerRect.left + threshold.width) {\n    // Scroll Left\n    direction.x = Direction.Backward;\n    speed.x = acceleration * Math.abs((finalScrollContainerRect.left + threshold.width - left) / threshold.width);\n  }\n\n  return {\n    direction,\n    speed\n  };\n}\n\nfunction getScrollElementRect(element) {\n  if (element === document.scrollingElement) {\n    const {\n      innerWidth,\n      innerHeight\n    } = window;\n    return {\n      top: 0,\n      left: 0,\n      right: innerWidth,\n      bottom: innerHeight,\n      width: innerWidth,\n      height: innerHeight\n    };\n  }\n\n  const {\n    top,\n    left,\n    right,\n    bottom\n  } = element.getBoundingClientRect();\n  return {\n    top,\n    left,\n    right,\n    bottom,\n    width: element.clientWidth,\n    height: element.clientHeight\n  };\n}\n\nfunction getScrollOffsets(scrollableAncestors) {\n  return scrollableAncestors.reduce((acc, node) => {\n    return add(acc, getScrollCoordinates(node));\n  }, defaultCoordinates);\n}\nfunction getScrollXOffset(scrollableAncestors) {\n  return scrollableAncestors.reduce((acc, node) => {\n    return acc + getScrollXCoordinate(node);\n  }, 0);\n}\nfunction getScrollYOffset(scrollableAncestors) {\n  return scrollableAncestors.reduce((acc, node) => {\n    return acc + getScrollYCoordinate(node);\n  }, 0);\n}\n\nconst properties = [['x', ['left', 'right'], getScrollXOffset], ['y', ['top', 'bottom'], getScrollYOffset]];\nclass Rect {\n  constructor(rect, element) {\n    this.rect = void 0;\n    this.width = void 0;\n    this.height = void 0;\n    this.top = void 0;\n    this.bottom = void 0;\n    this.right = void 0;\n    this.left = void 0;\n    const scrollableAncestors = getScrollableAncestors(element);\n    const scrollOffsets = getScrollOffsets(scrollableAncestors);\n    this.rect = { ...rect\n    };\n    this.width = rect.width;\n    this.height = rect.height;\n\n    for (const [axis, keys, getScrollOffset] of properties) {\n      for (const key of keys) {\n        Object.defineProperty(this, key, {\n          get: () => {\n            const currentOffsets = getScrollOffset(scrollableAncestors);\n            const scrollOffsetsDeltla = scrollOffsets[axis] - currentOffsets;\n            return this.rect[key] + scrollOffsetsDeltla;\n          },\n          enumerable: true\n        });\n      }\n    }\n\n    Object.defineProperty(this, 'rect', {\n      enumerable: false\n    });\n  }\n\n}\n\nvar AutoScrollActivator;\n\n(function (AutoScrollActivator) {\n  AutoScrollActivator[AutoScrollActivator[\"Pointer\"] = 0] = \"Pointer\";\n  AutoScrollActivator[AutoScrollActivator[\"DraggableRect\"] = 1] = \"DraggableRect\";\n})(AutoScrollActivator || (AutoScrollActivator = {}));\n\nvar TraversalOrder;\n\n(function (TraversalOrder) {\n  TraversalOrder[TraversalOrder[\"TreeOrder\"] = 0] = \"TreeOrder\";\n  TraversalOrder[TraversalOrder[\"ReversedTreeOrder\"] = 1] = \"ReversedTreeOrder\";\n})(TraversalOrder || (TraversalOrder = {}));\n\nfunction useAutoScroller({\n  acceleration,\n  activator = AutoScrollActivator.Pointer,\n  canScroll,\n  draggingRect,\n  enabled,\n  interval = 5,\n  order = TraversalOrder.TreeOrder,\n  pointerCoordinates,\n  scrollableAncestors,\n  scrollableAncestorRects,\n  threshold\n}) {\n  const [setAutoScrollInterval, clearAutoScrollInterval] = useInterval();\n  const scrollSpeed = useRef({\n    x: 1,\n    y: 1\n  });\n  const rect = useMemo(() => {\n    switch (activator) {\n      case AutoScrollActivator.Pointer:\n        return pointerCoordinates ? {\n          top: pointerCoordinates.y,\n          bottom: pointerCoordinates.y,\n          left: pointerCoordinates.x,\n          right: pointerCoordinates.x\n        } : null;\n\n      case AutoScrollActivator.DraggableRect:\n        return draggingRect;\n    }\n\n    return null;\n  }, [activator, draggingRect, pointerCoordinates]);\n  const scrollDirection = useRef(defaultCoordinates);\n  const scrollContainerRef = useRef(null);\n  const autoScroll = useCallback(() => {\n    const scrollContainer = scrollContainerRef.current;\n\n    if (!scrollContainer) {\n      return;\n    }\n\n    const scrollLeft = scrollSpeed.current.x * scrollDirection.current.x;\n    const scrollTop = scrollSpeed.current.y * scrollDirection.current.y;\n    scrollContainer.scrollBy(scrollLeft, scrollTop);\n  }, []);\n  const sortedScrollableAncestors = useMemo(() => order === TraversalOrder.TreeOrder ? [...scrollableAncestors].reverse() : scrollableAncestors, [order, scrollableAncestors]);\n  useEffect(() => {\n    if (!enabled || !scrollableAncestors.length || !rect) {\n      clearAutoScrollInterval();\n      return;\n    }\n\n    for (const scrollContainer of sortedScrollableAncestors) {\n      if ((canScroll == null ? void 0 : canScroll(scrollContainer)) === false) {\n        continue;\n      }\n\n      const index = scrollableAncestors.indexOf(scrollContainer);\n      const scrollContainerRect = scrollableAncestorRects[index];\n\n      if (!scrollContainerRect) {\n        continue;\n      }\n\n      const {\n        direction,\n        speed\n      } = getScrollDirectionAndSpeed(scrollContainer, scrollContainerRect, rect, acceleration, threshold);\n\n      if (speed.x > 0 || speed.y > 0) {\n        clearAutoScrollInterval();\n        scrollContainerRef.current = scrollContainer;\n        setAutoScrollInterval(autoScroll, interval);\n        scrollSpeed.current = speed;\n        scrollDirection.current = direction;\n        return;\n      }\n    }\n\n    scrollSpeed.current = {\n      x: 0,\n      y: 0\n    };\n    scrollDirection.current = {\n      x: 0,\n      y: 0\n    };\n    clearAutoScrollInterval();\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [acceleration, autoScroll, canScroll, clearAutoScrollInterval, enabled, interval, // eslint-disable-next-line react-hooks/exhaustive-deps\n  JSON.stringify(rect), setAutoScrollInterval, scrollableAncestors, sortedScrollableAncestors, scrollableAncestorRects, // eslint-disable-next-line react-hooks/exhaustive-deps\n  JSON.stringify(threshold)]);\n}\n\nfunction useCachedNode(draggableNodes, id) {\n  const draggableNode = id !== null ? draggableNodes[id] : undefined;\n  const node = draggableNode ? draggableNode.node.current : null;\n  return useLazyMemo(cachedNode => {\n    var _ref;\n\n    if (id === null) {\n      return null;\n    } // In some cases, the draggable node can unmount while dragging\n    // This is the case for virtualized lists. In those situations,\n    // we fall back to the last known value for that node.\n\n\n    return (_ref = node != null ? node : cachedNode) != null ? _ref : null;\n  }, [node, id]);\n}\n\nfunction useCombineActivators(sensors, getSyntheticHandler) {\n  return useMemo(() => sensors.reduce((accumulator, sensor) => {\n    const {\n      sensor: Sensor\n    } = sensor;\n    const sensorActivators = Sensor.activators.map(activator => ({\n      eventName: activator.eventName,\n      handler: getSyntheticHandler(activator.handler, sensor)\n    }));\n    return [...accumulator, ...sensorActivators];\n  }, []), [sensors, getSyntheticHandler]);\n}\n\nvar MeasuringStrategy;\n\n(function (MeasuringStrategy) {\n  MeasuringStrategy[MeasuringStrategy[\"Always\"] = 0] = \"Always\";\n  MeasuringStrategy[MeasuringStrategy[\"BeforeDragging\"] = 1] = \"BeforeDragging\";\n  MeasuringStrategy[MeasuringStrategy[\"WhileDragging\"] = 2] = \"WhileDragging\";\n})(MeasuringStrategy || (MeasuringStrategy = {}));\n\nvar MeasuringFrequency;\n\n(function (MeasuringFrequency) {\n  MeasuringFrequency[\"Optimized\"] = \"optimized\";\n})(MeasuringFrequency || (MeasuringFrequency = {}));\n\nconst defaultValue = /*#__PURE__*/new Map();\nconst defaultConfig = {\n  measure: getTransformAgnosticClientRect,\n  strategy: MeasuringStrategy.WhileDragging,\n  frequency: MeasuringFrequency.Optimized\n};\nfunction useDroppableMeasuring(containers, {\n  dragging,\n  dependencies,\n  config\n}) {\n  const [containerIdsScheduledForMeasurement, setContainerIdsScheduledForMeasurement] = useState(null);\n  const measuringScheduled = containerIdsScheduledForMeasurement != null;\n  const {\n    frequency,\n    measure,\n    strategy\n  } = { ...defaultConfig,\n    ...config\n  };\n  const containersRef = useRef(containers);\n  const measureDroppableContainers = useCallback((ids = []) => setContainerIdsScheduledForMeasurement(value => value ? value.concat(ids) : ids), []);\n  const timeoutId = useRef(null);\n  const disabled = isDisabled();\n  const droppableRects = useLazyMemo(previousValue => {\n    if (disabled && !dragging) {\n      return defaultValue;\n    }\n\n    const ids = containerIdsScheduledForMeasurement;\n\n    if (!previousValue || previousValue === defaultValue || containersRef.current !== containers || ids != null) {\n      const map = new Map();\n\n      for (let container of containers) {\n        if (!container) {\n          continue;\n        }\n\n        if (ids && ids.length > 0 && !ids.includes(container.id) && container.rect.current) {\n          // This container does not need to be re-measured\n          map.set(container.id, container.rect.current);\n          continue;\n        }\n\n        const node = container.node.current;\n        const rect = node ? new Rect(measure(node), node) : null;\n        container.rect.current = rect;\n\n        if (rect) {\n          map.set(container.id, rect);\n        }\n      }\n\n      return map;\n    }\n\n    return previousValue;\n  }, [containers, containerIdsScheduledForMeasurement, dragging, disabled, measure]);\n  useEffect(() => {\n    containersRef.current = containers;\n  }, [containers]);\n  useEffect(() => {\n    if (disabled) {\n      return;\n    }\n\n    requestAnimationFrame(() => measureDroppableContainers());\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [dragging, disabled]);\n  useEffect(() => {\n    if (measuringScheduled) {\n      setContainerIdsScheduledForMeasurement(null);\n    }\n  }, [measuringScheduled]);\n  useEffect(() => {\n    if (disabled || typeof frequency !== 'number' || timeoutId.current !== null) {\n      return;\n    }\n\n    timeoutId.current = setTimeout(() => {\n      measureDroppableContainers();\n      timeoutId.current = null;\n    }, frequency);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [frequency, disabled, measureDroppableContainers, ...dependencies]);\n  return {\n    droppableRects,\n    measureDroppableContainers,\n    measuringScheduled\n  };\n\n  function isDisabled() {\n    switch (strategy) {\n      case MeasuringStrategy.Always:\n        return false;\n\n      case MeasuringStrategy.BeforeDragging:\n        return dragging;\n\n      default:\n        return !dragging;\n    }\n  }\n}\n\n/**\r\n * Returns a new ResizeObserver instance bound to the `onResize` callback.\r\n * If `ResizeObserver` is undefined in the execution environment, returns `undefined`.\r\n */\n\nfunction useResizeObserver({\n  onResize,\n  disabled\n}) {\n  const resizeObserver = useMemo(() => {\n    if (disabled || typeof window === 'undefined' || typeof window.ResizeObserver === 'undefined') {\n      return undefined;\n    }\n\n    const {\n      ResizeObserver\n    } = window;\n    return new ResizeObserver(onResize);\n  }, [disabled, onResize]);\n  useEffect(() => {\n    return () => resizeObserver == null ? void 0 : resizeObserver.disconnect();\n  }, [resizeObserver]);\n  return resizeObserver;\n}\n\nfunction useScrollOffsets(elements) {\n  const [scrollCoordinates, setScrollCoordinates] = useState(null);\n  const prevElements = useRef(elements); // To-do: Throttle the handleScroll callback\n\n  const handleScroll = useCallback(event => {\n    const scrollingElement = getScrollableElement(event.target);\n\n    if (!scrollingElement) {\n      return;\n    }\n\n    setScrollCoordinates(scrollCoordinates => {\n      if (!scrollCoordinates) {\n        return null;\n      }\n\n      scrollCoordinates.set(scrollingElement, getScrollCoordinates(scrollingElement));\n      return new Map(scrollCoordinates);\n    });\n  }, []);\n  useEffect(() => {\n    const previousElements = prevElements.current;\n\n    if (elements !== previousElements) {\n      cleanup(previousElements);\n      const entries = elements.map(element => {\n        const scrollableElement = getScrollableElement(element);\n\n        if (scrollableElement) {\n          scrollableElement.addEventListener('scroll', handleScroll, {\n            passive: true\n          });\n          return [scrollableElement, getScrollCoordinates(scrollableElement)];\n        }\n\n        return null;\n      }).filter(entry => entry != null);\n      setScrollCoordinates(entries.length ? new Map(entries) : null);\n      prevElements.current = elements;\n    }\n\n    return () => {\n      cleanup(elements);\n      cleanup(previousElements);\n    };\n\n    function cleanup(elements) {\n      elements.forEach(element => {\n        const scrollableElement = getScrollableElement(element);\n        scrollableElement == null ? void 0 : scrollableElement.removeEventListener('scroll', handleScroll);\n      });\n    }\n  }, [handleScroll, elements]);\n  return useMemo(() => {\n    if (elements.length) {\n      return scrollCoordinates ? Array.from(scrollCoordinates.values()).reduce((acc, coordinates) => add(acc, coordinates), defaultCoordinates) : getScrollOffsets(elements);\n    }\n\n    return defaultCoordinates;\n  }, [elements, scrollCoordinates]);\n}\n\nconst defaultValue$1 = [];\nfunction useScrollableAncestors(node) {\n  const previousNode = useRef(node);\n  const ancestors = useLazyMemo(previousValue => {\n    if (!node) {\n      return defaultValue$1;\n    }\n\n    if (previousValue && node && previousNode.current && node.parentNode === previousNode.current.parentNode) {\n      return previousValue;\n    }\n\n    return getScrollableAncestors(node);\n  }, [node]);\n  useEffect(() => {\n    previousNode.current = node;\n  }, [node]);\n  return ancestors;\n}\n\nfunction useSensorSetup(sensors) {\n  useEffect(() => {\n    if (!canUseDOM) {\n      return;\n    }\n\n    const teardownFns = sensors.map(({\n      sensor\n    }) => sensor.setup == null ? void 0 : sensor.setup());\n    return () => {\n      for (const teardown of teardownFns) {\n        teardown == null ? void 0 : teardown();\n      }\n    };\n  }, // TO-DO: Sensors length could theoretically change which would not be a valid dependency\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  sensors.map(({\n    sensor\n  }) => sensor));\n}\n\nfunction useSyntheticListeners(listeners, id) {\n  return useMemo(() => {\n    return listeners.reduce((acc, {\n      eventName,\n      handler\n    }) => {\n      acc[eventName] = event => {\n        handler(event, id);\n      };\n\n      return acc;\n    }, {});\n  }, [listeners, id]);\n}\n\nconst useClientRect = /*#__PURE__*/createUseRectFn(getTransformAgnosticClientRect);\nconst useClientRects = /*#__PURE__*/createUseRectsFn(getTransformAgnosticClientRect);\nfunction useRect(element, getRect, forceRecompute) {\n  const previousElement = useRef(element);\n  return useLazyMemo(previousValue => {\n    if (!element) {\n      return null;\n    }\n\n    if (forceRecompute || !previousValue && element || element !== previousElement.current) {\n      if (isHTMLElement(element) && element.parentNode == null) {\n        return null;\n      }\n\n      return new Rect(getRect(element), element);\n    }\n\n    return previousValue != null ? previousValue : null;\n  }, [element, forceRecompute, getRect]);\n}\nfunction createUseRectFn(getRect) {\n  return (element, forceRecompute) => useRect(element, getRect, forceRecompute);\n}\n\nfunction createUseRectsFn(getRect) {\n  const defaultValue = [];\n  return function useRects(elements, forceRecompute) {\n    const previousElements = useRef(elements);\n    return useLazyMemo(previousValue => {\n      if (!elements.length) {\n        return defaultValue;\n      }\n\n      if (forceRecompute || !previousValue && elements.length || elements !== previousElements.current) {\n        return elements.map(element => new Rect(getRect(element), element));\n      }\n\n      return previousValue != null ? previousValue : defaultValue;\n    }, [elements, forceRecompute]);\n  };\n}\n\nfunction useWindowRect(element) {\n  return useMemo(() => element ? getWindowClientRect(element) : null, [element]);\n}\n\nfunction getMeasurableNode(node) {\n  if (!node) {\n    return null;\n  }\n\n  if (node.children.length > 1) {\n    return node;\n  }\n\n  const firstChild = node.children[0];\n  return isHTMLElement(firstChild) ? firstChild : node;\n}\n\nfunction useDragOverlayMeasuring({\n  measure = getClientRect\n}) {\n  const [rect, setRect] = useState(null);\n  const handleResize = useCallback(entries => {\n    for (const {\n      target\n    } of entries) {\n      if (isHTMLElement(target)) {\n        setRect(rect => {\n          const newRect = measure(target);\n          return rect ? { ...rect,\n            width: newRect.width,\n            height: newRect.height\n          } : newRect;\n        });\n        break;\n      }\n    }\n  }, [measure]);\n  const resizeObserver = useResizeObserver({\n    onResize: handleResize\n  });\n  const handleNodeChange = useCallback(element => {\n    const node = getMeasurableNode(element);\n    resizeObserver == null ? void 0 : resizeObserver.disconnect();\n\n    if (node) {\n      resizeObserver == null ? void 0 : resizeObserver.observe(node);\n    }\n\n    setRect(node ? measure(node) : null);\n  }, [measure, resizeObserver]);\n  const [nodeRef, setRef] = useNodeRef(handleNodeChange);\n  return useMemo(() => ({\n    nodeRef,\n    rect,\n    setRef\n  }), [rect, nodeRef, setRef]);\n}\n\nfunction useSensor(sensor, options) {\n  return useMemo(() => ({\n    sensor,\n    options: options != null ? options : {}\n  }), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [sensor, options]);\n}\n\nfunction useSensors(...sensors) {\n  return useMemo(() => [...sensors].filter(sensor => sensor != null), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [...sensors]);\n}\n\nclass Listeners {\n  constructor(target) {\n    this.target = void 0;\n    this.listeners = [];\n\n    this.removeAll = () => {\n      this.listeners.forEach(listener => {\n        var _this$target;\n\n        return (_this$target = this.target) == null ? void 0 : _this$target.removeEventListener(...listener);\n      });\n    };\n\n    this.target = target;\n  }\n\n  add(eventName, handler, options) {\n    var _this$target2;\n\n    (_this$target2 = this.target) == null ? void 0 : _this$target2.addEventListener(eventName, handler, options);\n    this.listeners.push([eventName, handler, options]);\n  }\n\n}\n\nfunction getEventListenerTarget(target) {\n  // If the `event.target` element is removed from the document events will still be targeted\n  // at it, and hence won't always bubble up to the window or document anymore.\n  // If there is any risk of an element being removed while it is being dragged,\n  // the best practice is to attach the event listeners directly to the target.\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n  const {\n    EventTarget\n  } = getWindow(target);\n  return target instanceof EventTarget ? target : getOwnerDocument(target);\n}\n\nfunction hasExceededDistance(delta, measurement) {\n  const dx = Math.abs(delta.x);\n  const dy = Math.abs(delta.y);\n\n  if (typeof measurement === 'number') {\n    return Math.sqrt(dx ** 2 + dy ** 2) > measurement;\n  }\n\n  if ('x' in measurement && 'y' in measurement) {\n    return dx > measurement.x && dy > measurement.y;\n  }\n\n  if ('x' in measurement) {\n    return dx > measurement.x;\n  }\n\n  if ('y' in measurement) {\n    return dy > measurement.y;\n  }\n\n  return false;\n}\n\nvar EventName;\n\n(function (EventName) {\n  EventName[\"Click\"] = \"click\";\n  EventName[\"DragStart\"] = \"dragstart\";\n  EventName[\"Keydown\"] = \"keydown\";\n  EventName[\"ContextMenu\"] = \"contextmenu\";\n  EventName[\"Resize\"] = \"resize\";\n  EventName[\"SelectionChange\"] = \"selectionchange\";\n  EventName[\"VisibilityChange\"] = \"visibilitychange\";\n})(EventName || (EventName = {}));\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\nfunction stopPropagation(event) {\n  event.stopPropagation();\n}\n\nvar KeyboardCode;\n\n(function (KeyboardCode) {\n  KeyboardCode[\"Space\"] = \"Space\";\n  KeyboardCode[\"Down\"] = \"ArrowDown\";\n  KeyboardCode[\"Right\"] = \"ArrowRight\";\n  KeyboardCode[\"Left\"] = \"ArrowLeft\";\n  KeyboardCode[\"Up\"] = \"ArrowUp\";\n  KeyboardCode[\"Esc\"] = \"Escape\";\n  KeyboardCode[\"Enter\"] = \"Enter\";\n})(KeyboardCode || (KeyboardCode = {}));\n\nconst defaultKeyboardCodes = {\n  start: [KeyboardCode.Space, KeyboardCode.Enter],\n  cancel: [KeyboardCode.Esc],\n  end: [KeyboardCode.Space, KeyboardCode.Enter]\n};\nconst defaultKeyboardCoordinateGetter = (event, {\n  currentCoordinates\n}) => {\n  switch (event.code) {\n    case KeyboardCode.Right:\n      return { ...currentCoordinates,\n        x: currentCoordinates.x + 25\n      };\n\n    case KeyboardCode.Left:\n      return { ...currentCoordinates,\n        x: currentCoordinates.x - 25\n      };\n\n    case KeyboardCode.Down:\n      return { ...currentCoordinates,\n        y: currentCoordinates.y + 25\n      };\n\n    case KeyboardCode.Up:\n      return { ...currentCoordinates,\n        y: currentCoordinates.y - 25\n      };\n  }\n\n  return undefined;\n};\n\nclass KeyboardSensor {\n  constructor(props) {\n    this.props = void 0;\n    this.autoScrollEnabled = false;\n    this.coordinates = defaultCoordinates;\n    this.listeners = void 0;\n    this.windowListeners = void 0;\n    this.props = props;\n    const {\n      event: {\n        target\n      }\n    } = props;\n    this.props = props;\n    this.listeners = new Listeners(getOwnerDocument(target));\n    this.windowListeners = new Listeners(getWindow(target));\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.attach();\n  }\n\n  attach() {\n    this.handleStart();\n    this.windowListeners.add(EventName.Resize, this.handleCancel);\n    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);\n    setTimeout(() => this.listeners.add(EventName.Keydown, this.handleKeyDown));\n  }\n\n  handleStart() {\n    const {\n      activeNode,\n      onStart\n    } = this.props;\n\n    if (!activeNode.node.current) {\n      throw new Error('Active draggable node is undefined');\n    }\n\n    const activeNodeRect = getTransformAgnosticClientRect(activeNode.node.current);\n    const coordinates = {\n      x: activeNodeRect.left,\n      y: activeNodeRect.top\n    };\n    this.coordinates = coordinates;\n    onStart(coordinates);\n  }\n\n  handleKeyDown(event) {\n    if (isKeyboardEvent(event)) {\n      const {\n        coordinates\n      } = this;\n      const {\n        active,\n        context,\n        options\n      } = this.props;\n      const {\n        keyboardCodes = defaultKeyboardCodes,\n        coordinateGetter = defaultKeyboardCoordinateGetter,\n        scrollBehavior = 'smooth'\n      } = options;\n      const {\n        code\n      } = event;\n\n      if (keyboardCodes.end.includes(code)) {\n        this.handleEnd(event);\n        return;\n      }\n\n      if (keyboardCodes.cancel.includes(code)) {\n        this.handleCancel(event);\n        return;\n      }\n\n      const newCoordinates = coordinateGetter(event, {\n        active,\n        context: context.current,\n        currentCoordinates: coordinates\n      });\n\n      if (newCoordinates) {\n        const scrollDelta = {\n          x: 0,\n          y: 0\n        };\n        const {\n          scrollableAncestors\n        } = context.current;\n\n        for (const scrollContainer of scrollableAncestors) {\n          const direction = event.code;\n          const coordinatesDelta = subtract(newCoordinates, coordinates);\n          const {\n            isTop,\n            isRight,\n            isLeft,\n            isBottom,\n            maxScroll,\n            minScroll\n          } = getScrollPosition(scrollContainer);\n          const scrollElementRect = getScrollElementRect(scrollContainer);\n          const clampedCoordinates = {\n            x: Math.min(direction === KeyboardCode.Right ? scrollElementRect.right - scrollElementRect.width / 2 : scrollElementRect.right, Math.max(direction === KeyboardCode.Right ? scrollElementRect.left : scrollElementRect.left + scrollElementRect.width / 2, newCoordinates.x)),\n            y: Math.min(direction === KeyboardCode.Down ? scrollElementRect.bottom - scrollElementRect.height / 2 : scrollElementRect.bottom, Math.max(direction === KeyboardCode.Down ? scrollElementRect.top : scrollElementRect.top + scrollElementRect.height / 2, newCoordinates.y))\n          };\n          const canScrollX = direction === KeyboardCode.Right && !isRight || direction === KeyboardCode.Left && !isLeft;\n          const canScrollY = direction === KeyboardCode.Down && !isBottom || direction === KeyboardCode.Up && !isTop;\n\n          if (canScrollX && clampedCoordinates.x !== newCoordinates.x) {\n            const canFullyScrollToNewCoordinates = direction === KeyboardCode.Right && scrollContainer.scrollLeft + coordinatesDelta.x <= maxScroll.x || direction === KeyboardCode.Left && scrollContainer.scrollLeft + coordinatesDelta.x >= minScroll.x;\n\n            if (canFullyScrollToNewCoordinates) {\n              // We don't need to update coordinates, the scroll adjustment alone will trigger\n              // logic to auto-detect the new container we are over\n              scrollContainer.scrollBy({\n                left: coordinatesDelta.x,\n                behavior: scrollBehavior\n              });\n              return;\n            }\n\n            scrollDelta.x = direction === KeyboardCode.Right ? scrollContainer.scrollLeft - maxScroll.x : scrollContainer.scrollLeft - minScroll.x;\n            scrollContainer.scrollBy({\n              left: -scrollDelta.x,\n              behavior: scrollBehavior\n            });\n            break;\n          } else if (canScrollY && clampedCoordinates.y !== newCoordinates.y) {\n            const canFullyScrollToNewCoordinates = direction === KeyboardCode.Down && scrollContainer.scrollTop + coordinatesDelta.y <= maxScroll.y || direction === KeyboardCode.Up && scrollContainer.scrollTop + coordinatesDelta.y >= minScroll.y;\n\n            if (canFullyScrollToNewCoordinates) {\n              // We don't need to update coordinates, the scroll adjustment alone will trigger\n              // logic to auto-detect the new container we are over\n              scrollContainer.scrollBy({\n                top: coordinatesDelta.y,\n                behavior: scrollBehavior\n              });\n              return;\n            }\n\n            scrollDelta.y = direction === KeyboardCode.Down ? scrollContainer.scrollTop - maxScroll.y : scrollContainer.scrollTop - minScroll.y;\n            scrollContainer.scrollBy({\n              top: -scrollDelta.y,\n              behavior: scrollBehavior\n            });\n            break;\n          }\n        }\n\n        this.handleMove(event, add(newCoordinates, scrollDelta));\n      }\n    }\n  }\n\n  handleMove(event, coordinates) {\n    const {\n      onMove\n    } = this.props;\n    event.preventDefault();\n    onMove(coordinates);\n    this.coordinates = coordinates;\n  }\n\n  handleEnd(event) {\n    const {\n      onEnd\n    } = this.props;\n    event.preventDefault();\n    this.detach();\n    onEnd();\n  }\n\n  handleCancel(event) {\n    const {\n      onCancel\n    } = this.props;\n    event.preventDefault();\n    this.detach();\n    onCancel();\n  }\n\n  detach() {\n    this.listeners.removeAll();\n    this.windowListeners.removeAll();\n  }\n\n}\nKeyboardSensor.activators = [{\n  eventName: 'onKeyDown',\n  handler: (event, {\n    keyboardCodes = defaultKeyboardCodes,\n    onActivation\n  }) => {\n    const {\n      code\n    } = event.nativeEvent;\n\n    if (keyboardCodes.start.includes(code)) {\n      event.preventDefault();\n      onActivation == null ? void 0 : onActivation({\n        event: event.nativeEvent\n      });\n      return true;\n    }\n\n    return false;\n  }\n}];\n\nfunction isDistanceConstraint(constraint) {\n  return Boolean(constraint && 'distance' in constraint);\n}\n\nfunction isDelayConstraint(constraint) {\n  return Boolean(constraint && 'delay' in constraint);\n}\n\nclass AbstractPointerSensor {\n  constructor(props, events, listenerTarget = getEventListenerTarget(props.event.target)) {\n    var _getEventCoordinates;\n\n    this.props = void 0;\n    this.events = void 0;\n    this.autoScrollEnabled = true;\n    this.document = void 0;\n    this.activated = false;\n    this.initialCoordinates = void 0;\n    this.timeoutId = null;\n    this.listeners = void 0;\n    this.documentListeners = void 0;\n    this.windowListeners = void 0;\n    this.props = props;\n    this.events = events;\n    const {\n      event\n    } = props;\n    const {\n      target\n    } = event;\n    this.props = props;\n    this.events = events;\n    this.document = getOwnerDocument(target);\n    this.documentListeners = new Listeners(this.document);\n    this.listeners = new Listeners(listenerTarget);\n    this.windowListeners = new Listeners(getWindow(target));\n    this.initialCoordinates = (_getEventCoordinates = getEventCoordinates(event)) != null ? _getEventCoordinates : defaultCoordinates;\n    this.handleStart = this.handleStart.bind(this);\n    this.handleMove = this.handleMove.bind(this);\n    this.handleEnd = this.handleEnd.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleKeydown = this.handleKeydown.bind(this);\n    this.removeTextSelection = this.removeTextSelection.bind(this);\n    this.attach();\n  }\n\n  attach() {\n    const {\n      events,\n      props: {\n        options: {\n          activationConstraint\n        }\n      }\n    } = this;\n    this.listeners.add(events.move.name, this.handleMove, {\n      passive: false\n    });\n    this.listeners.add(events.end.name, this.handleEnd);\n    this.windowListeners.add(EventName.Resize, this.handleCancel);\n    this.windowListeners.add(EventName.DragStart, preventDefault);\n    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);\n    this.windowListeners.add(EventName.ContextMenu, preventDefault);\n    this.documentListeners.add(EventName.Keydown, this.handleKeydown);\n\n    if (activationConstraint) {\n      if (isDistanceConstraint(activationConstraint)) {\n        return;\n      }\n\n      if (isDelayConstraint(activationConstraint)) {\n        this.timeoutId = setTimeout(this.handleStart, activationConstraint.delay);\n        return;\n      }\n    }\n\n    this.handleStart();\n  }\n\n  detach() {\n    this.listeners.removeAll();\n    this.windowListeners.removeAll(); // Wait until the next event loop before removing document listeners\n    // This is necessary because we listen for `click` and `selection` events on the document\n\n    setTimeout(this.documentListeners.removeAll, 50);\n\n    if (this.timeoutId !== null) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n  }\n\n  handleStart() {\n    const {\n      initialCoordinates\n    } = this;\n    const {\n      onStart\n    } = this.props;\n\n    if (initialCoordinates) {\n      this.activated = true; // Stop propagation of click events once activation constraints are met\n\n      this.documentListeners.add(EventName.Click, stopPropagation, {\n        capture: true\n      }); // Remove any text selection from the document\n\n      this.removeTextSelection(); // Prevent further text selection while dragging\n\n      this.documentListeners.add(EventName.SelectionChange, this.removeTextSelection);\n      onStart(initialCoordinates);\n    }\n  }\n\n  handleMove(event) {\n    var _getEventCoordinates2;\n\n    const {\n      activated,\n      initialCoordinates,\n      props\n    } = this;\n    const {\n      onMove,\n      options: {\n        activationConstraint\n      }\n    } = props;\n\n    if (!initialCoordinates) {\n      return;\n    }\n\n    const coordinates = (_getEventCoordinates2 = getEventCoordinates(event)) != null ? _getEventCoordinates2 : defaultCoordinates;\n    const delta = subtract(initialCoordinates, coordinates);\n\n    if (!activated && activationConstraint) {\n      // Constraint validation\n      if (isDelayConstraint(activationConstraint)) {\n        if (hasExceededDistance(delta, activationConstraint.tolerance)) {\n          return this.handleCancel();\n        }\n\n        return;\n      }\n\n      if (isDistanceConstraint(activationConstraint)) {\n        if (activationConstraint.tolerance != null && hasExceededDistance(delta, activationConstraint.tolerance)) {\n          return this.handleCancel();\n        }\n\n        if (hasExceededDistance(delta, activationConstraint.distance)) {\n          return this.handleStart();\n        }\n\n        return;\n      }\n    }\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    onMove(coordinates);\n  }\n\n  handleEnd() {\n    const {\n      onEnd\n    } = this.props;\n    this.detach();\n    onEnd();\n  }\n\n  handleCancel() {\n    const {\n      onCancel\n    } = this.props;\n    this.detach();\n    onCancel();\n  }\n\n  handleKeydown(event) {\n    if (event.code === KeyboardCode.Esc) {\n      this.handleCancel();\n    }\n  }\n\n  removeTextSelection() {\n    var _this$document$getSel;\n\n    (_this$document$getSel = this.document.getSelection()) == null ? void 0 : _this$document$getSel.removeAllRanges();\n  }\n\n}\n\nconst events = {\n  move: {\n    name: 'pointermove'\n  },\n  end: {\n    name: 'pointerup'\n  }\n};\nclass PointerSensor extends AbstractPointerSensor {\n  constructor(props) {\n    const {\n      event\n    } = props; // Pointer events stop firing if the target is unmounted while dragging\n    // Therefore we attach listeners to the owner document instead\n\n    const listenerTarget = getOwnerDocument(event.target);\n    super(props, events, listenerTarget);\n  }\n\n}\nPointerSensor.activators = [{\n  eventName: 'onPointerDown',\n  handler: ({\n    nativeEvent: event\n  }, {\n    onActivation\n  }) => {\n    if (!event.isPrimary || event.button !== 0) {\n      return false;\n    }\n\n    onActivation == null ? void 0 : onActivation({\n      event\n    });\n    return true;\n  }\n}];\n\nconst events$1 = {\n  move: {\n    name: 'mousemove'\n  },\n  end: {\n    name: 'mouseup'\n  }\n};\nvar MouseButton;\n\n(function (MouseButton) {\n  MouseButton[MouseButton[\"RightClick\"] = 2] = \"RightClick\";\n})(MouseButton || (MouseButton = {}));\n\nclass MouseSensor extends AbstractPointerSensor {\n  constructor(props) {\n    super(props, events$1, getOwnerDocument(props.event.target));\n  }\n\n}\nMouseSensor.activators = [{\n  eventName: 'onMouseDown',\n  handler: ({\n    nativeEvent: event\n  }, {\n    onActivation\n  }) => {\n    if (event.button === MouseButton.RightClick) {\n      return false;\n    }\n\n    onActivation == null ? void 0 : onActivation({\n      event\n    });\n    return true;\n  }\n}];\n\nconst events$2 = {\n  move: {\n    name: 'touchmove'\n  },\n  end: {\n    name: 'touchend'\n  }\n};\nclass TouchSensor extends AbstractPointerSensor {\n  constructor(props) {\n    super(props, events$2);\n  }\n\n  static setup() {\n    // Adding a non-capture and non-passive `touchmove` listener in order\n    // to force `event.preventDefault()` calls to work in dynamically added\n    // touchmove event handlers. This is required for iOS Safari.\n    window.addEventListener(events$2.move.name, noop, {\n      capture: false,\n      passive: false\n    });\n    return function teardown() {\n      window.removeEventListener(events$2.move.name, noop);\n    }; // We create a new handler because the teardown function of another sensor\n    // could remove our event listener if we use a referentially equal listener.\n\n    function noop() {}\n  }\n\n}\nTouchSensor.activators = [{\n  eventName: 'onTouchStart',\n  handler: ({\n    nativeEvent: event\n  }, {\n    onActivation\n  }) => {\n    const {\n      touches\n    } = event;\n\n    if (touches.length > 1) {\n      return false;\n    }\n\n    onActivation == null ? void 0 : onActivation({\n      event\n    });\n    return true;\n  }\n}];\n\nfunction applyModifiers(modifiers, {\n  transform,\n  ...args\n}) {\n  return (modifiers == null ? void 0 : modifiers.length) ? modifiers.reduce((accumulator, modifier) => {\n    return modifier({\n      transform: accumulator,\n      ...args\n    });\n  }, transform) : transform;\n}\n\nconst defaultSensors = [{\n  sensor: PointerSensor,\n  options: {}\n}, {\n  sensor: KeyboardSensor,\n  options: {}\n}];\nconst defaultData = {\n  current: {}\n};\nconst ActiveDraggableContext = /*#__PURE__*/createContext({ ...defaultCoordinates,\n  scaleX: 1,\n  scaleY: 1\n});\nconst DndContext = /*#__PURE__*/memo(function DndContext({\n  id,\n  autoScroll = true,\n  announcements,\n  children,\n  sensors = defaultSensors,\n  collisionDetection = rectIntersection,\n  measuring,\n  modifiers,\n  screenReaderInstructions: screenReaderInstructions$1 = screenReaderInstructions,\n  ...props\n}) {\n  var _measuring$draggable$, _measuring$draggable, _sensorContext$curren, _measuring$dragOverla, _dragOverlay$nodeRef$, _dragOverlay$rect, _over$rect;\n\n  const store = useReducer(reducer, undefined, getInitialState);\n  const [state, dispatch] = store;\n  const [monitorState, setMonitorState] = useState(() => ({\n    type: null,\n    event: null\n  }));\n  const [isDragging, setIsDragging] = useState(false);\n  const {\n    draggable: {\n      active: activeId,\n      nodes: draggableNodes,\n      translate\n    },\n    droppable: {\n      containers: droppableContainers\n    }\n  } = state;\n  const node = activeId ? draggableNodes[activeId] : null;\n  const activeRects = useRef({\n    initial: null,\n    translated: null\n  });\n  const active = useMemo(() => {\n    var _node$data;\n\n    return activeId != null ? {\n      id: activeId,\n      // It's possible for the active node to unmount while dragging\n      data: (_node$data = node == null ? void 0 : node.data) != null ? _node$data : defaultData,\n      rect: activeRects\n    } : null;\n  }, [activeId, node]);\n  const activeRef = useRef(null);\n  const [activeSensor, setActiveSensor] = useState(null);\n  const [activatorEvent, setActivatorEvent] = useState(null);\n  const latestProps = useLatestValue(props, Object.values(props));\n  const draggableDescribedById = useUniqueId(`DndDescribedBy`, id);\n  const enabledDroppableContainers = useMemo(() => droppableContainers.getEnabled(), [droppableContainers]);\n  const {\n    droppableRects,\n    measureDroppableContainers,\n    measuringScheduled\n  } = useDroppableMeasuring(enabledDroppableContainers, {\n    dragging: isDragging,\n    dependencies: [translate.x, translate.y],\n    config: measuring == null ? void 0 : measuring.droppable\n  });\n  const activeNode = useCachedNode(draggableNodes, activeId);\n  const activationCoordinates = activatorEvent ? getEventCoordinates(activatorEvent) : null;\n  const activeNodeRect = useRect(activeNode, (_measuring$draggable$ = measuring == null ? void 0 : (_measuring$draggable = measuring.draggable) == null ? void 0 : _measuring$draggable.measure) != null ? _measuring$draggable$ : getTransformAgnosticClientRect);\n  const containerNodeRect = useClientRect(activeNode ? activeNode.parentElement : null);\n  const sensorContext = useRef({\n    active: null,\n    activeNode,\n    collisionRect: null,\n    collisions: null,\n    droppableRects,\n    draggableNodes,\n    draggingNode: null,\n    draggingNodeRect: null,\n    droppableContainers,\n    over: null,\n    scrollableAncestors: [],\n    scrollAdjustedTranslate: null\n  });\n  const overNode = droppableContainers.getNodeFor((_sensorContext$curren = sensorContext.current.over) == null ? void 0 : _sensorContext$curren.id);\n  const dragOverlay = useDragOverlayMeasuring({\n    measure: measuring == null ? void 0 : (_measuring$dragOverla = measuring.dragOverlay) == null ? void 0 : _measuring$dragOverla.measure\n  }); // Use the rect of the drag overlay if it is mounted\n\n  const draggingNode = (_dragOverlay$nodeRef$ = dragOverlay.nodeRef.current) != null ? _dragOverlay$nodeRef$ : activeNode;\n  const draggingNodeRect = (_dragOverlay$rect = dragOverlay.rect) != null ? _dragOverlay$rect : activeNodeRect;\n  const initialActiveNodeRectRef = useRef(null);\n  const initialActiveNodeRect = initialActiveNodeRectRef.current; // The delta between the previous and new position of the draggable node\n  // is only relevant when there is no drag overlay\n\n  const nodeRectDelta = draggingNodeRect === activeNodeRect ? getRectDelta(activeNodeRect, initialActiveNodeRect) : defaultCoordinates; // Get the window rect of the dragging node\n\n  const windowRect = useWindowRect(draggingNode ? draggingNode.ownerDocument.defaultView : null); // Get scrollable ancestors of the dragging node\n\n  const scrollableAncestors = useScrollableAncestors(activeId ? overNode != null ? overNode : draggingNode : null);\n  const scrollableAncestorRects = useClientRects(scrollableAncestors); // Apply modifiers\n\n  const modifiedTranslate = applyModifiers(modifiers, {\n    transform: {\n      x: translate.x - nodeRectDelta.x,\n      y: translate.y - nodeRectDelta.y,\n      scaleX: 1,\n      scaleY: 1\n    },\n    activatorEvent,\n    active,\n    activeNodeRect,\n    containerNodeRect,\n    draggingNodeRect,\n    over: sensorContext.current.over,\n    overlayNodeRect: dragOverlay.rect,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    windowRect\n  });\n  const pointerCoordinates = activationCoordinates ? add(activationCoordinates, translate) : null;\n  const scrollAdjustment = useScrollOffsets(scrollableAncestors);\n  const scrollAdjustedTranslate = add(modifiedTranslate, scrollAdjustment);\n  const collisionRect = draggingNodeRect ? getAdjustedRect(draggingNodeRect, modifiedTranslate) : null;\n  const collisions = active && collisionRect ? collisionDetection({\n    active,\n    collisionRect,\n    droppableContainers: enabledDroppableContainers,\n    pointerCoordinates\n  }) : null;\n  const overId = getFirstCollision(collisions, 'id');\n  const [over, setOver] = useState(null);\n  const transform = adjustScale(modifiedTranslate, (_over$rect = over == null ? void 0 : over.rect) != null ? _over$rect : null, activeNodeRect);\n  const instantiateSensor = useCallback((event, {\n    sensor: Sensor,\n    options\n  }) => {\n    if (!activeRef.current) {\n      return;\n    }\n\n    const activeNode = draggableNodes[activeRef.current];\n\n    if (!activeNode) {\n      return;\n    }\n\n    const sensorInstance = new Sensor({\n      active: activeRef.current,\n      activeNode,\n      event: event.nativeEvent,\n      options,\n      // Sensors need to be instantiated with refs for arguments that change over time\n      // otherwise they are frozen in time with the stale arguments\n      context: sensorContext,\n\n      onStart(initialCoordinates) {\n        const id = activeRef.current;\n\n        if (!id) {\n          return;\n        }\n\n        const node = draggableNodes[id];\n\n        if (!node) {\n          return;\n        }\n\n        const {\n          onDragStart\n        } = latestProps.current;\n        const event = {\n          active: {\n            id,\n            data: node.data,\n            rect: activeRects\n          }\n        };\n        unstable_batchedUpdates(() => {\n          dispatch({\n            type: Action.DragStart,\n            initialCoordinates,\n            active: id\n          });\n          setMonitorState({\n            type: Action.DragStart,\n            event\n          });\n        });\n        onDragStart == null ? void 0 : onDragStart(event);\n      },\n\n      onMove(coordinates) {\n        dispatch({\n          type: Action.DragMove,\n          coordinates\n        });\n      },\n\n      onEnd: createHandler(Action.DragEnd),\n      onCancel: createHandler(Action.DragCancel)\n    });\n    unstable_batchedUpdates(() => {\n      setActiveSensor(sensorInstance);\n      setActivatorEvent(event.nativeEvent);\n    });\n\n    function createHandler(type) {\n      return async function handler() {\n        const {\n          active,\n          collisions,\n          over,\n          scrollAdjustedTranslate\n        } = sensorContext.current;\n        let event = null;\n\n        if (active && scrollAdjustedTranslate) {\n          const {\n            cancelDrop\n          } = latestProps.current;\n          event = {\n            active: active,\n            collisions,\n            delta: scrollAdjustedTranslate,\n            over\n          };\n\n          if (type === Action.DragEnd && typeof cancelDrop === 'function') {\n            const shouldCancel = await Promise.resolve(cancelDrop(event));\n\n            if (shouldCancel) {\n              type = Action.DragCancel;\n            }\n          }\n        }\n\n        activeRef.current = null;\n        unstable_batchedUpdates(() => {\n          dispatch({\n            type\n          });\n          setOver(null);\n          setIsDragging(false);\n          setActiveSensor(null);\n          setActivatorEvent(null);\n\n          if (event) {\n            setMonitorState({\n              type,\n              event\n            });\n          }\n\n          if (event) {\n            const {\n              onDragCancel,\n              onDragEnd\n            } = latestProps.current;\n            const handler = type === Action.DragEnd ? onDragEnd : onDragCancel;\n            handler == null ? void 0 : handler(event);\n          }\n        });\n      };\n    }\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [draggableNodes]);\n  const bindActivatorToSensorInstantiator = useCallback((handler, sensor) => {\n    return (event, active) => {\n      const nativeEvent = event.nativeEvent;\n\n      if ( // No active draggable\n      activeRef.current !== null || // Event has already been captured\n      nativeEvent.dndKit || nativeEvent.defaultPrevented) {\n        return;\n      }\n\n      if (handler(event, sensor.options) === true) {\n        nativeEvent.dndKit = {\n          capturedBy: sensor.sensor\n        };\n        activeRef.current = active;\n        instantiateSensor(event, sensor);\n      }\n    };\n  }, [instantiateSensor]);\n  const activators = useCombineActivators(sensors, bindActivatorToSensorInstantiator);\n  useSensorSetup(sensors);\n  useEffect(() => {\n    if (activeId != null) {\n      setIsDragging(true);\n    }\n  }, [activeId]);\n  useEffect(() => {\n    if (!active) {\n      initialActiveNodeRectRef.current = null;\n    }\n\n    if (active && activeNodeRect && !initialActiveNodeRectRef.current) {\n      initialActiveNodeRectRef.current = activeNodeRect;\n    }\n  }, [activeNodeRect, active]);\n  useEffect(() => {\n    const {\n      onDragMove\n    } = latestProps.current;\n    const {\n      active,\n      collisions,\n      over\n    } = sensorContext.current;\n\n    if (!active) {\n      return;\n    }\n\n    const event = {\n      active,\n      collisions,\n      delta: {\n        x: scrollAdjustedTranslate.x,\n        y: scrollAdjustedTranslate.y\n      },\n      over\n    };\n    setMonitorState({\n      type: Action.DragMove,\n      event\n    });\n    onDragMove == null ? void 0 : onDragMove(event);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [scrollAdjustedTranslate.x, scrollAdjustedTranslate.y]);\n  useEffect(() => {\n    const {\n      active,\n      collisions,\n      droppableContainers,\n      scrollAdjustedTranslate\n    } = sensorContext.current;\n\n    if (!active || !activeRef.current || !scrollAdjustedTranslate) {\n      return;\n    }\n\n    const {\n      onDragOver\n    } = latestProps.current;\n    const overContainer = droppableContainers.get(overId);\n    const over = overContainer && overContainer.rect.current ? {\n      id: overContainer.id,\n      rect: overContainer.rect.current,\n      data: overContainer.data,\n      disabled: overContainer.disabled\n    } : null;\n    const event = {\n      active,\n      collisions,\n      delta: {\n        x: scrollAdjustedTranslate.x,\n        y: scrollAdjustedTranslate.y\n      },\n      over\n    };\n    unstable_batchedUpdates(() => {\n      setOver(over);\n      setMonitorState({\n        type: Action.DragOver,\n        event\n      });\n      onDragOver == null ? void 0 : onDragOver(event);\n    });\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [overId]);\n  useIsomorphicLayoutEffect(() => {\n    sensorContext.current = {\n      active,\n      activeNode,\n      collisionRect,\n      collisions,\n      droppableRects,\n      draggableNodes,\n      draggingNode,\n      draggingNodeRect,\n      droppableContainers,\n      over,\n      scrollableAncestors,\n      scrollAdjustedTranslate: scrollAdjustedTranslate\n    };\n    activeRects.current = {\n      initial: draggingNodeRect,\n      translated: collisionRect\n    };\n  }, [active, activeNode, collisions, collisionRect, draggableNodes, draggingNode, draggingNodeRect, droppableRects, droppableContainers, over, scrollableAncestors, scrollAdjustedTranslate]);\n  useAutoScroller({ ...getAutoScrollerOptions(),\n    draggingRect: collisionRect,\n    pointerCoordinates,\n    scrollableAncestors,\n    scrollableAncestorRects\n  });\n  const publicContext = useMemo(() => {\n    const context = {\n      active,\n      activeNode,\n      activeNodeRect,\n      activatorEvent,\n      collisions,\n      containerNodeRect,\n      dragOverlay,\n      draggableNodes,\n      droppableContainers,\n      droppableRects,\n      over,\n      measureDroppableContainers,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      measuringScheduled,\n      windowRect\n    };\n    return context;\n  }, [active, activeNode, activeNodeRect, activatorEvent, collisions, containerNodeRect, dragOverlay, draggableNodes, droppableContainers, droppableRects, over, measureDroppableContainers, scrollableAncestors, scrollableAncestorRects, measuringScheduled, windowRect]);\n  const internalContext = useMemo(() => {\n    const context = {\n      activatorEvent,\n      activators,\n      active,\n      activeNodeRect,\n      ariaDescribedById: {\n        draggable: draggableDescribedById\n      },\n      dispatch,\n      draggableNodes,\n      over,\n      measureDroppableContainers\n    };\n    return context;\n  }, [activatorEvent, activators, active, activeNodeRect, dispatch, draggableDescribedById, draggableNodes, over, measureDroppableContainers]);\n  return React.createElement(DndMonitorContext.Provider, {\n    value: monitorState\n  }, React.createElement(InternalContext.Provider, {\n    value: internalContext\n  }, React.createElement(PublicContext.Provider, {\n    value: publicContext\n  }, React.createElement(ActiveDraggableContext.Provider, {\n    value: transform\n  }, children))), React.createElement(Accessibility, {\n    announcements: announcements,\n    hiddenTextDescribedById: draggableDescribedById,\n    screenReaderInstructions: screenReaderInstructions$1\n  }));\n\n  function getAutoScrollerOptions() {\n    const activeSensorDisablesAutoscroll = (activeSensor == null ? void 0 : activeSensor.autoScrollEnabled) === false;\n    const autoScrollGloballyDisabled = typeof autoScroll === 'object' ? autoScroll.enabled === false : autoScroll === false;\n    const enabled = !activeSensorDisablesAutoscroll && !autoScrollGloballyDisabled;\n\n    if (typeof autoScroll === 'object') {\n      return { ...autoScroll,\n        enabled\n      };\n    }\n\n    return {\n      enabled\n    };\n  }\n});\n\nconst NullContext = /*#__PURE__*/createContext(null);\nconst defaultRole = 'button';\nconst ID_PREFIX = 'Droppable';\nfunction useDraggable({\n  id,\n  data,\n  disabled = false,\n  attributes\n}) {\n  const key = useUniqueId(ID_PREFIX);\n  const {\n    activators,\n    activatorEvent,\n    active,\n    activeNodeRect,\n    ariaDescribedById,\n    draggableNodes,\n    over\n  } = useContext(InternalContext);\n  const {\n    role = defaultRole,\n    roleDescription = 'draggable',\n    tabIndex = 0\n  } = attributes != null ? attributes : {};\n  const isDragging = (active == null ? void 0 : active.id) === id;\n  const transform = useContext(isDragging ? ActiveDraggableContext : NullContext);\n  const [node, setNodeRef] = useNodeRef();\n  const listeners = useSyntheticListeners(activators, id);\n  const dataRef = useLatestValue(data);\n  useIsomorphicLayoutEffect(() => {\n    draggableNodes[id] = {\n      id,\n      key,\n      node,\n      data: dataRef\n    };\n    return () => {\n      const node = draggableNodes[id];\n\n      if (node && node.key === key) {\n        delete draggableNodes[id];\n      }\n    };\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [draggableNodes, id]);\n  const memoizedAttributes = useMemo(() => ({\n    role,\n    tabIndex,\n    'aria-pressed': isDragging && role === defaultRole ? true : undefined,\n    'aria-roledescription': roleDescription,\n    'aria-describedby': ariaDescribedById.draggable\n  }), [role, tabIndex, isDragging, roleDescription, ariaDescribedById.draggable]);\n  return {\n    active,\n    activatorEvent,\n    activeNodeRect,\n    attributes: memoizedAttributes,\n    isDragging,\n    listeners: disabled ? undefined : listeners,\n    node,\n    over,\n    setNodeRef,\n    transform\n  };\n}\n\nfunction useDndContext() {\n  return useContext(PublicContext);\n}\n\nconst ID_PREFIX$1 = 'Droppable';\nconst defaultResizeObserverConfig = {\n  timeout: 25\n};\nfunction useDroppable({\n  data,\n  disabled = false,\n  id,\n  resizeObserverConfig\n}) {\n  const key = useUniqueId(ID_PREFIX$1);\n  const {\n    active,\n    dispatch,\n    over,\n    measureDroppableContainers\n  } = useContext(InternalContext);\n  const resizeObserverConnected = useRef(false);\n  const rect = useRef(null);\n  const callbackId = useRef(null);\n  const {\n    disabled: resizeObserverDisabled,\n    updateMeasurementsFor,\n    timeout: resizeObserverTimeout\n  } = { ...defaultResizeObserverConfig,\n    ...resizeObserverConfig\n  };\n  const ids = useLatestValue(updateMeasurementsFor != null ? updateMeasurementsFor : id);\n  const handleResize = useCallback(() => {\n    if (!resizeObserverConnected.current) {\n      // ResizeObserver invokes the `handleResize` callback as soon as `observe` is called,\n      // assuming the element is rendered and displayed.\n      resizeObserverConnected.current = true;\n      return;\n    }\n\n    if (callbackId.current != null) {\n      clearTimeout(callbackId.current);\n    }\n\n    callbackId.current = setTimeout(() => {\n      measureDroppableContainers(typeof ids.current === 'string' ? [ids.current] : ids.current);\n      callbackId.current = null;\n    }, resizeObserverTimeout);\n  }, //eslint-disable-next-line react-hooks/exhaustive-deps\n  [resizeObserverTimeout]);\n  const resizeObserver = useResizeObserver({\n    onResize: handleResize,\n    disabled: resizeObserverDisabled || !active\n  });\n  const handleNodeChange = useCallback((newElement, previousElement) => {\n    if (!resizeObserver) {\n      return;\n    }\n\n    if (previousElement) {\n      resizeObserver.unobserve(previousElement);\n      resizeObserverConnected.current = false;\n    }\n\n    if (newElement) {\n      resizeObserver.observe(newElement);\n    }\n  }, [resizeObserver]);\n  const [nodeRef, setNodeRef] = useNodeRef(handleNodeChange);\n  const dataRef = useLatestValue(data);\n  useEffect(() => {\n    if (!resizeObserver || !nodeRef.current) {\n      return;\n    }\n\n    resizeObserver.disconnect();\n    resizeObserverConnected.current = false;\n    resizeObserver.observe(nodeRef.current);\n  }, [nodeRef, resizeObserver]);\n  useIsomorphicLayoutEffect(() => {\n    dispatch({\n      type: Action.RegisterDroppable,\n      element: {\n        id,\n        key,\n        disabled,\n        node: nodeRef,\n        rect,\n        data: dataRef\n      }\n    });\n    return () => dispatch({\n      type: Action.UnregisterDroppable,\n      key,\n      id\n    });\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [id]);\n  useEffect(() => {\n    dispatch({\n      type: Action.SetDroppableDisabled,\n      id,\n      key,\n      disabled\n    });\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [disabled]);\n  return {\n    active,\n    rect,\n    isOver: (over == null ? void 0 : over.id) === id,\n    node: nodeRef,\n    over,\n    setNodeRef\n  };\n}\n\nconst defaultDropAnimation = {\n  duration: 250,\n  easing: 'ease',\n  dragSourceOpacity: 0\n};\nfunction useDropAnimation({\n  animate,\n  adjustScale,\n  activeId,\n  draggableNodes,\n  duration,\n  dragSourceOpacity,\n  easing,\n  node,\n  transform\n}) {\n  const [dropAnimationComplete, setDropAnimationComplete] = useState(false);\n  useIsomorphicLayoutEffect(() => {\n    var _draggableNodes$activ;\n\n    if (!animate || !activeId || !easing || !duration) {\n      if (animate) {\n        setDropAnimationComplete(true);\n      }\n\n      return;\n    }\n\n    const finalNode = (_draggableNodes$activ = draggableNodes[activeId]) == null ? void 0 : _draggableNodes$activ.node.current;\n\n    if (transform && node && finalNode && finalNode.parentNode !== null) {\n      const fromNode = getMeasurableNode(node);\n\n      if (fromNode) {\n        const from = fromNode.getBoundingClientRect();\n        const to = getTransformAgnosticClientRect(finalNode);\n        const delta = {\n          x: from.left - to.left,\n          y: from.top - to.top\n        };\n\n        if (Math.abs(delta.x) || Math.abs(delta.y)) {\n          const scaleDelta = {\n            scaleX: adjustScale ? to.width * transform.scaleX / from.width : 1,\n            scaleY: adjustScale ? to.height * transform.scaleY / from.height : 1\n          };\n          const finalTransform = CSS.Transform.toString({\n            x: transform.x - delta.x,\n            y: transform.y - delta.y,\n            ...scaleDelta\n          });\n          const originalOpacity = finalNode.style.opacity;\n\n          if (dragSourceOpacity != null) {\n            finalNode.style.opacity = `${dragSourceOpacity}`;\n          }\n\n          const nodeAnimation = node.animate([{\n            transform: CSS.Transform.toString(transform)\n          }, {\n            transform: finalTransform\n          }], {\n            easing,\n            duration\n          });\n\n          nodeAnimation.onfinish = () => {\n            node.style.display = 'none';\n            setDropAnimationComplete(true);\n\n            if (finalNode && dragSourceOpacity != null) {\n              finalNode.style.opacity = originalOpacity;\n            }\n          };\n\n          return;\n        }\n      }\n    }\n\n    setDropAnimationComplete(true);\n  }, [animate, activeId, adjustScale, draggableNodes, duration, easing, dragSourceOpacity, node, transform]);\n  useIsomorphicLayoutEffect(() => {\n    if (dropAnimationComplete) {\n      setDropAnimationComplete(false);\n    }\n  }, [dropAnimationComplete]);\n  return dropAnimationComplete;\n}\n\nconst defaultTransform = {\n  x: 0,\n  y: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nconst defaultTransition = activatorEvent => {\n  const isKeyboardActivator = isKeyboardEvent(activatorEvent);\n  return isKeyboardActivator ? 'transform 250ms ease' : undefined;\n};\n\nconst DragOverlay = /*#__PURE__*/React.memo(({\n  adjustScale = false,\n  children,\n  dropAnimation = defaultDropAnimation,\n  style: styleProp,\n  transition = defaultTransition,\n  modifiers,\n  wrapperElement = 'div',\n  className,\n  zIndex = 999\n}) => {\n  var _active$id, _attributesSnapshot$c;\n\n  const {\n    active,\n    activeNodeRect,\n    containerNodeRect,\n    draggableNodes,\n    activatorEvent,\n    over,\n    dragOverlay,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    windowRect\n  } = useDndContext();\n  const transform = useContext(ActiveDraggableContext);\n  const modifiedTransform = applyModifiers(modifiers, {\n    activatorEvent,\n    active,\n    activeNodeRect,\n    containerNodeRect,\n    draggingNodeRect: dragOverlay.rect,\n    over,\n    overlayNodeRect: dragOverlay.rect,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    transform,\n    windowRect\n  });\n  const isDragging = active !== null;\n  const finalTransform = adjustScale ? modifiedTransform : { ...modifiedTransform,\n    scaleX: 1,\n    scaleY: 1\n  };\n  const initialRect = useLazyMemo(previousValue => {\n    if (isDragging) {\n      if (previousValue) {\n        return previousValue;\n      }\n\n      if (!activeNodeRect) {\n        return null;\n      }\n\n      return { ...activeNodeRect\n      };\n    }\n\n    return null;\n  }, [isDragging, activeNodeRect]);\n  const style = initialRect ? {\n    position: 'fixed',\n    width: initialRect.width,\n    height: initialRect.height,\n    top: initialRect.top,\n    left: initialRect.left,\n    zIndex,\n    transform: CSS.Transform.toString(finalTransform),\n    touchAction: 'none',\n    transformOrigin: adjustScale && activatorEvent ? getRelativeTransformOrigin(activatorEvent, initialRect) : undefined,\n    transition: typeof transition === 'function' ? transition(activatorEvent) : transition,\n    ...styleProp\n  } : undefined;\n  const attributes = isDragging ? {\n    style,\n    children,\n    className,\n    transform: finalTransform\n  } : undefined;\n  const attributesSnapshot = useRef(attributes);\n  const derivedAttributes = attributes != null ? attributes : attributesSnapshot.current;\n  const {\n    children: finalChildren,\n    transform: _,\n    ...otherAttributes\n  } = derivedAttributes != null ? derivedAttributes : {};\n  const prevActiveId = useRef((_active$id = active == null ? void 0 : active.id) != null ? _active$id : null);\n  const dropAnimationComplete = useDropAnimation({\n    animate: Boolean(dropAnimation && prevActiveId.current && !active),\n    adjustScale,\n    activeId: prevActiveId.current,\n    draggableNodes,\n    duration: dropAnimation == null ? void 0 : dropAnimation.duration,\n    easing: dropAnimation == null ? void 0 : dropAnimation.easing,\n    dragSourceOpacity: dropAnimation == null ? void 0 : dropAnimation.dragSourceOpacity,\n    node: dragOverlay.nodeRef.current,\n    transform: (_attributesSnapshot$c = attributesSnapshot.current) == null ? void 0 : _attributesSnapshot$c.transform\n  });\n  const shouldRender = Boolean(finalChildren && (children || dropAnimation && !dropAnimationComplete));\n  useEffect(() => {\n    if ((active == null ? void 0 : active.id) !== prevActiveId.current) {\n      var _active$id2;\n\n      prevActiveId.current = (_active$id2 = active == null ? void 0 : active.id) != null ? _active$id2 : null;\n    }\n\n    if (active && attributesSnapshot.current !== attributes) {\n      attributesSnapshot.current = attributes;\n    }\n  }, [active, attributes]);\n  useEffect(() => {\n    if (dropAnimationComplete) {\n      attributesSnapshot.current = undefined;\n    }\n  }, [dropAnimationComplete]);\n\n  if (!shouldRender) {\n    return null;\n  }\n\n  return React.createElement(InternalContext.Provider, {\n    value: defaultInternalContext\n  }, React.createElement(ActiveDraggableContext.Provider, {\n    value: defaultTransform\n  }, React.createElement(wrapperElement, { ...otherAttributes,\n    ref: dragOverlay.setRef\n  }, finalChildren)));\n});\n\nexport { AutoScrollActivator, DndContext, DragOverlay, KeyboardCode, KeyboardSensor, MeasuringFrequency, MeasuringStrategy, MouseSensor, PointerSensor, TouchSensor, TraversalOrder, applyModifiers, closestCenter, closestCorners, defaultAnnouncements, defaultCoordinates, defaultDropAnimation, getClientRect, getFirstCollision, getScrollableAncestors, pointerWithin, rectIntersection, useDndContext, useDndMonitor, useDraggable, useDroppable, useSensor, useSensors };\n//# sourceMappingURL=core.esm.js.map\n","import React from \"react\";\nimport classNames from \"classnames/bind\";\nimport { useDroppable } from \"@dnd-kit/core\";\nimport styles from \"./styles.module.scss\";\n\nconst cnb = classNames.bind(styles);\n\ninterface Props {\n  readonly itemsInside: number;\n}\n\nconst DroppableArea: React.FC<Props> = ({ children, itemsInside }) => {\n  const { isOver, setNodeRef } = useDroppable({\n    id: \"area constructor\"\n  });\n  const hasElements = itemsInside > 0;\n  const showLine = itemsInside > 0 && itemsInside < 4 && isOver;\n\n  const style = {\n    background: !hasElements && isOver ? \"#F0F9FF\" : undefined\n  };\n\n  return (\n    <div className={cnb(\"area\", { filled: hasElements })} ref={setNodeRef} style={style}>\n      {children}\n      {showLine && <div className={cnb(\"line\")} />}\n    </div>\n  );\n};\n\nexport default DroppableArea;\n","// extracted by mini-css-extract-plugin\nexport default {\"area\":\"+TLF7tGOp61bbPMwPCB+6Q==\",\"filled\":\"sJSZI973oxubhxGiG6EROA==\",\"line\":\"aEbcA4AE+V5pua0vfAZqXg==\"};","import React from \"react\";\n\nconst ImageSvg: React.FC = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    width={22}\n    height={22}\n    viewBox='0 0 22 22'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n    {...props}\n  >\n    <path d='M18.7778 1V5.44444' stroke='black' strokeWidth={2} strokeLinecap='round' />\n    <path d='M21 3.22222L16.5556 3.22222' stroke='black' strokeWidth={2} strokeLinecap='round' />\n    <path\n      d='M12.3889 4.22222C12.9412 4.22222 13.3889 3.77451 13.3889 3.22222C13.3889 2.66994 12.9412 2.22222 12.3889 2.22222V4.22222ZM19.7778 9.61111C19.7778 9.05883 19.3301 8.61111 18.7778 8.61111C18.2255 8.61111 17.7778 9.05883 17.7778 9.61111H19.7778ZM14.1818 17.5404C14.5723 17.931 15.2055 17.931 15.596 17.5404C15.9865 17.1499 15.9865 16.5168 15.596 16.1262L14.1818 17.5404ZM14.7778 20H5V22H14.7778V20ZM5 4.22222H12.3889V2.22222H5V4.22222ZM17.7778 9.61111V17H19.7778V9.61111H17.7778ZM2 17V16.2778H0V17H2ZM2 16.2778V7.22223H0V16.2778H2ZM1.70711 16.9849L5.54535 13.1466L4.13113 11.7324L0.292893 15.5707L1.70711 16.9849ZM9.78797 13.1466C9.7907 13.1494 9.79344 13.1521 9.79618 13.1548C9.79892 13.1576 9.80166 13.1603 9.8044 13.1631C9.80714 13.1658 9.80988 13.1685 9.81262 13.1713C9.81537 13.174 9.81811 13.1768 9.82085 13.1795C9.8236 13.1823 9.82634 13.185 9.82909 13.1877C9.83184 13.1905 9.83459 13.1932 9.83733 13.196C9.84008 13.1987 9.84283 13.2015 9.84558 13.2042C9.84833 13.207 9.85108 13.2097 9.85384 13.2125C9.85659 13.2152 9.85934 13.218 9.8621 13.2208C9.86485 13.2235 9.86761 13.2263 9.87036 13.229C9.87312 13.2318 9.87588 13.2345 9.87864 13.2373C9.8814 13.2401 9.88416 13.2428 9.88692 13.2456C9.88968 13.2483 9.89244 13.2511 9.8952 13.2539C9.89796 13.2566 9.90073 13.2594 9.90349 13.2621C9.90625 13.2649 9.90902 13.2677 9.91179 13.2704C9.91455 13.2732 9.91732 13.276 9.92009 13.2787C9.92285 13.2815 9.92562 13.2843 9.92839 13.2871C9.93116 13.2898 9.93394 13.2926 9.93671 13.2954C9.93948 13.2981 9.94225 13.3009 9.94503 13.3037C9.9478 13.3065 9.95057 13.3092 9.95335 13.312C9.95613 13.3148 9.9589 13.3176 9.96168 13.3203C9.96446 13.3231 9.96724 13.3259 9.97001 13.3287C9.97279 13.3315 9.97557 13.3342 9.97836 13.337C9.98114 13.3398 9.98392 13.3426 9.9867 13.3454C9.98948 13.3481 9.99227 13.3509 9.99505 13.3537C9.99784 13.3565 10.0006 13.3593 10.0034 13.3621C10.0062 13.3649 10.009 13.3676 10.0118 13.3704C10.0146 13.3732 10.0174 13.376 10.0201 13.3788C10.0229 13.3816 10.0257 13.3844 10.0285 13.3872C10.0313 13.39 10.0341 13.3928 10.0369 13.3956C10.0397 13.3983 10.0425 13.4011 10.0453 13.4039C10.0481 13.4067 10.0509 13.4095 10.0537 13.4123C10.0565 13.4151 10.0593 13.4179 10.0621 13.4207C10.0649 13.4235 10.0677 13.4263 10.0705 13.4291C10.0733 13.4319 10.0761 13.4347 10.0789 13.4375C10.0817 13.4403 10.0845 13.4431 10.0873 13.4459C10.0901 13.4487 10.0929 13.4515 10.0957 13.4544C10.0985 13.4572 10.1013 13.46 10.1041 13.4628C10.1069 13.4656 10.1097 13.4684 10.1125 13.4712C10.1154 13.474 10.1182 13.4768 10.121 13.4796C10.1238 13.4824 10.1266 13.4853 10.1294 13.4881C10.1322 13.4909 10.135 13.4937 10.1379 13.4965C10.1407 13.4993 10.1435 13.5021 10.1463 13.505C10.1491 13.5078 10.1519 13.5106 10.1547 13.5134C10.1576 13.5162 10.1604 13.519 10.1632 13.5219C10.166 13.5247 10.1688 13.5275 10.1717 13.5303C10.1745 13.5331 10.1773 13.536 10.1801 13.5388C10.183 13.5416 10.1858 13.5444 10.1886 13.5473C10.1914 13.5501 10.1943 13.5529 10.1971 13.5557C10.1999 13.5586 10.2027 13.5614 10.2056 13.5642C10.2084 13.567 10.2112 13.5699 10.214 13.5727C10.2169 13.5755 10.2197 13.5784 10.2225 13.5812C10.2254 13.584 10.2282 13.5869 10.231 13.5897C10.2339 13.5925 10.2367 13.5954 10.2395 13.5982C10.2424 13.601 10.2452 13.6039 10.248 13.6067C10.2509 13.6095 10.2537 13.6124 10.2565 13.6152C10.2594 13.618 10.2622 13.6209 10.2651 13.6237C10.2679 13.6266 10.2707 13.6294 10.2736 13.6322C10.2764 13.6351 10.2793 13.6379 10.2821 13.6408C10.2849 13.6436 10.2878 13.6464 10.2906 13.6493C10.2935 13.6521 10.2963 13.655 10.2992 13.6578C10.302 13.6607 10.3048 13.6635 10.3077 13.6663C10.3105 13.6692 10.3134 13.672 10.3162 13.6749C10.3191 13.6777 10.3219 13.6806 10.3248 13.6834C10.3276 13.6863 10.3305 13.6891 10.3333 13.692C10.3362 13.6948 10.339 13.6977 10.3419 13.7005C10.3447 13.7034 10.3476 13.7062 10.3504 13.7091C10.3533 13.7119 10.3561 13.7148 10.359 13.7177C10.3619 13.7205 10.3647 13.7234 10.3676 13.7262C10.3704 13.7291 10.3733 13.7319 10.3761 13.7348C10.379 13.7377 10.3819 13.7405 10.3847 13.7434C10.3876 13.7462 10.3904 13.7491 10.3933 13.7519C10.3962 13.7548 10.399 13.7577 10.4019 13.7605C10.4047 13.7634 10.4076 13.7663 10.4105 13.7691C10.4133 13.772 10.4162 13.7748 10.4191 13.7777C10.4219 13.7806 10.4248 13.7834 10.4277 13.7863C10.4305 13.7892 10.4334 13.792 10.4362 13.7949C10.4391 13.7978 10.442 13.8006 10.4449 13.8035C10.4477 13.8064 10.4506 13.8092 10.4535 13.8121C10.4563 13.815 10.4592 13.8179 10.4621 13.8207C10.4649 13.8236 10.4678 13.8265 10.4707 13.8293C10.4736 13.8322 10.4764 13.8351 10.4793 13.838C10.4822 13.8408 10.4851 13.8437 10.4879 13.8466C10.4908 13.8495 10.4937 13.8523 10.4966 13.8552C10.4994 13.8581 10.5023 13.861 10.5052 13.8638C10.5081 13.8667 10.5109 13.8696 10.5138 13.8725C10.5167 13.8754 10.5196 13.8782 10.5225 13.8811C10.5253 13.884 10.5282 13.8869 10.5311 13.8898C10.534 13.8926 10.5369 13.8955 10.5398 13.8984C10.5426 13.9013 10.5455 13.9042 10.5484 13.9071C10.5513 13.9099 10.5542 13.9128 10.5571 13.9157C10.5599 13.9186 10.5628 13.9215 10.5657 13.9244C10.5686 13.9273 10.5715 13.9301 10.5744 13.933C10.5773 13.9359 10.5802 13.9388 10.583 13.9417C10.5859 13.9446 10.5888 13.9475 10.5917 13.9504C10.5946 13.9533 10.5975 13.9562 10.6004 13.959C10.6033 13.9619 10.6062 13.9648 10.6091 13.9677C10.612 13.9706 10.6148 13.9735 10.6177 13.9764C10.6206 13.9793 10.6235 13.9822 10.6264 13.9851C10.6293 13.988 10.6322 13.9909 10.6351 13.9938C10.638 13.9967 10.6409 13.9996 10.6438 14.0025C10.6467 14.0054 10.6496 14.0082 10.6525 14.0111C10.6554 14.014 10.6583 14.0169 10.6612 14.0198C10.6641 14.0227 10.667 14.0256 10.6699 14.0285C10.6728 14.0314 10.6757 14.0343 10.6786 14.0372C10.6815 14.0401 10.6844 14.043 10.6873 14.0459C10.6902 14.0489 10.6931 14.0518 10.696 14.0547C10.6989 14.0576 10.7018 14.0605 10.7047 14.0634C10.7076 14.0663 10.7105 14.0692 10.7134 14.0721C10.7163 14.075 10.7192 14.0779 10.7221 14.0808C10.7251 14.0837 10.728 14.0866 10.7309 14.0895C10.7338 14.0924 10.7367 14.0953 10.7396 14.0983C10.7425 14.1012 10.7454 14.1041 10.7483 14.107C10.7512 14.1099 10.7541 14.1128 10.7571 14.1157C10.76 14.1186 10.7629 14.1215 10.7658 14.1244C10.7687 14.1274 10.7716 14.1303 10.7745 14.1332C10.7774 14.1361 10.7803 14.139 10.7833 14.1419C10.7862 14.1448 10.7891 14.1477 10.792 14.1507C10.7949 14.1536 10.7978 14.1565 10.8008 14.1594C10.8037 14.1623 10.8066 14.1652 10.8095 14.1682C10.8124 14.1711 10.8153 14.174 10.8183 14.1769C10.8212 14.1798 10.8241 14.1827 10.827 14.1857C10.8299 14.1886 10.8328 14.1915 10.8358 14.1944C10.8387 14.1973 10.8416 14.2003 10.8445 14.2032C10.8474 14.2061 10.8504 14.209 10.8533 14.2119C10.8562 14.2149 10.8591 14.2178 10.8621 14.2207C10.865 14.2236 10.8679 14.2266 10.8708 14.2295C10.8737 14.2324 10.8767 14.2353 10.8796 14.2382C10.8825 14.2412 10.8854 14.2441 10.8884 14.247C10.8913 14.2499 10.8942 14.2529 10.8971 14.2558C10.9001 14.2587 10.903 14.2616 10.9059 14.2646C10.9088 14.2675 10.9118 14.2704 10.9147 14.2734C10.9176 14.2763 10.9206 14.2792 10.9235 14.2821C10.9264 14.2851 10.9293 14.288 10.9323 14.2909C10.9352 14.2939 10.9381 14.2968 10.9411 14.2997C10.944 14.3026 10.9469 14.3056 10.9498 14.3085C10.9528 14.3114 10.9557 14.3144 10.9586 14.3173C10.9616 14.3202 10.9645 14.3232 10.9674 14.3261C10.9704 14.329 10.9733 14.332 10.9762 14.3349C10.9792 14.3378 10.9821 14.3408 10.985 14.3437C10.988 14.3466 10.9909 14.3496 10.9938 14.3525C10.9968 14.3554 10.9997 14.3584 11.0026 14.3613C11.0056 14.3642 11.0085 14.3672 11.0115 14.3701C11.0144 14.373 11.0173 14.376 11.0203 14.3789C11.0232 14.3819 11.0261 14.3848 11.0291 14.3877C11.032 14.3907 11.0349 14.3936 11.0379 14.3965C11.0408 14.3995 11.0438 14.4024 11.0467 14.4054C11.0496 14.4083 11.0526 14.4112 11.0555 14.4142C11.0585 14.4171 11.0614 14.4201 11.0643 14.423C11.0673 14.4259 11.0702 14.4289 11.0732 14.4318C11.0761 14.4348 11.079 14.4377 11.082 14.4406C11.0849 14.4436 11.0879 14.4465 11.0908 14.4495C11.0938 14.4524 11.0967 14.4554 11.0996 14.4583C11.1026 14.4612 11.1055 14.4642 11.1085 14.4671C11.1114 14.4701 11.1144 14.473 11.1173 14.476C11.1202 14.4789 11.1232 14.4818 11.1261 14.4848C11.1291 14.4877 11.132 14.4907 11.135 14.4936C11.1379 14.4966 11.1409 14.4995 11.1438 14.5025C11.1468 14.5054 11.1497 14.5084 11.1526 14.5113C11.1556 14.5143 11.1585 14.5172 11.1615 14.5201C11.1644 14.5231 11.1674 14.526 11.1703 14.529C11.1733 14.5319 11.1762 14.5349 11.1792 14.5378C11.1821 14.5408 11.1851 14.5437 11.188 14.5467C11.191 14.5496 11.1939 14.5526 11.1969 14.5555C11.1998 14.5585 11.2028 14.5614 11.2057 14.5644C11.2087 14.5673 11.2116 14.5703 11.2146 14.5732C11.2175 14.5762 11.2205 14.5791 11.2234 14.5821C11.2264 14.585 11.2293 14.588 11.2323 14.5909C11.2352 14.5939 11.2382 14.5968 11.2411 14.5998C11.2441 14.6027 11.247 14.6057 11.25 14.6087C11.2529 14.6116 11.2559 14.6146 11.2589 14.6175C11.2618 14.6205 11.2648 14.6234 11.2677 14.6264C11.2707 14.6293 11.2736 14.6323 11.2766 14.6352C11.2795 14.6382 11.2825 14.6411 11.2854 14.6441C11.2884 14.647 11.2913 14.65 11.2943 14.653C11.2973 14.6559 11.3002 14.6589 11.3032 14.6618C11.3061 14.6648 11.3091 14.6677 11.312 14.6707C11.315 14.6736 11.3179 14.6766 11.3209 14.6796C11.3239 14.6825 11.3268 14.6855 11.3298 14.6884C11.3327 14.6914 11.3357 14.6943 11.3386 14.6973C11.3416 14.7003 11.3446 14.7032 11.3475 14.7062C11.3505 14.7091 11.3534 14.7121 11.3564 14.715C11.3593 14.718 11.3623 14.721 11.3653 14.7239C11.3682 14.7269 11.3712 14.7298 11.3741 14.7328C11.3771 14.7358 11.3801 14.7387 11.383 14.7417C11.386 14.7446 11.3889 14.7476 11.3919 14.7506C11.3949 14.7535 11.3978 14.7565 11.4008 14.7594C11.4037 14.7624 11.4067 14.7653 11.4097 14.7683C11.4126 14.7713 11.4156 14.7742 11.4185 14.7772C11.4215 14.7802 11.4245 14.7831 11.4274 14.7861C11.4304 14.789 11.4333 14.792 11.4363 14.795C11.4393 14.7979 11.4422 14.8009 11.4452 14.8038C11.4481 14.8068 11.4511 14.8098 11.4541 14.8127C11.457 14.8157 11.46 14.8186 11.463 14.8216C11.4659 14.8246 11.4689 14.8275 11.4718 14.8305C11.4748 14.8335 11.4778 14.8364 11.4807 14.8394C11.4837 14.8423 11.4866 14.8453 11.4896 14.8483C11.4926 14.8512 11.4955 14.8542 11.4985 14.8572C11.5015 14.8601 11.5044 14.8631 11.5074 14.866C11.5104 14.869 11.5133 14.872 11.5163 14.8749C11.5192 14.8779 11.5222 14.8809 11.5252 14.8838C11.5281 14.8868 11.5311 14.8898 11.5341 14.8927C11.537 14.8957 11.54 14.8986 11.543 14.9016C11.5459 14.9046 11.5489 14.9075 11.5518 14.9105C11.5548 14.9135 11.5578 14.9164 11.5607 14.9194C11.5637 14.9224 11.5667 14.9253 11.5696 14.9283C11.5726 14.9312 11.5756 14.9342 11.5785 14.9372C11.5815 14.9401 11.5845 14.9431 11.5874 14.9461C11.5904 14.949 11.5933 14.952 11.5963 14.955C11.5993 14.9579 11.6022 14.9609 11.6052 14.9639C11.6082 14.9668 11.6111 14.9698 11.6141 14.9728C11.6171 14.9757 11.62 14.9787 11.623 14.9817C11.626 14.9846 11.6289 14.9876 11.6319 14.9905C11.6349 14.9935 11.6378 14.9965 11.6408 14.9994C11.6438 15.0024 11.6467 15.0054 11.6497 15.0083C11.6526 15.0113 11.6556 15.0143 11.6586 15.0172C11.6615 15.0202 11.6645 15.0232 11.6675 15.0261C11.6704 15.0291 11.6734 15.0321 11.6764 15.035C11.6793 15.038 11.6823 15.041 11.6853 15.0439C11.6882 15.0469 11.6912 15.0499 11.6942 15.0528C11.6971 15.0558 11.7001 15.0588 11.7031 15.0617C11.706 15.0647 11.709 15.0677 11.712 15.0706C11.7149 15.0736 11.7179 15.0766 11.7209 15.0795C11.7238 15.0825 11.7268 15.0855 11.7298 15.0884C11.7327 15.0914 11.7357 15.0943 11.7387 15.0973C11.7416 15.1003 11.7446 15.1032 11.7476 15.1062C11.7505 15.1092 11.7535 15.1121 11.7565 15.1151C11.7594 15.1181 11.7624 15.121 11.7653 15.124C11.7683 15.127 11.7713 15.1299 11.7742 15.1329C11.7772 15.1359 11.7802 15.1388 11.7831 15.1418C11.7861 15.1448 11.7891 15.1477 11.792 15.1507C11.795 15.1537 11.798 15.1566 11.8009 15.1596C11.8039 15.1626 11.8069 15.1655 11.8098 15.1685C11.8128 15.1715 11.8158 15.1744 11.8187 15.1774C11.8217 15.1804 11.8247 15.1833 11.8276 15.1863C11.8306 15.1892 11.8336 15.1922 11.8365 15.1952C11.8395 15.1981 11.8425 15.2011 11.8454 15.2041C11.8484 15.207 11.8513 15.21 11.8543 15.213C11.8573 15.2159 11.8602 15.2189 11.8632 15.2219C11.8662 15.2248 11.8691 15.2278 11.8721 15.2308C11.8751 15.2337 11.878 15.2367 11.881 15.2396C11.884 15.2426 11.8869 15.2456 11.8899 15.2485C11.8928 15.2515 11.8958 15.2545 11.8988 15.2574C11.9017 15.2604 11.9047 15.2634 11.9077 15.2663C11.9106 15.2693 11.9136 15.2723 11.9166 15.2752C11.9195 15.2782 11.9225 15.2811 11.9255 15.2841C11.9284 15.2871 11.9314 15.29 11.9343 15.293C11.9373 15.296 11.9403 15.2989 11.9432 15.3019C11.9462 15.3049 11.9492 15.3078 11.9521 15.3108C11.9551 15.3137 11.958 15.3167 11.961 15.3197C11.964 15.3226 11.9669 15.3256 11.9699 15.3286C11.9729 15.3315 11.9758 15.3345 11.9788 15.3374C11.9817 15.3404 11.9847 15.3434 11.9877 15.3463C11.9906 15.3493 11.9936 15.3522 11.9966 15.3552C11.9995 15.3582 12.0025 15.3611 12.0054 15.3641C12.0084 15.3671 12.0114 15.37 12.0143 15.373C12.0173 15.3759 12.0202 15.3789 12.0232 15.3819C12.0262 15.3848 12.0291 15.3878 12.0321 15.3907C12.035 15.3937 12.038 15.3967 12.041 15.3996C12.0439 15.4026 12.0469 15.4055 12.0498 15.4085C12.0528 15.4115 12.0558 15.4144 12.0587 15.4174C12.0617 15.4203 12.0646 15.4233 12.0676 15.4263C12.0706 15.4292 12.0735 15.4322 12.0765 15.4351C12.0794 15.4381 12.0824 15.4411 12.0854 15.444C12.0883 15.447 12.0913 15.4499 12.0942 15.4529C12.0972 15.4558 12.1001 15.4588 12.1031 15.4618C12.1061 15.4647 12.109 15.4677 12.112 15.4706C12.1149 15.4736 12.1179 15.4765 12.1208 15.4795C12.1238 15.4825 12.1268 15.4854 12.1297 15.4884C12.1327 15.4913 12.1356 15.4943 12.1386 15.4972C12.1415 15.5002 12.1445 15.5031 12.1474 15.5061C12.1504 15.5091 12.1534 15.512 12.1563 15.515C12.1593 15.5179 12.1622 15.5209 12.1652 15.5238C12.1681 15.5268 12.1711 15.5297 12.174 15.5327C12.177 15.5357 12.1799 15.5386 12.1829 15.5416C12.1859 15.5445 12.1888 15.5475 12.1918 15.5504C12.1947 15.5534 12.1977 15.5563 12.2006 15.5593C12.2036 15.5622 12.2065 15.5652 12.2095 15.5681C12.2124 15.5711 12.2154 15.574 12.2183 15.577C12.2213 15.5799 12.2242 15.5829 12.2272 15.5858C12.2301 15.5888 12.2331 15.5917 12.236 15.5947C12.239 15.5976 12.2419 15.6006 12.2449 15.6035C12.2478 15.6065 12.2508 15.6094 12.2537 15.6124C12.2567 15.6153 12.2596 15.6183 12.2626 15.6212C12.2655 15.6242 12.2685 15.6271 12.2714 15.6301C12.2744 15.633 12.2773 15.636 12.2803 15.6389C12.2832 15.6419 12.2862 15.6448 12.2891 15.6478C12.2921 15.6507 12.295 15.6537 12.298 15.6566C12.3009 15.6596 12.3039 15.6625 12.3068 15.6655C12.3097 15.6684 12.3127 15.6713 12.3156 15.6743C12.3186 15.6772 12.3215 15.6802 12.3245 15.6831C12.3274 15.6861 12.3304 15.689 12.3333 15.692C12.3363 15.6949 12.3392 15.6979 12.3421 15.7008C12.3451 15.7037 12.348 15.7067 12.351 15.7096C12.3539 15.7126 12.3569 15.7155 12.3598 15.7185C12.3627 15.7214 12.3657 15.7243 12.3686 15.7273C12.3716 15.7302 12.3745 15.7332 12.3774 15.7361C12.3804 15.739 12.3833 15.742 12.3863 15.7449C12.3892 15.7479 12.3921 15.7508 12.3951 15.7537C12.398 15.7567 12.401 15.7596 12.4039 15.7626C12.4068 15.7655 12.4098 15.7684 12.4127 15.7714C12.4157 15.7743 12.4186 15.7773 12.4215 15.7802C12.4245 15.7831 12.4274 15.7861 12.4303 15.789C12.4333 15.7919 12.4362 15.7949 12.4392 15.7978C12.4421 15.8007 12.445 15.8037 12.448 15.8066C12.4509 15.8096 12.4538 15.8125 12.4568 15.8154C12.4597 15.8184 12.4626 15.8213 12.4656 15.8242C12.4685 15.8272 12.4714 15.8301 12.4744 15.833C12.4773 15.836 12.4802 15.8389 12.4832 15.8418C12.4861 15.8448 12.489 15.8477 12.492 15.8506C12.4949 15.8535 12.4978 15.8565 12.5008 15.8594C12.5037 15.8623 12.5066 15.8653 12.5095 15.8682C12.5125 15.8711 12.5154 15.8741 12.5183 15.877C12.5213 15.8799 12.5242 15.8828 12.5271 15.8858C12.53 15.8887 12.533 15.8916 12.5359 15.8946C12.5388 15.8975 12.5418 15.9004 12.5447 15.9033C12.5476 15.9063 12.5505 15.9092 12.5535 15.9121C12.5564 15.915 12.5593 15.918 12.5622 15.9209C12.5652 15.9238 12.5681 15.9267 12.571 15.9297C12.5739 15.9326 12.5769 15.9355 12.5798 15.9384C12.5827 15.9414 12.5856 15.9443 12.5885 15.9472C12.5915 15.9501 12.5944 15.953 12.5973 15.956C12.6002 15.9589 12.6032 15.9618 12.6061 15.9647C12.609 15.9677 12.6119 15.9706 12.6148 15.9735C12.6178 15.9764 12.6207 15.9793 12.6236 15.9822C12.6265 15.9852 12.6294 15.9881 12.6323 15.991C12.6353 15.9939 12.6382 15.9968 12.6411 15.9998C12.644 16.0027 12.6469 16.0056 12.6498 16.0085C12.6528 16.0114 12.6557 16.0143 12.6586 16.0172C12.6615 16.0202 12.6644 16.0231 12.6673 16.026C12.6702 16.0289 12.6732 16.0318 12.6761 16.0347C12.679 16.0376 12.6819 16.0406 12.6848 16.0435C12.6877 16.0464 12.6906 16.0493 12.6935 16.0522C12.6965 16.0551 12.6994 16.058 12.7023 16.0609C12.7052 16.0638 12.7081 16.0667 12.711 16.0697C12.7139 16.0726 12.7168 16.0755 12.7197 16.0784C12.7226 16.0813 12.7255 16.0842 12.7284 16.0871C12.7313 16.09 12.7343 16.0929 12.7372 16.0958C12.7401 16.0987 12.743 16.1016 12.7459 16.1045C12.7488 16.1074 12.7517 16.1103 12.7546 16.1132C12.7575 16.1161 12.7604 16.1191 12.7633 16.122C12.7662 16.1249 12.7691 16.1278 12.772 16.1307C12.7749 16.1336 12.7778 16.1365 12.7807 16.1394C12.7836 16.1423 12.7865 16.1452 12.7894 16.1481C12.7923 16.151 12.7952 16.1539 12.7981 16.1568C12.801 16.1597 12.8039 16.1625 12.8068 16.1654C12.8097 16.1683 12.8126 16.1712 12.8155 16.1741C12.8184 16.177 12.8213 16.1799 12.8242 16.1828C12.8271 16.1857 12.83 16.1886 12.8328 16.1915C12.8357 16.1944 12.8386 16.1973 12.8415 16.2002C12.8444 16.2031 12.8473 16.206 12.8502 16.2089C12.8531 16.2117 12.856 16.2146 12.8589 16.2175C12.8618 16.2204 12.8646 16.2233 12.8675 16.2262C12.8704 16.2291 12.8733 16.232 12.8762 16.2349C12.8791 16.2377 12.882 16.2406 12.8849 16.2435C12.8877 16.2464 12.8906 16.2493 12.8935 16.2522C12.8964 16.2551 12.8993 16.2579 12.9022 16.2608C12.9051 16.2637 12.9079 16.2666 12.9108 16.2695C12.9137 16.2724 12.9166 16.2752 12.9195 16.2781C12.9223 16.281 12.9252 16.2839 12.9281 16.2868C12.931 16.2896 12.9339 16.2925 12.9367 16.2954C12.9396 16.2983 12.9425 16.3012 12.9454 16.304C12.9483 16.3069 12.9511 16.3098 12.954 16.3127C12.9569 16.3155 12.9598 16.3184 12.9626 16.3213C12.9655 16.3242 12.9684 16.327 12.9713 16.3299C12.9741 16.3328 12.977 16.3357 12.9799 16.3385C12.9828 16.3414 12.9856 16.3443 12.9885 16.3472C12.9914 16.35 12.9942 16.3529 12.9971 16.3558C13 16.3586 13.0028 16.3615 13.0057 16.3644C13.0086 16.3672 13.0115 16.3701 13.0143 16.373C13.0172 16.3758 13.0201 16.3787 13.0229 16.3816C13.0258 16.3844 13.0286 16.3873 13.0315 16.3902C13.0344 16.393 13.0372 16.3959 13.0401 16.3988C13.043 16.4016 13.0458 16.4045 13.0487 16.4073C13.0516 16.4102 13.0544 16.4131 13.0573 16.4159C13.0601 16.4188 13.063 16.4217 13.0659 16.4245C13.0687 16.4274 13.0716 16.4302 13.0744 16.4331C13.0773 16.4359 13.0801 16.4388 13.083 16.4417C13.0859 16.4445 13.0887 16.4474 13.0916 16.4502C13.0944 16.4531 13.0973 16.4559 13.1001 16.4588C13.103 16.4616 13.1058 16.4645 13.1087 16.4673C13.1115 16.4702 13.1144 16.473 13.1172 16.4759C13.1201 16.4787 13.1229 16.4816 13.1258 16.4844C13.1286 16.4873 13.1315 16.4901 13.1343 16.493C13.1372 16.4958 13.14 16.4987 13.1429 16.5015C13.1457 16.5044 13.1486 16.5072 13.1514 16.5101C13.1542 16.5129 13.1571 16.5157 13.1599 16.5186C13.1628 16.5214 13.1656 16.5243 13.1685 16.5271C13.1713 16.53 13.1741 16.5328 13.177 16.5356C13.1798 16.5385 13.1827 16.5413 13.1855 16.5442C13.1883 16.547 13.1912 16.5498 13.194 16.5527C13.1968 16.5555 13.1997 16.5583 13.2025 16.5612C13.2054 16.564 13.2082 16.5668 13.211 16.5697C13.2139 16.5725 13.2167 16.5753 13.2195 16.5782C13.2224 16.581 13.2252 16.5838 13.228 16.5867C13.2308 16.5895 13.2337 16.5923 13.2365 16.5952C13.2393 16.598 13.2422 16.6008 13.245 16.6036C13.2478 16.6065 13.2506 16.6093 13.2535 16.6121C13.2563 16.615 13.2591 16.6178 13.2619 16.6206C13.2648 16.6234 13.2676 16.6262 13.2704 16.6291C13.2732 16.6319 13.2761 16.6347 13.2789 16.6375C13.2817 16.6404 13.2845 16.6432 13.2873 16.646C13.2902 16.6488 13.293 16.6516 13.2958 16.6545C13.2986 16.6573 13.3014 16.6601 13.3042 16.6629C13.3071 16.6657 13.3099 16.6685 13.3127 16.6713C13.3155 16.6742 13.3183 16.677 13.3211 16.6798C13.3239 16.6826 13.3268 16.6854 13.3296 16.6882C13.3324 16.691 13.3352 16.6938 13.338 16.6967C13.3408 16.6995 13.3436 16.7023 13.3464 16.7051C13.3492 16.7079 13.352 16.7107 13.3548 16.7135C13.3576 16.7163 13.3605 16.7191 13.3633 16.7219C13.3661 16.7247 13.3689 16.7275 13.3717 16.7303C13.3745 16.7331 13.3773 16.7359 13.3801 16.7387C13.3829 16.7415 13.3857 16.7443 13.3885 16.7471C13.3913 16.7499 13.3941 16.7527 13.3969 16.7555C13.3997 16.7583 13.4025 16.7611 13.4053 16.7639C13.408 16.7667 13.4108 16.7695 13.4136 16.7723C13.4164 16.7751 13.4192 16.7779 13.422 16.7807C13.4248 16.7835 13.4276 16.7863 13.4304 16.789C13.4332 16.7918 13.436 16.7946 13.4388 16.7974C13.4415 16.8002 13.4443 16.803 13.4471 16.8058C13.4499 16.8086 13.4527 16.8113 13.4555 16.8141C13.4583 16.8169 13.461 16.8197 13.4638 16.8225C13.4666 16.8253 13.4694 16.828 13.4722 16.8308C13.475 16.8336 13.4777 16.8364 13.4805 16.8392C13.4833 16.8419 13.4861 16.8447 13.4888 16.8475C13.4916 16.8503 13.4944 16.8531 13.4972 16.8558C13.4999 16.8586 13.5027 16.8614 13.5055 16.8642C13.5083 16.8669 13.511 16.8697 13.5138 16.8725C13.5166 16.8752 13.5194 16.878 13.5221 16.8808C13.5249 16.8836 13.5277 16.8863 13.5304 16.8891C13.5332 16.8919 13.536 16.8946 13.5387 16.8974C13.5415 16.9002 13.5443 16.9029 13.547 16.9057C13.5498 16.9084 13.5526 16.9112 13.5553 16.914C13.5581 16.9167 13.5608 16.9195 13.5636 16.9223C13.5664 16.925 13.5691 16.9278 13.5719 16.9305C13.5746 16.9333 13.5774 16.936 13.5801 16.9388C13.5829 16.9416 13.5857 16.9443 13.5884 16.9471C13.5912 16.9498 13.5939 16.9526 13.5967 16.9553C13.5994 16.9581 13.6022 16.9608 13.6049 16.9636C13.6077 16.9663 13.6104 16.9691 13.6132 16.9718C13.6159 16.9746 13.6187 16.9773 13.6214 16.9801C13.6242 16.9828 13.6269 16.9856 13.6297 16.9883C13.6324 16.9911 13.6351 16.9938 13.6379 16.9965C13.6406 16.9993 13.6434 17.002 13.6461 17.0048C13.6488 17.0075 13.6516 17.0102 13.6543 17.013C13.6571 17.0157 13.6598 17.0185 13.6625 17.0212C13.6653 17.0239 13.668 17.0267 13.6707 17.0294C13.6735 17.0321 13.6762 17.0349 13.6789 17.0376C13.6817 17.0403 13.6844 17.0431 13.6871 17.0458C13.6899 17.0485 13.6926 17.0512 13.6953 17.054C13.698 17.0567 13.7008 17.0594 13.7035 17.0622C13.7062 17.0649 13.7089 17.0676 13.7117 17.0703C13.7144 17.0731 13.7171 17.0758 13.7198 17.0785C13.7226 17.0812 13.7253 17.0839 13.728 17.0867C13.7307 17.0894 13.7334 17.0921 13.7362 17.0948C13.7389 17.0975 13.7416 17.1002 13.7443 17.103C13.747 17.1057 13.7497 17.1084 13.7524 17.1111C13.7552 17.1138 13.7579 17.1165 13.7606 17.1192C13.7633 17.1219 13.766 17.1247 13.7687 17.1274C13.7714 17.1301 13.7741 17.1328 13.7768 17.1355C13.7795 17.1382 13.7822 17.1409 13.7849 17.1436C13.7877 17.1463 13.7904 17.149 13.7931 17.1517C13.7958 17.1544 13.7985 17.1571 13.8012 17.1598C13.8039 17.1625 13.8066 17.1652 13.8093 17.1679C13.812 17.1706 13.8147 17.1733 13.8173 17.176C13.82 17.1787 13.8227 17.1814 13.8254 17.1841C13.8281 17.1868 13.8308 17.1895 13.8335 17.1922C13.8362 17.1949 13.8389 17.1975 13.8416 17.2002C13.8443 17.2029 13.847 17.2056 13.8496 17.2083C13.8523 17.211 13.855 17.2137 13.8577 17.2163C13.8604 17.219 13.8631 17.2217 13.8657 17.2244C13.8684 17.2271 13.8711 17.2298 13.8738 17.2324C13.8765 17.2351 13.8791 17.2378 13.8818 17.2405C13.8845 17.2432 13.8872 17.2458 13.8898 17.2485C13.8925 17.2512 13.8952 17.2539 13.8979 17.2565C13.9005 17.2592 13.9032 17.2619 13.9059 17.2645C13.9086 17.2672 13.9112 17.2699 13.9139 17.2725C13.9166 17.2752 13.9192 17.2779 13.9219 17.2805C13.9246 17.2832 13.9272 17.2859 13.9299 17.2885C13.9325 17.2912 13.9352 17.2939 13.9379 17.2965C13.9405 17.2992 13.9432 17.3018 13.9458 17.3045C13.9485 17.3072 13.9512 17.3098 13.9538 17.3125C13.9565 17.3151 13.9591 17.3178 13.9618 17.3204C13.9644 17.3231 13.9671 17.3257 13.9697 17.3284C13.9724 17.3311 13.975 17.3337 13.9777 17.3364C13.9803 17.339 13.983 17.3416 13.9856 17.3443C13.9883 17.3469 13.9909 17.3496 13.9936 17.3522C13.9962 17.3549 13.9989 17.3575 14.0015 17.3602C14.0041 17.3628 14.0068 17.3654 14.0094 17.3681C14.0121 17.3707 14.0147 17.3734 14.0173 17.376C14.02 17.3786 14.0226 17.3813 14.0252 17.3839C14.0279 17.3865 14.0305 17.3892 14.0331 17.3918C14.0358 17.3944 14.0384 17.3971 14.041 17.3997C14.0437 17.4023 14.0463 17.4049 14.0489 17.4076C14.0515 17.4102 14.0542 17.4128 14.0568 17.4155C14.0594 17.4181 14.062 17.4207 14.0647 17.4233C14.0673 17.4259 14.0699 17.4286 14.0725 17.4312C14.0751 17.4338 14.0778 17.4364 14.0804 17.439C14.083 17.4417 14.0856 17.4443 14.0882 17.4469C14.0908 17.4495 14.0935 17.4521 14.0961 17.4547C14.0987 17.4573 14.1013 17.4599 14.1039 17.4626C14.1065 17.4652 14.1091 17.4678 14.1117 17.4704C14.1143 17.473 14.1169 17.4756 14.1195 17.4782C14.1221 17.4808 14.1247 17.4834 14.1273 17.486C14.1299 17.4886 14.1325 17.4912 14.1351 17.4938C14.1377 17.4964 14.1403 17.499 14.1429 17.5016C14.1455 17.5042 14.1481 17.5068 14.1507 17.5094C14.1533 17.512 14.1559 17.5146 14.1585 17.5172C14.1611 17.5197 14.1637 17.5223 14.1663 17.5249C14.1689 17.5275 14.1714 17.5301 14.174 17.5327C14.1766 17.5353 14.1792 17.5379 14.1818 17.5404L15.596 16.1262C15.5934 16.1236 15.5908 16.1211 15.5882 16.1185C15.5857 16.1159 15.5831 16.1133 15.5805 16.1107C15.5779 16.1081 15.5753 16.1055 15.5727 16.1029C15.5701 16.1004 15.5675 16.0978 15.5649 16.0952C15.5623 16.0926 15.5597 16.09 15.5572 16.0874C15.5546 16.0848 15.552 16.0822 15.5494 16.0796C15.5468 16.077 15.5442 16.0744 15.5416 16.0718C15.539 16.0692 15.5364 16.0666 15.5338 16.064C15.5311 16.0614 15.5285 16.0588 15.5259 16.0562C15.5233 16.0536 15.5207 16.051 15.5181 16.0483C15.5155 16.0457 15.5129 16.0431 15.5103 16.0405C15.5077 16.0379 15.5051 16.0353 15.5024 16.0327C15.4998 16.0301 15.4972 16.0274 15.4946 16.0248C15.492 16.0222 15.4894 16.0196 15.4867 16.017C15.4841 16.0144 15.4815 16.0117 15.4789 16.0091C15.4763 16.0065 15.4736 16.0039 15.471 16.0012C15.4684 15.9986 15.4658 15.996 15.4631 15.9934C15.4605 15.9907 15.4579 15.9881 15.4552 15.9855C15.4526 15.9828 15.45 15.9802 15.4474 15.9776C15.4447 15.975 15.4421 15.9723 15.4395 15.9697C15.4368 15.9671 15.4342 15.9644 15.4316 15.9618C15.4289 15.9591 15.4263 15.9565 15.4236 15.9539C15.421 15.9512 15.4184 15.9486 15.4157 15.9459C15.4131 15.9433 15.4104 15.9407 15.4078 15.938C15.4051 15.9354 15.4025 15.9327 15.3999 15.9301C15.3972 15.9274 15.3946 15.9248 15.3919 15.9221C15.3893 15.9195 15.3866 15.9168 15.384 15.9142C15.3813 15.9115 15.3787 15.9089 15.376 15.9062C15.3733 15.9036 15.3707 15.9009 15.368 15.8983C15.3654 15.8956 15.3627 15.893 15.3601 15.8903C15.3574 15.8876 15.3547 15.885 15.3521 15.8823C15.3494 15.8797 15.3468 15.877 15.3441 15.8743C15.3414 15.8717 15.3388 15.869 15.3361 15.8663C15.3334 15.8637 15.3308 15.861 15.3281 15.8583C15.3254 15.8557 15.3228 15.853 15.3201 15.8503C15.3174 15.8477 15.3148 15.845 15.3121 15.8423C15.3094 15.8396 15.3067 15.837 15.3041 15.8343C15.3014 15.8316 15.2987 15.8289 15.296 15.8263C15.2934 15.8236 15.2907 15.8209 15.288 15.8182C15.2853 15.8155 15.2826 15.8129 15.28 15.8102C15.2773 15.8075 15.2746 15.8048 15.2719 15.8021C15.2692 15.7995 15.2665 15.7968 15.2639 15.7941C15.2612 15.7914 15.2585 15.7887 15.2558 15.786C15.2531 15.7833 15.2504 15.7806 15.2477 15.7779C15.245 15.7753 15.2423 15.7726 15.2396 15.7699C15.2369 15.7672 15.2343 15.7645 15.2316 15.7618C15.2289 15.7591 15.2262 15.7564 15.2235 15.7537C15.2208 15.751 15.2181 15.7483 15.2154 15.7456C15.2127 15.7429 15.21 15.7402 15.2073 15.7375C15.2046 15.7348 15.2019 15.7321 15.1992 15.7294C15.1965 15.7267 15.1938 15.724 15.191 15.7213C15.1883 15.7186 15.1856 15.7159 15.1829 15.7132C15.1802 15.7104 15.1775 15.7077 15.1748 15.705C15.1721 15.7023 15.1694 15.6996 15.1667 15.6969C15.1639 15.6942 15.1612 15.6915 15.1585 15.6887C15.1558 15.686 15.1531 15.6833 15.1504 15.6806C15.1477 15.6779 15.1449 15.6752 15.1422 15.6724C15.1395 15.6697 15.1368 15.667 15.1341 15.6643C15.1313 15.6616 15.1286 15.6588 15.1259 15.6561C15.1232 15.6534 15.1204 15.6507 15.1177 15.6479C15.115 15.6452 15.1123 15.6425 15.1095 15.6398C15.1068 15.637 15.1041 15.6343 15.1013 15.6316C15.0986 15.6288 15.0959 15.6261 15.0932 15.6234C15.0904 15.6206 15.0877 15.6179 15.085 15.6152C15.0822 15.6124 15.0795 15.6097 15.0767 15.607C15.074 15.6042 15.0713 15.6015 15.0685 15.5988C15.0658 15.596 15.0631 15.5933 15.0603 15.5905C15.0576 15.5878 15.0548 15.5851 15.0521 15.5823C15.0494 15.5796 15.0466 15.5768 15.0439 15.5741C15.0411 15.5714 15.0384 15.5686 15.0356 15.5659C15.0329 15.5631 15.0301 15.5604 15.0274 15.5576C15.0246 15.5549 15.0219 15.5521 15.0191 15.5494C15.0164 15.5466 15.0136 15.5439 15.0109 15.5411C15.0081 15.5384 15.0054 15.5356 15.0026 15.5329C14.9999 15.5301 14.9971 15.5273 14.9944 15.5246C14.9916 15.5218 14.9888 15.5191 14.9861 15.5163C14.9833 15.5136 14.9806 15.5108 14.9778 15.508C14.9751 15.5053 14.9723 15.5025 14.9695 15.4998C14.9668 15.497 14.964 15.4942 14.9612 15.4915C14.9585 15.4887 14.9557 15.4859 14.9529 15.4832C14.9502 15.4804 14.9474 15.4776 14.9446 15.4749C14.9419 15.4721 14.9391 15.4693 14.9363 15.4666C14.9336 15.4638 14.9308 15.461 14.928 15.4583C14.9253 15.4555 14.9225 15.4527 14.9197 15.4499C14.9169 15.4472 14.9142 15.4444 14.9114 15.4416C14.9086 15.4388 14.9058 15.4361 14.9031 15.4333C14.9003 15.4305 14.8975 15.4277 14.8947 15.425C14.8919 15.4222 14.8892 15.4194 14.8864 15.4166C14.8836 15.4138 14.8808 15.4111 14.878 15.4083C14.8753 15.4055 14.8725 15.4027 14.8697 15.3999C14.8669 15.3971 14.8641 15.3943 14.8613 15.3916C14.8585 15.3888 14.8558 15.386 14.853 15.3832C14.8502 15.3804 14.8474 15.3776 14.8446 15.3748C14.8418 15.372 14.839 15.3693 14.8362 15.3665C14.8334 15.3637 14.8306 15.3609 14.8279 15.3581C14.8251 15.3553 14.8223 15.3525 14.8195 15.3497C14.8167 15.3469 14.8139 15.3441 14.8111 15.3413C14.8083 15.3385 14.8055 15.3357 14.8027 15.3329C14.7999 15.3301 14.7971 15.3273 14.7943 15.3245C14.7915 15.3217 14.7887 15.3189 14.7859 15.3161C14.7831 15.3133 14.7803 15.3105 14.7775 15.3077C14.7747 15.3049 14.7719 15.3021 14.7691 15.2993C14.7662 15.2965 14.7634 15.2937 14.7606 15.2909C14.7578 15.2881 14.755 15.2852 14.7522 15.2824C14.7494 15.2796 14.7466 15.2768 14.7438 15.274C14.741 15.2712 14.7382 15.2684 14.7353 15.2656C14.7325 15.2628 14.7297 15.2599 14.7269 15.2571C14.7241 15.2543 14.7213 15.2515 14.7185 15.2487C14.7156 15.2459 14.7128 15.2431 14.71 15.2402C14.7072 15.2374 14.7044 15.2346 14.7016 15.2318C14.6987 15.229 14.6959 15.2261 14.6931 15.2233C14.6903 15.2205 14.6875 15.2177 14.6846 15.2149C14.6818 15.212 14.679 15.2092 14.6762 15.2064C14.6733 15.2036 14.6705 15.2007 14.6677 15.1979C14.6649 15.1951 14.662 15.1923 14.6592 15.1894C14.6564 15.1866 14.6535 15.1838 14.6507 15.1809C14.6479 15.1781 14.6451 15.1753 14.6422 15.1725C14.6394 15.1696 14.6366 15.1668 14.6337 15.164C14.6309 15.1611 14.6281 15.1583 14.6252 15.1555C14.6224 15.1526 14.6196 15.1498 14.6167 15.147C14.6139 15.1441 14.6111 15.1413 14.6082 15.1385C14.6054 15.1356 14.6026 15.1328 14.5997 15.1299C14.5969 15.1271 14.594 15.1243 14.5912 15.1214C14.5884 15.1186 14.5855 15.1157 14.5827 15.1129C14.5798 15.1101 14.577 15.1072 14.5741 15.1044C14.5713 15.1015 14.5685 15.0987 14.5656 15.0958C14.5628 15.093 14.5599 15.0902 14.5571 15.0873C14.5542 15.0845 14.5514 15.0816 14.5485 15.0788C14.5457 15.0759 14.5428 15.0731 14.54 15.0702C14.5371 15.0674 14.5343 15.0645 14.5314 15.0617C14.5286 15.0588 14.5257 15.056 14.5229 15.0531C14.52 15.0503 14.5172 15.0474 14.5143 15.0446C14.5115 15.0417 14.5086 15.0389 14.5058 15.036C14.5029 15.0332 14.5001 15.0303 14.4972 15.0274C14.4944 15.0246 14.4915 15.0217 14.4886 15.0189C14.4858 15.016 14.4829 15.0132 14.4801 15.0103C14.4772 15.0074 14.4743 15.0046 14.4715 15.0017C14.4686 14.9989 14.4658 14.996 14.4629 14.9931C14.46 14.9903 14.4572 14.9874 14.4543 14.9845C14.4515 14.9817 14.4486 14.9788 14.4457 14.976C14.4429 14.9731 14.44 14.9702 14.4371 14.9674C14.4343 14.9645 14.4314 14.9616 14.4285 14.9588C14.4257 14.9559 14.4228 14.953 14.4199 14.9502C14.4171 14.9473 14.4142 14.9444 14.4113 14.9416C14.4085 14.9387 14.4056 14.9358 14.4027 14.9329C14.3998 14.9301 14.397 14.9272 14.3941 14.9243C14.3912 14.9215 14.3884 14.9186 14.3855 14.9157C14.3826 14.9128 14.3797 14.91 14.3769 14.9071C14.374 14.9042 14.3711 14.9013 14.3682 14.8985C14.3654 14.8956 14.3625 14.8927 14.3596 14.8898C14.3567 14.8869 14.3538 14.8841 14.351 14.8812C14.3481 14.8783 14.3452 14.8754 14.3423 14.8726C14.3394 14.8697 14.3366 14.8668 14.3337 14.8639C14.3308 14.861 14.3279 14.8581 14.325 14.8553C14.3222 14.8524 14.3193 14.8495 14.3164 14.8466C14.3135 14.8437 14.3106 14.8408 14.3077 14.838C14.3048 14.8351 14.302 14.8322 14.2991 14.8293C14.2962 14.8264 14.2933 14.8235 14.2904 14.8206C14.2875 14.8178 14.2846 14.8149 14.2818 14.812C14.2789 14.8091 14.276 14.8062 14.2731 14.8033C14.2702 14.8004 14.2673 14.7975 14.2644 14.7946C14.2615 14.7918 14.2586 14.7889 14.2557 14.786C14.2528 14.7831 14.25 14.7802 14.2471 14.7773C14.2442 14.7744 14.2413 14.7715 14.2384 14.7686C14.2355 14.7657 14.2326 14.7628 14.2297 14.7599C14.2268 14.757 14.2239 14.7541 14.221 14.7512C14.2181 14.7483 14.2152 14.7454 14.2123 14.7425C14.2094 14.7396 14.2065 14.7367 14.2036 14.7338C14.2007 14.7309 14.1978 14.728 14.1949 14.7251C14.192 14.7222 14.1891 14.7193 14.1862 14.7164C14.1833 14.7135 14.1804 14.7106 14.1775 14.7077C14.1746 14.7048 14.1717 14.7019 14.1688 14.699C14.1659 14.6961 14.163 14.6932 14.1601 14.6903C14.1572 14.6874 14.1543 14.6845 14.1514 14.6816C14.1485 14.6787 14.1456 14.6758 14.1427 14.6729C14.1397 14.67 14.1368 14.6671 14.1339 14.6642C14.131 14.6613 14.1281 14.6583 14.1252 14.6554C14.1223 14.6525 14.1194 14.6496 14.1165 14.6467C14.1136 14.6438 14.1107 14.6409 14.1078 14.638C14.1048 14.6351 14.1019 14.6322 14.099 14.6292C14.0961 14.6263 14.0932 14.6234 14.0903 14.6205C14.0874 14.6176 14.0845 14.6147 14.0815 14.6118C14.0786 14.6089 14.0757 14.6059 14.0728 14.603C14.0699 14.6001 14.067 14.5972 14.0641 14.5943C14.0611 14.5914 14.0582 14.5885 14.0553 14.5855C14.0524 14.5826 14.0495 14.5797 14.0466 14.5768C14.0436 14.5739 14.0407 14.571 14.0378 14.568C14.0349 14.5651 14.032 14.5622 14.029 14.5593C14.0261 14.5564 14.0232 14.5534 14.0203 14.5505C14.0174 14.5476 14.0144 14.5447 14.0115 14.5418C14.0086 14.5388 14.0057 14.5359 14.0028 14.533C13.9998 14.5301 13.9969 14.5271 13.994 14.5242C13.9911 14.5213 13.9881 14.5184 13.9852 14.5155C13.9823 14.5125 13.9794 14.5096 13.9764 14.5067C13.9735 14.5038 13.9706 14.5008 13.9677 14.4979C13.9647 14.495 13.9618 14.4921 13.9589 14.4891C13.956 14.4862 13.953 14.4833 13.9501 14.4803C13.9472 14.4774 13.9443 14.4745 13.9413 14.4716C13.9384 14.4686 13.9355 14.4657 13.9325 14.4628C13.9296 14.4598 13.9267 14.4569 13.9238 14.454C13.9208 14.4511 13.9179 14.4481 13.915 14.4452C13.912 14.4423 13.9091 14.4393 13.9062 14.4364C13.9032 14.4335 13.9003 14.4305 13.8974 14.4276C13.8944 14.4247 13.8915 14.4217 13.8886 14.4188C13.8856 14.4159 13.8827 14.4129 13.8798 14.41C13.8768 14.4071 13.8739 14.4041 13.871 14.4012C13.868 14.3983 13.8651 14.3953 13.8622 14.3924C13.8592 14.3895 13.8563 14.3865 13.8534 14.3836C13.8504 14.3807 13.8475 14.3777 13.8446 14.3748C13.8416 14.3719 13.8387 14.3689 13.8357 14.366C13.8328 14.363 13.8299 14.3601 13.8269 14.3572C13.824 14.3542 13.8211 14.3513 13.8181 14.3483C13.8152 14.3454 13.8122 14.3425 13.8093 14.3395C13.8064 14.3366 13.8034 14.3337 13.8005 14.3307C13.7975 14.3278 13.7946 14.3248 13.7917 14.3219C13.7887 14.3189 13.7858 14.316 13.7828 14.3131C13.7799 14.3101 13.777 14.3072 13.774 14.3042C13.7711 14.3013 13.7681 14.2984 13.7652 14.2954C13.7622 14.2925 13.7593 14.2895 13.7564 14.2866C13.7534 14.2836 13.7505 14.2807 13.7475 14.2778C13.7446 14.2748 13.7416 14.2719 13.7387 14.2689C13.7357 14.266 13.7328 14.263 13.7299 14.2601C13.7269 14.2571 13.724 14.2542 13.721 14.2512C13.7181 14.2483 13.7151 14.2454 13.7122 14.2424C13.7092 14.2395 13.7063 14.2365 13.7033 14.2336C13.7004 14.2306 13.6974 14.2277 13.6945 14.2247C13.6915 14.2218 13.6886 14.2188 13.6856 14.2159C13.6827 14.2129 13.6798 14.21 13.6768 14.207C13.6739 14.2041 13.6709 14.2011 13.668 14.1982C13.665 14.1952 13.6621 14.1923 13.6591 14.1893C13.6562 14.1864 13.6532 14.1834 13.6503 14.1805C13.6473 14.1775 13.6444 14.1746 13.6414 14.1716C13.6384 14.1687 13.6355 14.1657 13.6325 14.1628C13.6296 14.1598 13.6266 14.1569 13.6237 14.1539C13.6207 14.151 13.6178 14.148 13.6148 14.1451C13.6119 14.1421 13.6089 14.1392 13.606 14.1362C13.603 14.1333 13.6001 14.1303 13.5971 14.1273C13.5942 14.1244 13.5912 14.1214 13.5883 14.1185C13.5853 14.1155 13.5823 14.1126 13.5794 14.1096C13.5764 14.1067 13.5735 14.1037 13.5705 14.1008C13.5676 14.0978 13.5646 14.0948 13.5617 14.0919C13.5587 14.0889 13.5557 14.086 13.5528 14.083C13.5498 14.0801 13.5469 14.0771 13.5439 14.0742C13.541 14.0712 13.538 14.0682 13.5351 14.0653C13.5321 14.0623 13.5291 14.0594 13.5262 14.0564C13.5232 14.0535 13.5203 14.0505 13.5173 14.0475C13.5144 14.0446 13.5114 14.0416 13.5084 14.0387C13.5055 14.0357 13.5025 14.0328 13.4996 14.0298C13.4966 14.0268 13.4936 14.0239 13.4907 14.0209C13.4877 14.018 13.4848 14.015 13.4818 14.012C13.4789 14.0091 13.4759 14.0061 13.4729 14.0032C13.47 14.0002 13.467 13.9972 13.4641 13.9943C13.4611 13.9913 13.4581 13.9884 13.4552 13.9854C13.4522 13.9824 13.4493 13.9795 13.4463 13.9765C13.4433 13.9736 13.4404 13.9706 13.4374 13.9676C13.4345 13.9647 13.4315 13.9617 13.4285 13.9588C13.4256 13.9558 13.4226 13.9528 13.4197 13.9499C13.4167 13.9469 13.4137 13.944 13.4108 13.941C13.4078 13.938 13.4048 13.9351 13.4019 13.9321C13.3989 13.9291 13.396 13.9262 13.393 13.9232C13.39 13.9203 13.3871 13.9173 13.3841 13.9143C13.3811 13.9114 13.3782 13.9084 13.3752 13.9055C13.3723 13.9025 13.3693 13.8995 13.3663 13.8966C13.3634 13.8936 13.3604 13.8906 13.3574 13.8877C13.3545 13.8847 13.3515 13.8817 13.3486 13.8788C13.3456 13.8758 13.3426 13.8729 13.3397 13.8699C13.3367 13.8669 13.3337 13.864 13.3308 13.861C13.3278 13.858 13.3248 13.8551 13.3219 13.8521C13.3189 13.8491 13.316 13.8462 13.313 13.8432C13.31 13.8403 13.3071 13.8373 13.3041 13.8343C13.3011 13.8314 13.2982 13.8284 13.2952 13.8254C13.2922 13.8225 13.2893 13.8195 13.2863 13.8165C13.2833 13.8136 13.2804 13.8106 13.2774 13.8076C13.2745 13.8047 13.2715 13.8017 13.2685 13.7988C13.2656 13.7958 13.2626 13.7928 13.2596 13.7899C13.2567 13.7869 13.2537 13.7839 13.2507 13.781C13.2478 13.778 13.2448 13.775 13.2418 13.7721C13.2389 13.7691 13.2359 13.7661 13.2329 13.7632C13.23 13.7602 13.227 13.7572 13.224 13.7543C13.2211 13.7513 13.2181 13.7483 13.2151 13.7454C13.2122 13.7424 13.2092 13.7394 13.2063 13.7365C13.2033 13.7335 13.2003 13.7306 13.1974 13.7276C13.1944 13.7246 13.1914 13.7217 13.1885 13.7187C13.1855 13.7157 13.1825 13.7128 13.1796 13.7098C13.1766 13.7068 13.1736 13.7039 13.1707 13.7009C13.1677 13.6979 13.1647 13.695 13.1618 13.692C13.1588 13.689 13.1558 13.6861 13.1529 13.6831C13.1499 13.6801 13.1469 13.6772 13.144 13.6742C13.141 13.6712 13.138 13.6683 13.1351 13.6653C13.1321 13.6623 13.1291 13.6594 13.1262 13.6564C13.1232 13.6534 13.1202 13.6505 13.1173 13.6475C13.1143 13.6445 13.1113 13.6416 13.1084 13.6386C13.1054 13.6356 13.1025 13.6327 13.0995 13.6297C13.0965 13.6267 13.0936 13.6238 13.0906 13.6208C13.0876 13.6179 13.0847 13.6149 13.0817 13.6119C13.0787 13.609 13.0758 13.606 13.0728 13.603C13.0698 13.6001 13.0669 13.5971 13.0639 13.5941C13.0609 13.5912 13.058 13.5882 13.055 13.5852C13.052 13.5823 13.0491 13.5793 13.0461 13.5763C13.0431 13.5734 13.0402 13.5704 13.0372 13.5674C13.0342 13.5645 13.0313 13.5615 13.0283 13.5585C13.0253 13.5556 13.0224 13.5526 13.0194 13.5496C13.0165 13.5467 13.0135 13.5437 13.0105 13.5408C13.0076 13.5378 13.0046 13.5348 13.0016 13.5319C12.9987 13.5289 12.9957 13.5259 12.9927 13.523C12.9898 13.52 12.9868 13.517 12.9838 13.5141C12.9809 13.5111 12.9779 13.5081 12.9749 13.5052C12.972 13.5022 12.969 13.4993 12.9661 13.4963C12.9631 13.4933 12.9601 13.4904 12.9572 13.4874C12.9542 13.4844 12.9512 13.4815 12.9483 13.4785C12.9453 13.4755 12.9423 13.4726 12.9394 13.4696C12.9364 13.4666 12.9335 13.4637 12.9305 13.4607C12.9275 13.4578 12.9246 13.4548 12.9216 13.4518C12.9186 13.4489 12.9157 13.4459 12.9127 13.4429C12.9097 13.44 12.9068 13.437 12.9038 13.4341C12.9009 13.4311 12.8979 13.4281 12.8949 13.4252C12.892 13.4222 12.889 13.4192 12.8861 13.4163C12.8831 13.4133 12.8801 13.4104 12.8772 13.4074C12.8742 13.4044 12.8712 13.4015 12.8683 13.3985C12.8653 13.3955 12.8624 13.3926 12.8594 13.3896C12.8564 13.3867 12.8535 13.3837 12.8505 13.3807C12.8476 13.3778 12.8446 13.3748 12.8416 13.3719C12.8387 13.3689 12.8357 13.3659 12.8327 13.363C12.8298 13.36 12.8268 13.3571 12.8239 13.3541C12.8209 13.3511 12.8179 13.3482 12.815 13.3452C12.812 13.3423 12.8091 13.3393 12.8061 13.3363C12.8031 13.3334 12.8002 13.3304 12.7972 13.3275C12.7943 13.3245 12.7913 13.3215 12.7884 13.3186C12.7854 13.3156 12.7824 13.3127 12.7795 13.3097C12.7765 13.3067 12.7736 13.3038 12.7706 13.3008C12.7676 13.2979 12.7647 13.2949 12.7617 13.292C12.7588 13.289 12.7558 13.286 12.7529 13.2831C12.7499 13.2801 12.7469 13.2772 12.744 13.2742C12.741 13.2713 12.7381 13.2683 12.7351 13.2653C12.7322 13.2624 12.7292 13.2594 12.7262 13.2565C12.7233 13.2535 12.7203 13.2506 12.7174 13.2476C12.7144 13.2447 12.7115 13.2417 12.7085 13.2387C12.7056 13.2358 12.7026 13.2328 12.6997 13.2299C12.6967 13.2269 12.6937 13.224 12.6908 13.221C12.6878 13.2181 12.6849 13.2151 12.6819 13.2122C12.679 13.2092 12.676 13.2062 12.6731 13.2033C12.6701 13.2003 12.6672 13.1974 12.6642 13.1944C12.6613 13.1915 12.6583 13.1885 12.6553 13.1856C12.6524 13.1826 12.6494 13.1797 12.6465 13.1767C12.6435 13.1738 12.6406 13.1708 12.6376 13.1679C12.6347 13.1649 12.6317 13.162 12.6288 13.159C12.6258 13.1561 12.6229 13.1531 12.6199 13.1502C12.617 13.1472 12.614 13.1443 12.6111 13.1413C12.6081 13.1384 12.6052 13.1354 12.6022 13.1325C12.5993 13.1295 12.5963 13.1266 12.5934 13.1236C12.5904 13.1207 12.5875 13.1177 12.5845 13.1148C12.5816 13.1118 12.5787 13.1089 12.5757 13.1059C12.5728 13.103 12.5698 13.1 12.5669 13.0971C12.5639 13.0941 12.561 13.0912 12.558 13.0883C12.5551 13.0853 12.5521 13.0824 12.5492 13.0794C12.5462 13.0765 12.5433 13.0735 12.5403 13.0706C12.5374 13.0676 12.5345 13.0647 12.5315 13.0617C12.5286 13.0588 12.5256 13.0559 12.5227 13.0529C12.5197 13.05 12.5168 13.047 12.5139 13.0441C12.5109 13.0411 12.508 13.0382 12.505 13.0353C12.5021 13.0323 12.4991 13.0294 12.4962 13.0264C12.4933 13.0235 12.4903 13.0205 12.4874 13.0176C12.4844 13.0147 12.4815 13.0117 12.4786 13.0088C12.4756 13.0058 12.4727 13.0029 12.4697 13C12.4668 12.997 12.4639 12.9941 12.4609 12.9911C12.458 12.9882 12.455 12.9853 12.4521 12.9823C12.4492 12.9794 12.4462 12.9765 12.4433 12.9735C12.4403 12.9706 12.4374 12.9676 12.4345 12.9647C12.4315 12.9618 12.4286 12.9588 12.4257 12.9559C12.4227 12.953 12.4198 12.95 12.4169 12.9471C12.4139 12.9442 12.411 12.9412 12.4081 12.9383C12.4051 12.9353 12.4022 12.9324 12.3992 12.9295C12.3963 12.9265 12.3934 12.9236 12.3904 12.9207C12.3875 12.9177 12.3846 12.9148 12.3816 12.9119C12.3787 12.9089 12.3758 12.906 12.3729 12.9031C12.3699 12.9002 12.367 12.8972 12.3641 12.8943C12.3611 12.8914 12.3582 12.8884 12.3553 12.8855C12.3523 12.8826 12.3494 12.8796 12.3465 12.8767C12.3436 12.8738 12.3406 12.8709 12.3377 12.8679C12.3348 12.865 12.3318 12.8621 12.3289 12.8591C12.326 12.8562 12.3231 12.8533 12.3201 12.8504C12.3172 12.8474 12.3143 12.8445 12.3114 12.8416C12.3084 12.8387 12.3055 12.8357 12.3026 12.8328C12.2997 12.8299 12.2967 12.827 12.2938 12.824C12.2909 12.8211 12.288 12.8182 12.285 12.8153C12.2821 12.8123 12.2792 12.8094 12.2763 12.8065C12.2733 12.8036 12.2704 12.8007 12.2675 12.7977C12.2646 12.7948 12.2617 12.7919 12.2587 12.789C12.2558 12.786 12.2529 12.7831 12.25 12.7802C12.2471 12.7773 12.2441 12.7744 12.2412 12.7715C12.2383 12.7685 12.2354 12.7656 12.2325 12.7627C12.2295 12.7598 12.2266 12.7569 12.2237 12.7539C12.2208 12.751 12.2179 12.7481 12.215 12.7452C12.212 12.7423 12.2091 12.7394 12.2062 12.7365C12.2033 12.7335 12.2004 12.7306 12.1975 12.7277C12.1946 12.7248 12.1916 12.7219 12.1887 12.719C12.1858 12.7161 12.1829 12.7131 12.18 12.7102C12.1771 12.7073 12.1742 12.7044 12.1713 12.7015C12.1684 12.6986 12.1654 12.6957 12.1625 12.6928C12.1596 12.6899 12.1567 12.6869 12.1538 12.684C12.1509 12.6811 12.148 12.6782 12.1451 12.6753C12.1422 12.6724 12.1393 12.6695 12.1364 12.6666C12.1335 12.6637 12.1305 12.6608 12.1276 12.6579C12.1247 12.655 12.1218 12.6521 12.1189 12.6492C12.116 12.6463 12.1131 12.6433 12.1102 12.6404C12.1073 12.6375 12.1044 12.6346 12.1015 12.6317C12.0986 12.6288 12.0957 12.6259 12.0928 12.623C12.0899 12.6201 12.087 12.6172 12.0841 12.6143C12.0812 12.6114 12.0783 12.6085 12.0754 12.6056C12.0725 12.6027 12.0696 12.5998 12.0667 12.5969C12.0638 12.594 12.0609 12.5911 12.058 12.5882C12.0551 12.5853 12.0522 12.5824 12.0493 12.5795C12.0464 12.5767 12.0435 12.5738 12.0406 12.5709C12.0377 12.568 12.0348 12.5651 12.032 12.5622C12.0291 12.5593 12.0262 12.5564 12.0233 12.5535C12.0204 12.5506 12.0175 12.5477 12.0146 12.5448C12.0117 12.5419 12.0088 12.539 12.0059 12.5362C12.003 12.5333 12.0001 12.5304 11.9973 12.5275C11.9944 12.5246 11.9915 12.5217 11.9886 12.5188C11.9857 12.5159 11.9828 12.513 11.9799 12.5102C11.977 12.5073 11.9742 12.5044 11.9713 12.5015C11.9684 12.4986 11.9655 12.4957 11.9626 12.4929C11.9597 12.49 11.9569 12.4871 11.954 12.4842C11.9511 12.4813 11.9482 12.4784 11.9453 12.4756C11.9424 12.4727 11.9396 12.4698 11.9367 12.4669C11.9338 12.464 11.9309 12.4612 11.928 12.4583C11.9252 12.4554 11.9223 12.4525 11.9194 12.4496C11.9165 12.4468 11.9137 12.4439 11.9108 12.441C11.9079 12.4381 11.905 12.4353 11.9021 12.4324C11.8993 12.4295 11.8964 12.4266 11.8935 12.4238C11.8906 12.4209 11.8878 12.418 11.8849 12.4151C11.882 12.4123 11.8792 12.4094 11.8763 12.4065C11.8734 12.4036 11.8705 12.4008 11.8677 12.3979C11.8648 12.395 11.8619 12.3922 11.8591 12.3893C11.8562 12.3864 11.8533 12.3836 11.8505 12.3807C11.8476 12.3778 11.8447 12.375 11.8419 12.3721C11.839 12.3692 11.8361 12.3664 11.8333 12.3635C11.8304 12.3606 11.8275 12.3578 11.8247 12.3549C11.8218 12.352 11.819 12.3492 11.8161 12.3463C11.8132 12.3435 11.8104 12.3406 11.8075 12.3377C11.8046 12.3349 11.8018 12.332 11.7989 12.3292C11.7961 12.3263 11.7932 12.3234 11.7903 12.3206C11.7875 12.3177 11.7846 12.3149 11.7818 12.312C11.7789 12.3092 11.7761 12.3063 11.7732 12.3034C11.7704 12.3006 11.7675 12.2977 11.7647 12.2949C11.7618 12.292 11.7589 12.2892 11.7561 12.2863C11.7532 12.2835 11.7504 12.2806 11.7475 12.2778C11.7447 12.2749 11.7418 12.2721 11.739 12.2692C11.7361 12.2664 11.7333 12.2635 11.7304 12.2607C11.7276 12.2578 11.7248 12.255 11.7219 12.2521C11.7191 12.2493 11.7162 12.2464 11.7134 12.2436C11.7105 12.2408 11.7077 12.2379 11.7048 12.2351C11.702 12.2322 11.6992 12.2294 11.6963 12.2265C11.6935 12.2237 11.6906 12.2209 11.6878 12.218C11.6849 12.2152 11.6821 12.2123 11.6793 12.2095C11.6764 12.2067 11.6736 12.2038 11.6708 12.201C11.6679 12.1981 11.6651 12.1953 11.6622 12.1925C11.6594 12.1896 11.6566 12.1868 11.6537 12.184C11.6509 12.1811 11.6481 12.1783 11.6452 12.1755C11.6424 12.1726 11.6396 12.1698 11.6367 12.167C11.6339 12.1641 11.6311 12.1613 11.6283 12.1585C11.6254 12.1557 11.6226 12.1528 11.6198 12.15C11.6169 12.1472 11.6141 12.1443 11.6113 12.1415C11.6085 12.1387 11.6056 12.1359 11.6028 12.133C11.6 12.1302 11.5972 12.1274 11.5943 12.1246C11.5915 12.1218 11.5887 12.1189 11.5859 12.1161C11.5831 12.1133 11.5802 12.1105 11.5774 12.1076C11.5746 12.1048 11.5718 12.102 11.569 12.0992C11.5661 12.0964 11.5633 12.0936 11.5605 12.0907C11.5577 12.0879 11.5549 12.0851 11.5521 12.0823C11.5493 12.0795 11.5464 12.0767 11.5436 12.0739C11.5408 12.071 11.538 12.0682 11.5352 12.0654C11.5324 12.0626 11.5296 12.0598 11.5268 12.057C11.5239 12.0542 11.5211 12.0514 11.5183 12.0486C11.5155 12.0458 11.5127 12.0429 11.5099 12.0401C11.5071 12.0373 11.5043 12.0345 11.5015 12.0317C11.4987 12.0289 11.4959 12.0261 11.4931 12.0233C11.4903 12.0205 11.4875 12.0177 11.4847 12.0149C11.4819 12.0121 11.4791 12.0093 11.4763 12.0065C11.4735 12.0037 11.4707 12.0009 11.4679 11.9981C11.4651 11.9953 11.4623 11.9925 11.4595 11.9897C11.4567 11.9869 11.4539 11.9841 11.4511 11.9813C11.4483 11.9785 11.4455 11.9758 11.4427 11.973C11.4399 11.9702 11.4371 11.9674 11.4344 11.9646C11.4316 11.9618 11.4288 11.959 11.426 11.9562C11.4232 11.9534 11.4204 11.9506 11.4176 11.9479C11.4148 11.9451 11.4121 11.9423 11.4093 11.9395C11.4065 11.9367 11.4037 11.9339 11.4009 11.9311C11.3981 11.9284 11.3954 11.9256 11.3926 11.9228C11.3898 11.92 11.387 11.9172 11.3842 11.9145C11.3814 11.9117 11.3787 11.9089 11.3759 11.9061C11.3731 11.9033 11.3703 11.9006 11.3676 11.8978C11.3648 11.895 11.362 11.8922 11.3592 11.8895C11.3565 11.8867 11.3537 11.8839 11.3509 11.8812C11.3481 11.8784 11.3454 11.8756 11.3426 11.8728C11.3398 11.8701 11.3371 11.8673 11.3343 11.8645C11.3315 11.8618 11.3288 11.859 11.326 11.8562C11.3232 11.8535 11.3205 11.8507 11.3177 11.8479C11.3149 11.8452 11.3122 11.8424 11.3094 11.8396C11.3067 11.8369 11.3039 11.8341 11.3011 11.8314C11.2984 11.8286 11.2956 11.8258 11.2929 11.8231C11.2901 11.8203 11.2873 11.8176 11.2846 11.8148C11.2818 11.8121 11.2791 11.8093 11.2763 11.8065C11.2736 11.8038 11.2708 11.801 11.2681 11.7983C11.2653 11.7955 11.2625 11.7928 11.2598 11.79C11.257 11.7873 11.2543 11.7845 11.2515 11.7818C11.2488 11.779 11.2461 11.7763 11.2433 11.7735C11.2406 11.7708 11.2378 11.768 11.2351 11.7653C11.2323 11.7626 11.2296 11.7598 11.2268 11.7571C11.2241 11.7543 11.2214 11.7516 11.2186 11.7488C11.2159 11.7461 11.2131 11.7434 11.2104 11.7406C11.2077 11.7379 11.2049 11.7351 11.2022 11.7324L9.78797 13.1466ZM5 20C3.34315 20 2 18.6569 2 17H0C0 19.7614 2.23858 22 5 22V20ZM5.54535 13.1466C6.71693 11.9751 8.6164 11.9751 9.78797 13.1466L11.2022 11.7324C9.24955 9.77978 6.08375 9.77982 4.13113 11.7324L5.54535 13.1466ZM14.7778 22C17.5392 22 19.7778 19.7614 19.7778 17H17.7778C17.7778 18.6569 16.4346 20 14.7778 20V22ZM5 2.22222C2.23857 2.22222 0 4.4608 0 7.22223H2C2 5.56537 3.34315 4.22222 5 4.22222V2.22222Z'\n      fill='black'\n    />\n    <path\n      d='M18.7778 14.6111L18.2729 14.1062C16.7108 12.5441 14.1781 12.5441 12.616 14.1062L12.3889 14.3333'\n      stroke='black'\n      strokeWidth={2}\n      strokeLinecap='round'\n    />\n    <circle cx={12.1111} cy={7.66667} r={0.555556} fill='black' />\n  </svg>\n);\n\nexport default ImageSvg;\n","import React, { useMemo, useRef, useEffect, useState, useContext } from 'react';\nimport { useDndContext, getClientRect, useDroppable, useDraggable, closestCorners, getFirstCollision, getScrollableAncestors, KeyboardCode } from '@dnd-kit/core';\nimport { useUniqueId, useIsomorphicLayoutEffect, CSS, useCombinedRefs, isKeyboardEvent } from '@dnd-kit/utilities';\n\n/**\r\n * Move an array item to a different position. Returns a new array with the item moved to the new position.\r\n */\nfunction arrayMove(array, from, to) {\n  const newArray = array.slice();\n  newArray.splice(to < 0 ? newArray.length + to : to, 0, newArray.splice(from, 1)[0]);\n  return newArray;\n}\n\n/**\r\n * Swap an array item to a different position. Returns a new array with the item swapped to the new position.\r\n */\nfunction arraySwap(array, from, to) {\n  const newArray = array.slice();\n  newArray[from] = array[to];\n  newArray[to] = array[from];\n  return newArray;\n}\n\nfunction getSortedRects(items, rects) {\n  return items.reduce((accumulator, id, index) => {\n    const rect = rects.get(id);\n\n    if (rect) {\n      accumulator[index] = rect;\n    }\n\n    return accumulator;\n  }, Array(items.length));\n}\n\nfunction isValidIndex(index) {\n  return index !== null && index >= 0;\n}\n\n// To-do: We should be calculating scale transformation\nconst defaultScale = {\n  scaleX: 1,\n  scaleY: 1\n};\nconst horizontalListSortingStrategy = ({\n  rects,\n  activeNodeRect: fallbackActiveRect,\n  activeIndex,\n  overIndex,\n  index\n}) => {\n  var _rects$activeIndex;\n\n  const activeNodeRect = (_rects$activeIndex = rects[activeIndex]) != null ? _rects$activeIndex : fallbackActiveRect;\n\n  if (!activeNodeRect) {\n    return null;\n  }\n\n  const itemGap = getItemGap(rects, index, activeIndex);\n\n  if (index === activeIndex) {\n    const newIndexRect = rects[overIndex];\n\n    if (!newIndexRect) {\n      return null;\n    }\n\n    return {\n      x: activeIndex < overIndex ? newIndexRect.left + newIndexRect.width - (activeNodeRect.left + activeNodeRect.width) : newIndexRect.left - activeNodeRect.left,\n      y: 0,\n      ...defaultScale\n    };\n  }\n\n  if (index > activeIndex && index <= overIndex) {\n    return {\n      x: -activeNodeRect.width - itemGap,\n      y: 0,\n      ...defaultScale\n    };\n  }\n\n  if (index < activeIndex && index >= overIndex) {\n    return {\n      x: activeNodeRect.width + itemGap,\n      y: 0,\n      ...defaultScale\n    };\n  }\n\n  return {\n    x: 0,\n    y: 0,\n    ...defaultScale\n  };\n};\n\nfunction getItemGap(rects, index, activeIndex) {\n  const currentRect = rects[index];\n  const previousRect = rects[index - 1];\n  const nextRect = rects[index + 1];\n\n  if (!currentRect || !previousRect && !nextRect) {\n    return 0;\n  }\n\n  if (activeIndex < index) {\n    return previousRect ? currentRect.left - (previousRect.left + previousRect.width) : nextRect.left - (currentRect.left + currentRect.width);\n  }\n\n  return nextRect ? nextRect.left - (currentRect.left + currentRect.width) : currentRect.left - (previousRect.left + previousRect.width);\n}\n\nconst rectSortingStrategy = ({\n  rects,\n  activeIndex,\n  overIndex,\n  index\n}) => {\n  const newRects = arrayMove(rects, overIndex, activeIndex);\n  const oldRect = rects[index];\n  const newRect = newRects[index];\n\n  if (!newRect || !oldRect) {\n    return null;\n  }\n\n  return {\n    x: newRect.left - oldRect.left,\n    y: newRect.top - oldRect.top,\n    scaleX: newRect.width / oldRect.width,\n    scaleY: newRect.height / oldRect.height\n  };\n};\n\nconst rectSwappingStrategy = ({\n  activeIndex,\n  index,\n  rects,\n  overIndex\n}) => {\n  let oldRect;\n  let newRect;\n\n  if (index === activeIndex) {\n    oldRect = rects[index];\n    newRect = rects[overIndex];\n  }\n\n  if (index === overIndex) {\n    oldRect = rects[index];\n    newRect = rects[activeIndex];\n  }\n\n  if (!newRect || !oldRect) {\n    return null;\n  }\n\n  return {\n    x: newRect.left - oldRect.left,\n    y: newRect.top - oldRect.top,\n    scaleX: newRect.width / oldRect.width,\n    scaleY: newRect.height / oldRect.height\n  };\n};\n\n// To-do: We should be calculating scale transformation\nconst defaultScale$1 = {\n  scaleX: 1,\n  scaleY: 1\n};\nconst verticalListSortingStrategy = ({\n  activeIndex,\n  activeNodeRect: fallbackActiveRect,\n  index,\n  rects,\n  overIndex\n}) => {\n  var _rects$activeIndex;\n\n  const activeNodeRect = (_rects$activeIndex = rects[activeIndex]) != null ? _rects$activeIndex : fallbackActiveRect;\n\n  if (!activeNodeRect) {\n    return null;\n  }\n\n  if (index === activeIndex) {\n    const overIndexRect = rects[overIndex];\n\n    if (!overIndexRect) {\n      return null;\n    }\n\n    return {\n      x: 0,\n      y: activeIndex < overIndex ? overIndexRect.top + overIndexRect.height - (activeNodeRect.top + activeNodeRect.height) : overIndexRect.top - activeNodeRect.top,\n      ...defaultScale$1\n    };\n  }\n\n  const itemGap = getItemGap$1(rects, index, activeIndex);\n\n  if (index > activeIndex && index <= overIndex) {\n    return {\n      x: 0,\n      y: -activeNodeRect.height - itemGap,\n      ...defaultScale$1\n    };\n  }\n\n  if (index < activeIndex && index >= overIndex) {\n    return {\n      x: 0,\n      y: activeNodeRect.height + itemGap,\n      ...defaultScale$1\n    };\n  }\n\n  return {\n    x: 0,\n    y: 0,\n    ...defaultScale$1\n  };\n};\n\nfunction getItemGap$1(clientRects, index, activeIndex) {\n  const currentRect = clientRects[index];\n  const previousRect = clientRects[index - 1];\n  const nextRect = clientRects[index + 1];\n\n  if (!currentRect) {\n    return 0;\n  }\n\n  if (activeIndex < index) {\n    return previousRect ? currentRect.top - (previousRect.top + previousRect.height) : nextRect ? nextRect.top - (currentRect.top + currentRect.height) : 0;\n  }\n\n  return nextRect ? nextRect.top - (currentRect.top + currentRect.height) : previousRect ? currentRect.top - (previousRect.top + previousRect.height) : 0;\n}\n\nconst ID_PREFIX = 'Sortable';\nconst Context = /*#__PURE__*/React.createContext({\n  activeIndex: -1,\n  containerId: ID_PREFIX,\n  disableTransforms: false,\n  items: [],\n  overIndex: -1,\n  useDragOverlay: false,\n  sortedRects: [],\n  strategy: rectSortingStrategy\n});\nfunction SortableContext({\n  children,\n  id,\n  items: userDefinedItems,\n  strategy = rectSortingStrategy\n}) {\n  const {\n    active,\n    dragOverlay,\n    droppableRects,\n    over,\n    measureDroppableContainers,\n    measuringScheduled\n  } = useDndContext();\n  const containerId = useUniqueId(ID_PREFIX, id);\n  const useDragOverlay = Boolean(dragOverlay.rect !== null);\n  const items = useMemo(() => userDefinedItems.map(item => typeof item === 'string' ? item : item.id), [userDefinedItems]);\n  const isDragging = active != null;\n  const activeIndex = active ? items.indexOf(active.id) : -1;\n  const overIndex = over ? items.indexOf(over.id) : -1;\n  const previousItemsRef = useRef(items);\n  const itemsHaveChanged = !isEqual(items, previousItemsRef.current);\n  const disableTransforms = overIndex !== -1 && activeIndex === -1 || itemsHaveChanged;\n  useIsomorphicLayoutEffect(() => {\n    if (itemsHaveChanged && isDragging && !measuringScheduled) {\n      measureDroppableContainers(items);\n    }\n  }, [itemsHaveChanged, items, isDragging, measureDroppableContainers, measuringScheduled]);\n  useEffect(() => {\n    previousItemsRef.current = items;\n  }, [items]);\n  const contextValue = useMemo(() => ({\n    activeIndex,\n    containerId,\n    disableTransforms,\n    items,\n    overIndex,\n    useDragOverlay,\n    sortedRects: getSortedRects(items, droppableRects),\n    strategy\n  }), [activeIndex, containerId, disableTransforms, items, overIndex, droppableRects, useDragOverlay, strategy]);\n  return React.createElement(Context.Provider, {\n    value: contextValue\n  }, children);\n}\n\nfunction isEqual(arr1, arr2) {\n  return arr1.join() === arr2.join();\n}\n\nconst defaultNewIndexGetter = ({\n  id,\n  items,\n  activeIndex,\n  overIndex\n}) => arrayMove(items, activeIndex, overIndex).indexOf(id);\nconst defaultAnimateLayoutChanges = ({\n  containerId,\n  isSorting,\n  wasDragging,\n  index,\n  items,\n  newIndex,\n  previousItems,\n  previousContainerId,\n  transition\n}) => {\n  if (!transition || !wasDragging) {\n    return false;\n  }\n\n  if (previousItems !== items && index === newIndex) {\n    return false;\n  }\n\n  if (isSorting) {\n    return true;\n  }\n\n  return newIndex !== index && containerId === previousContainerId;\n};\nconst defaultTransition = {\n  duration: 200,\n  easing: 'ease'\n};\nconst transitionProperty = 'transform';\nconst disabledTransition = /*#__PURE__*/CSS.Transition.toString({\n  property: transitionProperty,\n  duration: 0,\n  easing: 'linear'\n});\nconst defaultAttributes = {\n  roleDescription: 'sortable'\n};\n\n/*\r\n * When the index of an item changes while sorting,\r\n * we need to temporarily disable the transforms\r\n */\n\nfunction useDerivedTransform({\n  disabled,\n  index,\n  node,\n  rect\n}) {\n  const [derivedTransform, setDerivedtransform] = useState(null);\n  const previousIndex = useRef(index);\n  useIsomorphicLayoutEffect(() => {\n    if (!disabled && index !== previousIndex.current && node.current) {\n      const initial = rect.current;\n\n      if (initial) {\n        const current = getClientRect(node.current, {\n          ignoreTransform: true\n        });\n        const delta = {\n          x: initial.left - current.left,\n          y: initial.top - current.top,\n          scaleX: initial.width / current.width,\n          scaleY: initial.height / current.height\n        };\n\n        if (delta.x || delta.y) {\n          setDerivedtransform(delta);\n        }\n      }\n    }\n\n    if (index !== previousIndex.current) {\n      previousIndex.current = index;\n    }\n  }, [disabled, index, node, rect]);\n  useEffect(() => {\n    if (derivedTransform) {\n      requestAnimationFrame(() => {\n        setDerivedtransform(null);\n      });\n    }\n  }, [derivedTransform]);\n  return derivedTransform;\n}\n\nfunction useSortable({\n  animateLayoutChanges = defaultAnimateLayoutChanges,\n  attributes: userDefinedAttributes,\n  disabled,\n  data: customData,\n  getNewIndex = defaultNewIndexGetter,\n  id,\n  strategy: localStrategy,\n  resizeObserverConfig,\n  transition = defaultTransition\n}) {\n  const {\n    items,\n    containerId,\n    activeIndex,\n    disableTransforms,\n    sortedRects,\n    overIndex,\n    useDragOverlay,\n    strategy: globalStrategy\n  } = useContext(Context);\n  const index = items.indexOf(id);\n  const data = useMemo(() => ({\n    sortable: {\n      containerId,\n      index,\n      items\n    },\n    ...customData\n  }), [containerId, customData, index, items]);\n  const itemsAfterCurrentSortable = useMemo(() => items.slice(items.indexOf(id)), [items, id]);\n  const {\n    rect,\n    node,\n    isOver,\n    setNodeRef: setDroppableNodeRef\n  } = useDroppable({\n    id,\n    data,\n    resizeObserverConfig: {\n      updateMeasurementsFor: itemsAfterCurrentSortable,\n      ...resizeObserverConfig\n    }\n  });\n  const {\n    active,\n    activatorEvent,\n    activeNodeRect,\n    attributes,\n    setNodeRef: setDraggableNodeRef,\n    listeners,\n    isDragging,\n    over,\n    transform\n  } = useDraggable({\n    id,\n    data,\n    attributes: { ...defaultAttributes,\n      ...userDefinedAttributes\n    },\n    disabled\n  });\n  const setNodeRef = useCombinedRefs(setDroppableNodeRef, setDraggableNodeRef);\n  const isSorting = Boolean(active);\n  const displaceItem = isSorting && !disableTransforms && isValidIndex(activeIndex) && isValidIndex(overIndex);\n  const shouldDisplaceDragSource = !useDragOverlay && isDragging;\n  const dragSourceDisplacement = shouldDisplaceDragSource && displaceItem ? transform : null;\n  const strategy = localStrategy != null ? localStrategy : globalStrategy;\n  const finalTransform = displaceItem ? dragSourceDisplacement != null ? dragSourceDisplacement : strategy({\n    rects: sortedRects,\n    activeNodeRect,\n    activeIndex,\n    overIndex,\n    index\n  }) : null;\n  const newIndex = isValidIndex(activeIndex) && isValidIndex(overIndex) ? getNewIndex({\n    id,\n    items,\n    activeIndex,\n    overIndex\n  }) : index;\n  const activeId = active == null ? void 0 : active.id;\n  const previous = useRef({\n    activeId,\n    items,\n    newIndex,\n    containerId\n  });\n  const itemsHaveChanged = items !== previous.current.items;\n  const shouldAnimateLayoutChanges = animateLayoutChanges({\n    active,\n    containerId,\n    isDragging,\n    isSorting,\n    id,\n    index,\n    items,\n    newIndex: previous.current.newIndex,\n    previousItems: previous.current.items,\n    previousContainerId: previous.current.containerId,\n    transition,\n    wasDragging: previous.current.activeId != null\n  });\n  const derivedTransform = useDerivedTransform({\n    disabled: !shouldAnimateLayoutChanges,\n    index,\n    node,\n    rect\n  });\n  useEffect(() => {\n    if (isSorting && previous.current.newIndex !== newIndex) {\n      previous.current.newIndex = newIndex;\n    }\n\n    if (containerId !== previous.current.containerId) {\n      previous.current.containerId = containerId;\n    }\n\n    if (items !== previous.current.items) {\n      previous.current.items = items;\n    }\n\n    if (activeId !== previous.current.activeId) {\n      previous.current.activeId = activeId;\n    }\n  }, [activeId, isSorting, newIndex, containerId, items]);\n  return {\n    active,\n    activeIndex,\n    attributes,\n    rect,\n    index,\n    newIndex,\n    items,\n    isOver,\n    isSorting,\n    isDragging,\n    listeners,\n    node,\n    overIndex,\n    over,\n    setNodeRef,\n    setDroppableNodeRef,\n    setDraggableNodeRef,\n    transform: derivedTransform != null ? derivedTransform : finalTransform,\n    transition: getTransition()\n  };\n\n  function getTransition() {\n    if ( // Temporarily disable transitions for a single frame to set up derived transforms\n    derivedTransform || // Or to prevent items jumping to back to their \"new\" position when items change\n    itemsHaveChanged && previous.current.newIndex === index) {\n      return disabledTransition;\n    }\n\n    if (shouldDisplaceDragSource && !isKeyboardEvent(activatorEvent) || !transition) {\n      return undefined;\n    }\n\n    if (isSorting || shouldAnimateLayoutChanges) {\n      return CSS.Transition.toString({ ...transition,\n        property: transitionProperty\n      });\n    }\n\n    return undefined;\n  }\n}\n\nconst directions = [KeyboardCode.Down, KeyboardCode.Right, KeyboardCode.Up, KeyboardCode.Left];\nconst sortableKeyboardCoordinates = (event, {\n  context: {\n    active,\n    droppableContainers,\n    collisionRect,\n    scrollableAncestors\n  }\n}) => {\n  if (directions.includes(event.code)) {\n    event.preventDefault();\n\n    if (!active || !collisionRect) {\n      return;\n    }\n\n    const filteredContainers = [];\n    droppableContainers.getEnabled().forEach(entry => {\n      if (!entry || (entry == null ? void 0 : entry.disabled)) {\n        return;\n      }\n\n      const rect = entry == null ? void 0 : entry.rect.current;\n\n      if (!rect) {\n        return;\n      }\n\n      switch (event.code) {\n        case KeyboardCode.Down:\n          if (collisionRect.top + collisionRect.height <= rect.top) {\n            filteredContainers.push(entry);\n          }\n\n          break;\n\n        case KeyboardCode.Up:\n          if (collisionRect.top >= rect.top + rect.height) {\n            filteredContainers.push(entry);\n          }\n\n          break;\n\n        case KeyboardCode.Left:\n          if (collisionRect.left >= rect.left + rect.width) {\n            filteredContainers.push(entry);\n          }\n\n          break;\n\n        case KeyboardCode.Right:\n          if (collisionRect.left + collisionRect.width <= rect.left) {\n            filteredContainers.push(entry);\n          }\n\n          break;\n      }\n    });\n    const collisions = closestCorners({\n      active,\n      collisionRect: collisionRect,\n      droppableContainers: filteredContainers,\n      pointerCoordinates: null\n    });\n    const closestId = getFirstCollision(collisions, 'id');\n\n    if (closestId != null) {\n      const newDroppable = droppableContainers.get(closestId);\n      const newNode = newDroppable == null ? void 0 : newDroppable.node.current;\n      const newRect = newDroppable == null ? void 0 : newDroppable.rect.current;\n\n      if (newNode && newRect) {\n        const newScrollAncestors = getScrollableAncestors(newNode);\n        const hasDifferentScrollAncestors = newScrollAncestors.some((element, index) => scrollableAncestors[index] !== element);\n        const offset = hasDifferentScrollAncestors ? {\n          x: 0,\n          y: 0\n        } : {\n          x: collisionRect.width - newRect.width,\n          y: collisionRect.height - newRect.height\n        };\n        const newCoordinates = {\n          x: newRect.left - offset.x,\n          y: newRect.top - offset.y\n        };\n        return newCoordinates;\n      }\n    }\n  }\n\n  return undefined;\n};\n\nexport { SortableContext, arrayMove, arraySwap, defaultAnimateLayoutChanges, defaultNewIndexGetter, horizontalListSortingStrategy, rectSortingStrategy, rectSwappingStrategy, sortableKeyboardCoordinates, useSortable, verticalListSortingStrategy };\n//# sourceMappingURL=sortable.esm.js.map\n","import React from \"react\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./Button.module.scss\";\n\nconst cnb = classNames.bind(styles);\n\nenum BColor {\n  white = \"whiteColor\",\n  blue = \"blueColor\"\n}\n\ntype OmitedButtonProps = Omit<Readonly<React.HTMLProps<HTMLButtonElement>>, \"type\" | \"onClick\">;\nexport interface ButtonProps<T> extends OmitedButtonProps {\n  readonly color: keyof typeof BColor;\n  readonly buttonValue: T;\n  readonly onClick?: (val: T) => void;\n}\n\nconst Button = <T,>({\n  color,\n  buttonValue,\n  className,\n  onClick,\n  ...props\n}: React.PropsWithChildren<ButtonProps<T>>): React.ReactElement => (\n  <button\n    {...props}\n    type='button'\n    onClick={() => onClick?.(buttonValue)}\n    className={cnb(\"base\", BColor[color], className)}\n  />\n);\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"base\":\"yE4-Aq7Lfo5yBkfIK7akGw==\",\"whiteColor\":\"_0S7S2dIZ0eAVpUI-uLtaAA==\",\"blueColor\":\"oS4ikpi1eR7DADZ5X90Bdg==\"};","import { Transform } from \"@dnd-kit/utilities\";\nimport { CSSProperties } from \"react\";\n\nexport function draggingStyles(\n  transform: Transform | null,\n  isDragging?: boolean\n): CSSProperties | undefined {\n  return transform\n    ? {\n        transform: `translate3d(${transform.x}px, ${transform.y}px, 0)`,\n        opacity: isDragging ? 0.2 : 1\n      }\n    : undefined;\n}\n\nexport interface CalculatorElementsProps {\n  readonly id: string;\n  readonly blockDrag?: boolean;\n  readonly isStatic?: boolean;\n  readonly noBorder?: boolean;\n  readonly runtime?: boolean;\n}\n","import React from \"react\";\nimport Button from \"@components/Button\";\nimport { draggingStyles, CalculatorElementsProps } from \"@utils/dndUtils\";\nimport classNames from \"classnames\";\nimport { useSortable } from \"@dnd-kit/sortable\";\nimport { useDispatch } from \"react-redux\";\nimport { calculateResult } from \"@store/monitor\";\n\nconst EqualitySign: React.FC<CalculatorElementsProps> = ({ blockDrag, id, noBorder, isStatic }) => {\n  const { attributes, listeners, setNodeRef, transform, isDragging } = useSortable({\n    id,\n    disabled: blockDrag\n  });\n\n  const dispatch = useDispatch();\n\n  function buttonClick(): void {\n    dispatch(calculateResult());\n  }\n\n  return (\n    <div\n      className={classNames(\n        \"blocksPadding\",\n        { cursorMove: isDragging },\n        { staticElement: isStatic },\n        { noBorder }\n      )}\n      ref={setNodeRef}\n      style={draggingStyles(transform, isDragging)}\n      {...listeners}\n      {...attributes}\n    >\n      <Button color='blue' buttonValue='=' onClick={buttonClick}>\n        =\n      </Button>\n    </div>\n  );\n};\n\nexport default EqualitySign;\n","import { useSortable } from \"@dnd-kit/sortable\";\nimport { draggingStyles, CalculatorElementsProps } from \"@utils/dndUtils\";\nimport { RootState } from \"@store/store\";\nimport { useSelector } from \"react-redux\";\nimport React from \"react\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./styles.module.scss\";\n\nconst cnb = classNames.bind(styles);\n\nconst MonitorBlock: React.FC<CalculatorElementsProps> = ({ blockDrag, id, noBorder, isStatic }) => {\n  const { attributes, listeners, setNodeRef, transform, isDragging } = useSortable({\n    id,\n    disabled: blockDrag\n  });\n\n  const monitor = useSelector((state: RootState) => state.monitor);\n\n  return (\n    <div\n      className={cnb(\n        \"blocksPadding\",\n        { cursorMove: isDragging },\n        { staticElement: isStatic },\n        { noBorder }\n      )}\n      ref={setNodeRef}\n      style={draggingStyles(transform, isDragging)}\n      {...listeners}\n      {...attributes}\n    >\n      <input\n        className={cnb(\"input\", { smallFont: monitor.value.length > 8 })}\n        value={monitor.value}\n        type='text'\n        disabled\n      />\n    </div>\n  );\n};\n\nexport default MonitorBlock;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"ti4rPs9aCZcLmSe-SAk5tg==\",\"smallFont\":\"kaw0f2B04VxeSHr-jTUJ0Q==\"};","import React from \"react\";\nimport classNames from \"classnames/bind\";\nimport Button from \"@components/Button\";\nimport { draggingStyles, CalculatorElementsProps } from \"@utils/dndUtils\";\nimport { useSortable } from \"@dnd-kit/sortable\";\nimport { useDispatch } from \"react-redux\";\nimport { appendValue, setNextDot } from \"@store/monitor\";\nimport styles from \"./styles.module.scss\";\n\nconst cnb = classNames.bind(styles);\n\nconst NumbersBlock: React.FC<CalculatorElementsProps> = ({\n  blockDrag,\n  id,\n  noBorder,\n  isStatic,\n  runtime\n}) => {\n  const { attributes, listeners, setNodeRef, transform, isDragging } = useSortable({\n    id,\n    disabled: blockDrag\n  });\n\n  const dispatch = useDispatch();\n\n  function onClickDigits(val: number): void {\n    if (runtime) dispatch(appendValue(val.toString()));\n  }\n\n  function onClickDot(): void {\n    if (runtime) dispatch(setNextDot(true));\n  }\n\n  return (\n    <div\n      className={cnb(\n        \"blocksPadding\",\n        \"wrapper\",\n        { cursorMove: isDragging },\n        { staticElement: isStatic },\n        { noBorder }\n      )}\n      ref={setNodeRef}\n      style={draggingStyles(transform, isDragging)}\n      {...listeners}\n      {...attributes}\n    >\n      {[...Array(9)].map((_, i) => {\n        const num = 9 - i;\n        return (\n          <Button key={num} color='white' buttonValue={num} onClick={onClickDigits}>\n            {num}\n          </Button>\n        );\n      })}\n      <Button color='white' buttonValue={0} className={cnb(\"zero\")} onClick={onClickDigits}>\n        0\n      </Button>\n      <Button color='white' buttonValue='dot' className={cnb(\"dot\")} onClick={onClickDot}>\n        ,\n      </Button>\n    </div>\n  );\n};\n\nexport default NumbersBlock;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"_6CWqen9XDXR6FZ9RMePArg==\",\"zero\":\"vtzOt8aJxp0iK27umOvOSA==\",\"dot\":\"nIGNSh4Sl54-Izuu7kjSjw==\"};","import React from \"react\";\nimport classNames from \"classnames/bind\";\nimport Button from \"@components/Button\";\nimport { useSortable } from \"@dnd-kit/sortable\";\nimport { draggingStyles, CalculatorElementsProps } from \"@utils/dndUtils\";\nimport { useDispatch } from \"react-redux\";\nimport { setSelectedSign } from \"@store/monitor\";\nimport styles from \"./styles.module.scss\";\n\nconst cnb = classNames.bind(styles);\n\nconst ButtonsArray: string[] = [\"/\", \"x\", \"-\", \"+\"];\n\nconst SignsBlock: React.FC<CalculatorElementsProps> = ({\n  blockDrag,\n  id,\n  noBorder,\n  isStatic,\n  runtime\n}) => {\n  const { attributes, listeners, setNodeRef, transform, isDragging } = useSortable({\n    id,\n    disabled: blockDrag\n  });\n\n  const dispatch = useDispatch();\n\n  function onSignClick(val: string): void {\n    if (runtime) dispatch(setSelectedSign(val));\n  }\n\n  return (\n    <div\n      className={cnb(\n        \"blocksPadding\",\n        \"wrapper\",\n        { cursorMove: isDragging },\n        { staticElement: isStatic },\n        { noBorder }\n      )}\n      ref={setNodeRef}\n      style={draggingStyles(transform, isDragging)}\n      {...listeners}\n      {...attributes}\n    >\n      {ButtonsArray.map((item) => (\n        <Button color='white' buttonValue={item} key={item} onClick={onSignClick}>\n          {item}\n        </Button>\n      ))}\n    </div>\n  );\n};\n\nexport default SignsBlock;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"fu-2ZnQr9HQ+qBMMpYxn4A==\"};","import EqualitySign from \"@components/CalculatorParts/EqualityBlock\";\nimport MonitorBlock from \"@components/CalculatorParts/MonitorBlock\";\nimport NumbersBlock from \"@components/CalculatorParts/NumbersBlock\";\nimport SignsBlock from \"@components/CalculatorParts/SignsBlock\";\nimport { ColumnElement, ComponentsTypes, ElementState } from \"@store/columns/types\";\nimport React from \"react\";\n\ninterface Props {\n  el: ColumnElement;\n}\n\nconst RenderElement: React.FC<Props> = ({ el }): JSX.Element | null => {\n  const isRuntime = el.state === ElementState.runtime;\n  const isStatic = el.state === ElementState.static;\n  const isBlockedDrag = el.state === ElementState.static || el.state === ElementState.runtime;\n  const noBorder = el.state === ElementState.dragged || el.state === ElementState.runtime;\n\n  switch (el.type) {\n    case ComponentsTypes.signs:\n      return (\n        <SignsBlock\n          id={el.id}\n          blockDrag={isBlockedDrag}\n          isStatic={isStatic}\n          noBorder={noBorder}\n          runtime={isRuntime}\n        />\n      );\n    case ComponentsTypes.monitor:\n      return (\n        <MonitorBlock\n          id={el.id}\n          blockDrag={isBlockedDrag}\n          isStatic={isStatic}\n          noBorder={noBorder}\n          runtime={isRuntime}\n        />\n      );\n    case ComponentsTypes.numbers:\n      return (\n        <NumbersBlock\n          id={el.id}\n          blockDrag={isBlockedDrag}\n          isStatic={isStatic}\n          noBorder={noBorder}\n          runtime={isRuntime}\n        />\n      );\n    case ComponentsTypes.equality:\n      return (\n        <EqualitySign\n          id={el.id}\n          blockDrag={isBlockedDrag}\n          isStatic={isStatic}\n          noBorder={noBorder}\n          runtime={isRuntime}\n        />\n      );\n    default:\n      return null;\n  }\n};\n\nexport default RenderElement;\n","import { ColumnElement } from \"@store/columns/types\";\nimport React from \"react\";\nimport RenderElement from \"./RenderElement\";\n\ninterface Props {\n  readonly elements: ColumnElement[];\n}\n\nconst RenderAreaElements: React.FC<Props> = ({ elements }) => (\n  <>\n    {elements.map((el) => (\n      <RenderElement el={el} key={el.id} />\n    ))}\n  </>\n);\n\nexport default RenderAreaElements;\n","import React from \"react\";\nimport StateSwitch from \"@components/StateSwitch\";\nimport {\n  closestCenter,\n  DndContext,\n  DragEndEvent,\n  DragOverlay,\n  DragStartEvent,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors\n} from \"@dnd-kit/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"@store/store\";\nimport DroppableArea from \"@components/CalculatorParts/DroppableArea/DroppableArea\";\nimport ImageSvg from \"@src/svgr/image\";\nimport {\n  appendToConstructorColumn,\n  setColumnsMode,\n  setConstructorColumsState,\n  removeFromConstructorColumn\n} from \"@store/columns\";\nimport {\n  isInEnumTypeGuard,\n  ComponentsTypes,\n  ConstructorState,\n  ElementState\n} from \"@store/columns/types\";\nimport {\n  arrayMove,\n  SortableContext,\n  sortableKeyboardCoordinates,\n  verticalListSortingStrategy\n} from \"@dnd-kit/sortable\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./styles.module.scss\";\nimport RenderAreaElements from \"./RenderAreaElements\";\nimport RenderElement from \"./RenderElement\";\n\nconst cnb = classNames.bind(styles);\n\nconst Workspace: React.FC = () => {\n  const dispatch = useDispatch();\n  const columns = useSelector((state: RootState) => state.columns);\n  const areaNotEmpty: boolean = columns.constructorColumn.length > 0;\n  const sortableContextItems = columns.constructorColumn.map((el) => el.id);\n  const [activeId, setActiveId] = React.useState<string | null>(null);\n  const [lastTouched, setLastTouched] = React.useState<string | null>(null);\n\n  function stateSwitch(tab: ConstructorState): void {\n    dispatch(setColumnsMode(tab));\n  }\n\n  function idParse(id: string): ComponentsTypes | null {\n    const type = id.split(\" \")?.[0];\n    return isInEnumTypeGuard(ComponentsTypes, type) ? type : null;\n  }\n\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates\n    })\n  );\n\n  function handleDragEnd(e: DragEndEvent): void {\n    if (e.over?.id === e.active.id) {\n      if (lastTouched === e.active.id) {\n        const type = idParse(lastTouched);\n        if (type) dispatch(removeFromConstructorColumn(type));\n      }\n      setLastTouched(e.active.id);\n    } else {\n      const type = idParse(e.active.id);\n      const overIdSplitted = e.over?.id.split(\" \");\n      const oldIndex = columns.constructorColumn.findIndex((item) => item.id === e.active.id);\n      if (overIdSplitted?.[0] === \"area\" && overIdSplitted?.[1] === \"constructor\") {\n        if (type) dispatch(appendToConstructorColumn(type));\n      }\n      if (\n        oldIndex !== -1 &&\n        overIdSplitted?.[1] === \"constructor\" &&\n        idParse(overIdSplitted?.[0])\n      ) {\n        const newIndex = columns.constructorColumn.findIndex((item) => item.id === e.over?.id);\n        dispatch(\n          setConstructorColumsState(arrayMove(columns.constructorColumn, oldIndex, newIndex))\n        );\n      }\n      setActiveId(null);\n    }\n  }\n\n  function handleDragStart(event: DragStartEvent): void {\n    const { active } = event;\n    setActiveId(active.id);\n  }\n\n  const RenderOverlay = () => {\n    const type: ComponentsTypes | null = activeId ? idParse(activeId) : null;\n    return (\n      <DragOverlay>\n        {activeId && type ? (\n          <RenderElement el={{ id: activeId, state: ElementState.static, type }} />\n        ) : null}\n      </DragOverlay>\n    );\n  };\n\n  return (\n    <DndContext\n      collisionDetection={closestCenter}\n      onDragStart={handleDragStart}\n      onDragEnd={handleDragEnd}\n      sensors={sensors}\n    >\n      <div className={cnb(\"container\")}>\n        <div className={cnb(\"elements\")}>\n          <div className={cnb(\"box\")}>\n            {columns.constructorState === ConstructorState.constructor && (\n              <RenderAreaElements elements={columns.elementsColumn} />\n            )}\n          </div>\n        </div>\n        <div className={cnb(\"controls\")}>\n          <StateSwitch active={columns.constructorState} onClick={stateSwitch} />\n        </div>\n        <div className={cnb(\"dropArea\")}>\n          <SortableContext items={sortableContextItems} strategy={verticalListSortingStrategy}>\n            <DroppableArea itemsInside={columns.constructorColumn.length}>\n              {areaNotEmpty ? (\n                <RenderAreaElements elements={columns.constructorColumn} />\n              ) : (\n                <div className={cnb(\"desc\")}>\n                  <ImageSvg />\n                  <h6>Перетащите сюда</h6>\n                  <p>\n                    любой элемент\n                    <br /> из левой панели\n                  </p>\n                </div>\n              )}\n            </DroppableArea>\n            <RenderOverlay />\n          </SortableContext>\n        </div>\n      </div>\n    </DndContext>\n  );\n};\n\nexport default Workspace;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Ux0WdPi8vVfWUOyoHbiBSA==\",\"controls\":\"vlDOUSiYkT7TMmy1POZfNw==\",\"elements\":\"qaW9A05YIy5khWTwDdn6mg==\",\"box\":\"_8EA6o5Mpi7AhVtxRHaWiWg==\",\"dropArea\":\"IcB9SQs8NLxahr3GZSJw1g==\",\"desc\":\"ssCrYFmS+7k+dZUTVwjriA==\"};"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","this","Array","isArray","apply","toString","Object","prototype","key","call","join","module","exports","default","inner","props","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cnb","active","onClick","className","selected","canUseDOM","window","document","createElement","isWindow","element","elementString","isNode","node","getWindow","target","_target$ownerDocument","_target$ownerDocument2","ownerDocument","defaultView","isDocument","Document","isHTMLElement","HTMLElement","getOwnerDocument","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","useLatestValue","value","dependencies","valueRef","useRef","current","useLazyMemo","callback","useMemo","newValue","useNodeRef","onChange","onChangeRef","setNodeRef","useCallback","ids","useUniqueId","prefix","id","createAdjustmentFn","modifier","object","adjustments","reduce","accumulator","adjustment","entries","valueAdjustment","add","subtract","isKeyboardEvent","event","KeyboardEvent","getEventCoordinates","TouchEvent","isTouchEvent","touches","clientX","x","clientY","y","changedTouches","hasViewportRelativeCoordinates","CSS","freeze","Translate","transform","Math","round","Scale","scaleX","scaleY","Transform","Transition","property","duration","easing","hiddenStyles","display","HiddenText","style","visuallyHidden","position","margin","border","padding","overflow","clip","clipPath","whiteSpace","LiveRegion","announcement","role","screenReaderInstructions","draggable","defaultAnnouncements","onDragStart","onDragOver","overId","onDragEnd","onDragCancel","Action","noop","_args","DroppableContainersMap","Map","get","_super$get","super","undefined","toArray","from","values","getEnabled","filter","disabled","getNodeFor","_this$get$node$curren","_this$get","defaultPublicContext","activatorEvent","activeNode","activeNodeRect","collisions","containerNodeRect","draggableNodes","droppableRects","droppableContainers","over","dragOverlay","nodeRef","rect","setRef","scrollableAncestors","scrollableAncestorRects","measureDroppableContainers","windowRect","measuringScheduled","defaultInternalContext","activators","ariaDescribedById","dispatch","InternalContext","createContext","PublicContext","getInitialState","initialCoordinates","nodes","translate","droppable","containers","reducer","state","action","type","DragStart","DragMove","coordinates","DragEnd","DragCancel","RegisterDroppable","set","SetDroppableDisabled","UnregisterDroppable","delete","DndMonitorContext","Accessibility","announcements","hiddenTextDescribedById","announce","setAnnouncement","useState","useAnnouncement","liveRegionId","mounted","setMounted","onDragMove","monitorState","useContext","previousMonitorState","DragOver","useDndMonitor","createPortal","body","defaultCoordinates","distanceBetween","p1","p2","sqrt","pow","getRelativeTransformOrigin","eventCoordinates","left","top","sortCollisionsAsc","data","a","b","sortCollisionsDesc","cornersOfRectangle","getFirstCollision","firstCollision","centerOfRectangle","closestCenter","collisionRect","centerRect","droppableContainer","distBetween","sort","getIntersectionRatio","entry","max","right","min","bottom","targetArea","entryArea","intersectionArea","Number","toFixed","rectIntersection","intersectionRatio","createRectAdjustmentFn","acc","getAdjustedRect","defaultOptions","ignoreTransform","getClientRect","options","getBoundingClientRect","getComputedStyle","transformOrigin","ta","sx","sy","dx","dy","startsWith","slice","split","parseFloat","indexOf","w","h","inverseTransform","getTransformAgnosticClientRect","getScrollableAncestors","scrollParents","findScrollableAncestors","scrollingElement","includes","SVGElement","isSVGElement","computedStyle","overflowRegex","find","test","isScrollable","isFixed","parentNode","getScrollableElement","getScrollXCoordinate","scrollX","scrollLeft","getScrollYCoordinate","scrollY","scrollTop","getScrollCoordinates","Direction","getScrollPosition","scrollingContainer","minScroll","maxScroll","scrollWidth","clientWidth","scrollHeight","clientHeight","isTop","isLeft","isBottom","isRight","defaultThreshold","getScrollDirectionAndSpeed","scrollContainer","scrollContainerRect","acceleration","thresholdPercentage","finalScrollContainerRect","direction","speed","threshold","Backward","abs","Forward","getScrollElementRect","innerWidth","innerHeight","getScrollOffsets","properties","Rect","constructor","scrollOffsets","axis","keys","getScrollOffset","defineProperty","currentOffsets","scrollOffsetsDeltla","enumerable","AutoScrollActivator","TraversalOrder","MeasuringStrategy","MeasuringFrequency","useAutoScroller","activator","Pointer","canScroll","draggingRect","enabled","interval","order","TreeOrder","pointerCoordinates","setAutoScrollInterval","clearAutoScrollInterval","intervalRef","listener","setInterval","clearInterval","useInterval","scrollSpeed","DraggableRect","scrollDirection","scrollContainerRef","autoScroll","scrollBy","sortedScrollableAncestors","reverse","index","JSON","stringify","defaultValue","defaultConfig","measure","strategy","WhileDragging","frequency","Optimized","useResizeObserver","onResize","resizeObserver","ResizeObserver","disconnect","defaultValue$1","useClientRect","createUseRectFn","useClientRects","createUseRectsFn","useRect","getRect","forceRecompute","previousElement","previousValue","elements","previousElements","map","getMeasurableNode","children","firstChild","useSensor","sensor","Listeners","listeners","removeAll","forEach","_this$target","removeEventListener","eventName","handler","_this$target2","addEventListener","hasExceededDistance","delta","measurement","EventName","KeyboardCode","preventDefault","stopPropagation","defaultKeyboardCodes","start","Space","Enter","cancel","Esc","end","defaultKeyboardCoordinateGetter","currentCoordinates","code","Right","Left","Down","Up","KeyboardSensor","autoScrollEnabled","windowListeners","handleKeyDown","bind","handleCancel","attach","handleStart","Resize","VisibilityChange","setTimeout","Keydown","onStart","Error","context","keyboardCodes","coordinateGetter","scrollBehavior","handleEnd","newCoordinates","scrollDelta","coordinatesDelta","scrollElementRect","clampedCoordinates","canScrollX","canScrollY","behavior","handleMove","onMove","onEnd","detach","onCancel","isDistanceConstraint","constraint","Boolean","isDelayConstraint","onActivation","nativeEvent","AbstractPointerSensor","events","listenerTarget","EventTarget","getEventListenerTarget","_getEventCoordinates","activated","timeoutId","documentListeners","handleKeydown","removeTextSelection","activationConstraint","move","name","passive","ContextMenu","delay","clearTimeout","Click","capture","SelectionChange","_getEventCoordinates2","tolerance","distance","cancelable","_this$document$getSel","getSelection","removeAllRanges","PointerSensor","isPrimary","button","events$1","MouseButton","RightClick","events$2","applyModifiers","modifiers","args","static","defaultSensors","defaultData","ActiveDraggableContext","DndContext","memo","sensors","collisionDetection","measuring","screenReaderInstructions$1","_measuring$draggable$","_measuring$draggable","_sensorContext$curren","_measuring$dragOverla","_dragOverlay$nodeRef$","_dragOverlay$rect","_over$rect","store","useReducer","setMonitorState","isDragging","setIsDragging","activeId","activeRects","initial","translated","_node$data","activeRef","activeSensor","setActiveSensor","setActivatorEvent","latestProps","draggableDescribedById","enabledDroppableContainers","dragging","config","containerIdsScheduledForMeasurement","setContainerIdsScheduledForMeasurement","containersRef","concat","Always","BeforeDragging","isDisabled","container","requestAnimationFrame","useDroppableMeasuring","draggableNode","cachedNode","_ref","useCachedNode","activationCoordinates","parentElement","sensorContext","draggingNode","draggingNodeRect","scrollAdjustedTranslate","overNode","setRect","handleResize","newRect","handleNodeChange","observe","useDragOverlayMeasuring","initialActiveNodeRectRef","initialActiveNodeRect","nodeRectDelta","rect2","rect1","getWindowClientRect","previousNode","ancestors","useScrollableAncestors","modifiedTranslate","overlayNodeRect","scrollAdjustment","scrollCoordinates","setScrollCoordinates","prevElements","handleScroll","cleanup","scrollableElement","useScrollOffsets","setOver","adjustScale","instantiateSensor","Sensor","sensorInstance","unstable_batchedUpdates","createHandler","async","cancelDrop","Promise","resolve","bindActivatorToSensorInstantiator","dndKit","defaultPrevented","capturedBy","getSyntheticHandler","useCombineActivators","teardownFns","setup","teardown","useSensorSetup","overContainer","activeSensorDisablesAutoscroll","autoScrollGloballyDisabled","getAutoScrollerOptions","publicContext","internalContext","Provider","NullContext","defaultRole","useDraggable","attributes","roleDescription","tabIndex","useSyntheticListeners","dataRef","useDndContext","defaultResizeObserverConfig","timeout","useDroppable","resizeObserverConfig","resizeObserverConnected","callbackId","resizeObserverDisabled","updateMeasurementsFor","resizeObserverTimeout","newElement","unobserve","isOver","defaultDropAnimation","dragSourceOpacity","defaultTransform","defaultTransition","DragOverlay","dropAnimation","styleProp","transition","wrapperElement","zIndex","_active$id","_attributesSnapshot$c","modifiedTransform","finalTransform","initialRect","touchAction","attributesSnapshot","derivedAttributes","finalChildren","_","otherAttributes","prevActiveId","dropAnimationComplete","animate","setDropAnimationComplete","_draggableNodes$activ","finalNode","fromNode","to","scaleDelta","originalOpacity","opacity","onfinish","useDropAnimation","shouldRender","_active$id2","ref","itemsInside","hasElements","showLine","background","filled","cx","cy","r","arrayMove","array","newArray","splice","getSortedRects","items","rects","isValidIndex","rectSortingStrategy","activeIndex","overIndex","newRects","oldRect","defaultScale$1","verticalListSortingStrategy","fallbackActiveRect","_rects$activeIndex","overIndexRect","itemGap","clientRects","currentRect","previousRect","nextRect","getItemGap$1","Context","containerId","disableTransforms","useDragOverlay","sortedRects","SortableContext","userDefinedItems","item","previousItemsRef","itemsHaveChanged","arr1","arr2","contextValue","defaultNewIndexGetter","defaultAnimateLayoutChanges","isSorting","wasDragging","newIndex","previousItems","previousContainerId","transitionProperty","disabledTransition","defaultAttributes","useSortable","animateLayoutChanges","userDefinedAttributes","customData","getNewIndex","localStrategy","globalStrategy","sortable","itemsAfterCurrentSortable","setDroppableNodeRef","setDraggableNodeRef","refs","useCombinedRefs","displaceItem","shouldDisplaceDragSource","dragSourceDisplacement","previous","shouldAnimateLayoutChanges","derivedTransform","setDerivedtransform","previousIndex","useDerivedTransform","getTransition","directions","sortableKeyboardCoordinates","filteredContainers","corners","rectCorners","distances","corner","effectiveDistance","closestCorners","closestId","newDroppable","newNode","offset","some","BColor","color","buttonValue","draggingStyles","blockDrag","noBorder","isStatic","cursorMove","staticElement","monitor","smallFont","runtime","onClickDigits","val","num","ButtonsArray","onSignClick","el","isRuntime","isBlockedDrag","columns","areaNotEmpty","constructorColumn","sortableContextItems","setActiveId","lastTouched","setLastTouched","idParse","useSensors","e","overIdSplitted","oldIndex","findIndex","constructorState","elementsColumn","tab"],"sourceRoot":""}